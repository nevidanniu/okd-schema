{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "rule", 
      "version": "v1alpha2", 
      "group": "config.istio.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "x-kubernetes-preserve-unknown-fields": true
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "Describes the rules used to configure Mixer's policy and telemetry features. See more details at: https://istio.io/docs/reference/config/policy-and-telemetry/istio.policy.v1beta1.html", 
      "properties": {
        "responseHeaderOperations": {
          "items": {
            "type": "object", 
            "properties": {
              "operation": {
                "enum": [
                  "REPLACE", 
                  "REMOVE", 
                  "APPEND"
                ], 
                "type": "string", 
                "description": "Header operation type."
              }, 
              "values": {
                "items": {
                  "type": "string", 
                  "format": "string"
                }, 
                "type": "array", 
                "description": "Header value expressions."
              }, 
              "name": {
                "type": "string", 
                "description": "Header name literal value.", 
                "format": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "requestHeaderOperations": {
          "items": {
            "type": "object", 
            "properties": {
              "operation": {
                "enum": [
                  "REPLACE", 
                  "REMOVE", 
                  "APPEND"
                ], 
                "type": "string", 
                "description": "Header operation type."
              }, 
              "values": {
                "items": {
                  "type": "string", 
                  "format": "string"
                }, 
                "type": "array", 
                "description": "Header value expressions."
              }, 
              "name": {
                "type": "string", 
                "description": "Header name literal value.", 
                "format": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "match": {
          "type": "string", 
          "description": "Match is an attribute based predicate.", 
          "format": "string"
        }, 
        "actions": {
          "items": {
            "type": "object", 
            "properties": {
              "instances": {
                "items": {
                  "type": "string", 
                  "format": "string"
                }, 
                "type": "array"
              }, 
              "handler": {
                "type": "string", 
                "description": "Fully qualified name of the handler to invoke.", 
                "format": "string"
              }, 
              "name": {
                "type": "string", 
                "description": "A handle to refer to the results of the action.", 
                "format": "string"
              }
            }
          }, 
          "type": "array", 
          "description": "The actions that will be executed when match evaluates to `true`."
        }, 
        "sampling": {
          "type": "object", 
          "properties": {
            "rateLimit": {
              "type": "object", 
              "properties": {
                "samplingRate": {
                  "type": "integer", 
                  "description": "The rate at which to sample entries once the unsampled limit has been reached.", 
                  "format": "int64"
                }, 
                "maxUnsampledEntries": {
                  "type": "integer", 
                  "description": "Number of entries to allow during the `sampling_duration` before sampling is enforced.", 
                  "format": "int64"
                }, 
                "samplingDuration": {
                  "type": "string", 
                  "description": "Window in which to enforce the sampling rate."
                }
              }
            }, 
            "random": {
              "type": "object", 
              "description": "Provides filtering of actions based on random selection per request.", 
              "properties": {
                "percentSampled": {
                  "type": "object", 
                  "description": "The default sampling rate, expressed as a percentage.", 
                  "properties": {
                    "denominator": {
                      "enum": [
                        "HUNDRED", 
                        "TEN_THOUSAND"
                      ], 
                      "type": "string", 
                      "description": "Specifies the denominator."
                    }, 
                    "numerator": {
                      "type": "integer", 
                      "description": "Specifies the numerator."
                    }
                  }
                }, 
                "attributeExpression": {
                  "type": "string", 
                  "description": "Specifies an attribute expression to use to override the numerator in the `percent_sampled` field.", 
                  "format": "string"
                }, 
                "useIndependentRandomness": {
                  "type": "boolean", 
                  "description": "By default sampling will be based on the value of the request header `x-request-id`."
                }
              }
            }
          }
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}