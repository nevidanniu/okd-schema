{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "ClusterAutoscaler", 
      "version": "v1", 
      "group": "autoscaling.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "ClusterAutoscaler is the Schema for the clusterautoscalers API", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "Most recently observed status of ClusterAutoscaler resource"
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "Desired state of ClusterAutoscaler resource", 
      "properties": {
        "maxNodeProvisionTime": {
          "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$", 
          "type": "string", 
          "description": "Maximum time CA waits for node to be provisioned"
        }, 
        "balanceSimilarNodeGroups": {
          "type": "boolean", 
          "description": "BalanceSimilarNodeGroups enables/disables the `--balance-similar-node-groups` cluster-autocaler feature. This feature will automatically identify node groups with the same instance type and the same set of labels and try to keep the respective sizes of those node groups balanced."
        }, 
        "skipNodesWithLocalStorage": {
          "type": "boolean", 
          "description": "Enables/Disables `--skip-nodes-with-local-storage` CA feature flag. If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath. true by default at autoscaler"
        }, 
        "scaleDown": {
          "required": [
            "enabled"
          ], 
          "type": "object", 
          "description": "Configuration of scale down operation", 
          "properties": {
            "delayAfterFailure": {
              "pattern": "([0-9]*(\\.[0-9]*)?[a-z]+)+", 
              "type": "string", 
              "description": "How long after scale down failure that scale down evaluation resumes"
            }, 
            "delayAfterAdd": {
              "pattern": "([0-9]*(\\.[0-9]*)?[a-z]+)+", 
              "type": "string", 
              "description": "How long after scale up that scale down evaluation resumes"
            }, 
            "delayAfterDelete": {
              "pattern": "([0-9]*(\\.[0-9]*)?[a-z]+)+", 
              "type": "string", 
              "description": "How long after node deletion that scale down evaluation resumes, defaults to scan-interval"
            }, 
            "enabled": {
              "type": "boolean", 
              "description": "Should CA scale down the cluster"
            }, 
            "unneededTime": {
              "pattern": "([0-9]*(\\.[0-9]*)?[a-z]+)+", 
              "type": "string", 
              "description": "How long a node should be unneeded before it is eligible for scale down"
            }
          }
        }, 
        "ignoreDaemonsetsUtilization": {
          "type": "boolean", 
          "description": "Enables/Disables `--ignore-daemonsets-utilization` CA feature flag. Should CA ignore DaemonSet pods when calculating resource utilization for scaling down. false by default"
        }, 
        "resourceLimits": {
          "type": "object", 
          "description": "Constraints of autoscaling resources", 
          "properties": {
            "cores": {
              "required": [
                "max", 
                "min"
              ], 
              "type": "object", 
              "description": "Minimum and maximum number of cores in cluster, in the format <min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers.", 
              "properties": {
                "max": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "min": {
                  "minimum": 0, 
                  "type": "integer", 
                  "format": "int32"
                }
              }
            }, 
            "memory": {
              "required": [
                "max", 
                "min"
              ], 
              "type": "object", 
              "description": "Minimum and maximum number of gigabytes of memory in cluster, in the format <min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers.", 
              "properties": {
                "max": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "min": {
                  "minimum": 0, 
                  "type": "integer", 
                  "format": "int32"
                }
              }
            }, 
            "maxNodesTotal": {
              "minimum": 0, 
              "type": "integer", 
              "description": "Maximum number of nodes in all node groups. Cluster autoscaler will not grow the cluster beyond this number.", 
              "format": "int32"
            }, 
            "gpus": {
              "items": {
                "required": [
                  "max", 
                  "min", 
                  "type"
                ], 
                "type": "object", 
                "properties": {
                  "max": {
                    "minimum": 1, 
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "type": {
                    "minLength": 1, 
                    "type": "string"
                  }, 
                  "min": {
                    "minimum": 0, 
                    "type": "integer", 
                    "format": "int32"
                  }
                }
              }, 
              "type": "array", 
              "description": "Minimum and maximum number of different GPUs in cluster, in the format <gpu_type>:<min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers. Can be passed multiple times."
            }
          }
        }, 
        "maxPodGracePeriod": {
          "type": "integer", 
          "description": "Gives pods graceful termination time before scaling down", 
          "format": "int32"
        }, 
        "podPriorityThreshold": {
          "type": "integer", 
          "description": "To allow users to schedule \"best-effort\" pods, which shouldn't trigger Cluster Autoscaler actions, but only run when there are spare resources available, More info: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption", 
          "format": "int32"
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}