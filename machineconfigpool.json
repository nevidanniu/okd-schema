{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "MachineConfigPool", 
      "version": "v1", 
      "group": "machineconfiguration.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "MachineConfigPool describes a pool of MachineConfigs.", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "MachineConfigPoolStatus is the status for MachineConfigPool resource.", 
      "properties": {
        "machineCount": {
          "type": "integer", 
          "description": "machineCount represents the total number of machines in the machine config pool.", 
          "format": "int32"
        }, 
        "updatedMachineCount": {
          "type": "integer", 
          "description": "updatedMachineCount represents the total number of machines targeted by the pool that have the CurrentMachineConfig as their config.", 
          "format": "int32"
        }, 
        "observedGeneration": {
          "type": "integer", 
          "description": "observedGeneration represents the generation observed by the controller.", 
          "format": "int64"
        }, 
        "unavailableMachineCount": {
          "type": "integer", 
          "description": "unavailableMachineCount represents the total number of unavailable (non-ready) machines targeted by the pool. A node is marked unavailable if it is in updating state or NodeReady condition is false.", 
          "format": "int32"
        }, 
        "degradedMachineCount": {
          "type": "integer", 
          "description": "degradedMachineCount represents the total number of machines marked degraded (or unreconcilable). A node is marked degraded if applying a configuration failed..", 
          "format": "int32"
        }, 
        "readyMachineCount": {
          "type": "integer", 
          "description": "readyMachineCount represents the total number of ready machines targeted by the pool.", 
          "format": "int32"
        }, 
        "configuration": {
          "type": "object", 
          "description": "configuration represents the current MachineConfig object for the machine config pool.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            }, 
            "namespace": {
              "type": "string", 
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
            }, 
            "apiVersion": {
              "type": "string", 
              "description": "API version of the referent."
            }, 
            "fieldPath": {
              "type": "string", 
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
            }, 
            "source": {
              "items": {
                "type": "object", 
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
                "properties": {
                  "kind": {
                    "type": "string", 
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  }, 
                  "namespace": {
                    "type": "string", 
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                  }, 
                  "apiVersion": {
                    "type": "string", 
                    "description": "API version of the referent."
                  }, 
                  "fieldPath": {
                    "type": "string", 
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
                  }, 
                  "resourceVersion": {
                    "type": "string", 
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                  }, 
                  "uid": {
                    "type": "string", 
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                  }
                }
              }, 
              "type": "array", 
              "description": "source is the list of MachineConfig objects that were used to generate the single MachineConfig object specified in `content`."
            }, 
            "resourceVersion": {
              "type": "string", 
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
            }, 
            "uid": {
              "type": "string", 
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
            }
          }
        }, 
        "conditions": {
          "items": {
            "type": "object", 
            "description": "MachineConfigPoolCondition contains condition information for an MachineConfigPool.", 
            "properties": {
              "status": {
                "type": "string", 
                "description": "status of the condition, one of ('True', 'False', 'Unknown')."
              }, 
              "type": {
                "type": "string", 
                "description": "type of the condition, currently ('Done', 'Updating', 'Failed')."
              }, 
              "message": {
                "type": "string", 
                "description": "message is a human readable description of the details of the last transition, complementing reason."
              }, 
              "lastTransitionTime": {
                "description": "lastTransitionTime is the timestamp corresponding to the last status change of this condition.", 
                "format": "date-time"
              }, 
              "reason": {
                "type": "string", 
                "description": "reason is a brief machine readable explanation for the condition's last transition."
              }
            }
          }, 
          "type": "array", 
          "description": "conditions represents the latest available observations of current state."
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "MachineConfigPoolSpec is the spec for MachineConfigPool resource.", 
      "properties": {
        "paused": {
          "type": "boolean", 
          "description": "paused specifies whether or not changes to this machine config pool should be stopped. This includes generating new desiredMachineConfig and update of machines."
        }, 
        "nodeSelector": {
          "type": "object", 
          "description": "nodeSelector specifies a label selector for Machines", 
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              }, 
              "type": "object", 
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
            }, 
            "matchExpressions": {
              "items": {
                "required": [
                  "key", 
                  "operator"
                ], 
                "type": "object", 
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                "properties": {
                  "operator": {
                    "type": "string", 
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                  }, 
                  "values": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "key is the label key that the selector applies to."
                  }
                }
              }, 
              "type": "array", 
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
            }
          }
        }, 
        "configuration": {
          "type": "object", 
          "description": "The targeted MachineConfig object for the machine config pool.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            }, 
            "namespace": {
              "type": "string", 
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
            }, 
            "apiVersion": {
              "type": "string", 
              "description": "API version of the referent."
            }, 
            "fieldPath": {
              "type": "string", 
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
            }, 
            "source": {
              "items": {
                "type": "object", 
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
                "properties": {
                  "kind": {
                    "type": "string", 
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  }, 
                  "namespace": {
                    "type": "string", 
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                  }, 
                  "apiVersion": {
                    "type": "string", 
                    "description": "API version of the referent."
                  }, 
                  "fieldPath": {
                    "type": "string", 
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
                  }, 
                  "resourceVersion": {
                    "type": "string", 
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                  }, 
                  "uid": {
                    "type": "string", 
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                  }
                }
              }, 
              "type": "array", 
              "description": "source is the list of MachineConfig objects that were used to generate the single MachineConfig object specified in `content`."
            }, 
            "resourceVersion": {
              "type": "string", 
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
            }, 
            "uid": {
              "type": "string", 
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
            }
          }
        }, 
        "maxUnavailable": {
          "description": "maxUnavailable specifies the percentage or constant number of machines that can be updating at any given time. default is 1.", 
          "x-kubernetes-int-or-string": true
        }, 
        "machineConfigSelector": {
          "type": "object", 
          "description": "machineConfigSelector specifies a label selector for MachineConfigs. Refer https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ on how label and selectors work.", 
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              }, 
              "type": "object", 
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
            }, 
            "matchExpressions": {
              "items": {
                "required": [
                  "key", 
                  "operator"
                ], 
                "type": "object", 
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                "properties": {
                  "operator": {
                    "type": "string", 
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                  }, 
                  "values": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "key is the label key that the selector applies to."
                  }
                }
              }, 
              "type": "array", 
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
            }
          }
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}