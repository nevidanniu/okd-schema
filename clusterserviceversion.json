{
  "description": "ClusterServiceVersion is a Custom Resource of type `ClusterServiceVersionSpec`.", 
  "required": [
    "metadata", 
    "spec"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "ClusterServiceVersion", 
      "version": "v1alpha1", 
      "group": "operators.coreos.com"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "ClusterServiceVersionStatus represents information about the status of a pod. Status may trail the actual state of a system.", 
      "properties": {
        "lastUpdateTime": {
          "type": "string", 
          "description": "Last time we updated the status", 
          "format": "date-time"
        }, 
        "certsRotateAt": {
          "type": "string", 
          "description": "Time the owned APIService certs will rotate next", 
          "format": "date-time"
        }, 
        "lastTransitionTime": {
          "type": "string", 
          "description": "Last time the status transitioned from one status to another.", 
          "format": "date-time"
        }, 
        "requirementStatus": {
          "items": {
            "required": [
              "group", 
              "kind", 
              "message", 
              "name", 
              "status", 
              "version"
            ], 
            "type": "object", 
            "properties": {
              "status": {
                "type": "string", 
                "description": "StatusReason is a camelcased reason for the status of a RequirementStatus or DependentStatus"
              }, 
              "kind": {
                "type": "string"
              }, 
              "group": {
                "type": "string"
              }, 
              "name": {
                "type": "string"
              }, 
              "version": {
                "type": "string"
              }, 
              "dependents": {
                "items": {
                  "required": [
                    "group", 
                    "kind", 
                    "status", 
                    "version"
                  ], 
                  "type": "object", 
                  "description": "DependentStatus is the status for a dependent requirement (to prevent infinite nesting)", 
                  "properties": {
                    "status": {
                      "type": "string", 
                      "description": "StatusReason is a camelcased reason for the status of a RequirementStatus or DependentStatus"
                    }, 
                    "kind": {
                      "type": "string"
                    }, 
                    "group": {
                      "type": "string"
                    }, 
                    "uuid": {
                      "type": "string"
                    }, 
                    "version": {
                      "type": "string"
                    }, 
                    "message": {
                      "type": "string"
                    }
                  }
                }, 
                "type": "array"
              }, 
              "message": {
                "type": "string"
              }, 
              "uuid": {
                "type": "string"
              }
            }
          }, 
          "type": "array", 
          "description": "The status of each requirement for this CSV"
        }, 
        "reason": {
          "type": "string", 
          "description": "A brief CamelCase message indicating details about why the ClusterServiceVersion is in this state. e.g. 'RequirementsNotMet'"
        }, 
        "certsLastUpdated": {
          "type": "string", 
          "description": "Last time the owned APIService certs were updated", 
          "format": "date-time"
        }, 
        "phase": {
          "type": "string", 
          "description": "Current condition of the ClusterServiceVersion"
        }, 
        "message": {
          "type": "string", 
          "description": "A human readable message indicating details about why the ClusterServiceVersion is in this condition."
        }, 
        "conditions": {
          "items": {
            "type": "object", 
            "description": "Conditions appear in the status as a record of state transitions on the ClusterServiceVersion", 
            "properties": {
              "phase": {
                "type": "string", 
                "description": "Condition of the ClusterServiceVersion"
              }, 
              "message": {
                "type": "string", 
                "description": "A human readable message indicating details about why the ClusterServiceVersion is in this condition."
              }, 
              "lastTransitionTime": {
                "type": "string", 
                "description": "Last time the status transitioned from one status to another.", 
                "format": "date-time"
              }, 
              "reason": {
                "type": "string", 
                "description": "A brief CamelCase message indicating details about why the ClusterServiceVersion is in this state. e.g. 'RequirementsNotMet'"
              }, 
              "lastUpdateTime": {
                "type": "string", 
                "description": "Last time we updated the status", 
                "format": "date-time"
              }
            }
          }, 
          "type": "array", 
          "description": "List of conditions, a history of state transitions"
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "displayName", 
        "install"
      ], 
      "type": "object", 
      "description": "ClusterServiceVersionSpec declarations tell OLM how to install an operator that can manage apps for a given version.", 
      "properties": {
        "customresourcedefinitions": {
          "type": "object", 
          "description": "CustomResourceDefinitions declares all of the CRDs managed or required by an operator being ran by ClusterServiceVersion. \n If the CRD is present in the Owned list, it is implicitly required.", 
          "properties": {
            "required": {
              "items": {
                "required": [
                  "kind", 
                  "name", 
                  "version"
                ], 
                "type": "object", 
                "description": "CRDDescription provides details to OLM about the CRDs", 
                "properties": {
                  "kind": {
                    "type": "string"
                  }, 
                  "displayName": {
                    "type": "string"
                  }, 
                  "statusDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "StatusDescriptor describes a field in a status block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "specDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "SpecDescriptor describes a field in a spec block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "actionDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "ActionDescriptor describes a declarative action that can be performed on a custom resource instance", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "name": {
                    "type": "string"
                  }, 
                  "version": {
                    "type": "string"
                  }, 
                  "resources": {
                    "items": {
                      "required": [
                        "kind", 
                        "name", 
                        "version"
                      ], 
                      "type": "object", 
                      "description": "APIResourceReference is a Kubernetes resource type used by a custom resource", 
                      "properties": {
                        "kind": {
                          "type": "string"
                        }, 
                        "version": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "description": {
                    "type": "string"
                  }
                }
              }, 
              "type": "array"
            }, 
            "owned": {
              "items": {
                "required": [
                  "kind", 
                  "name", 
                  "version"
                ], 
                "type": "object", 
                "description": "CRDDescription provides details to OLM about the CRDs", 
                "properties": {
                  "kind": {
                    "type": "string"
                  }, 
                  "displayName": {
                    "type": "string"
                  }, 
                  "statusDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "StatusDescriptor describes a field in a status block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "specDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "SpecDescriptor describes a field in a spec block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "actionDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "ActionDescriptor describes a declarative action that can be performed on a custom resource instance", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "name": {
                    "type": "string"
                  }, 
                  "version": {
                    "type": "string"
                  }, 
                  "resources": {
                    "items": {
                      "required": [
                        "kind", 
                        "name", 
                        "version"
                      ], 
                      "type": "object", 
                      "description": "APIResourceReference is a Kubernetes resource type used by a custom resource", 
                      "properties": {
                        "kind": {
                          "type": "string"
                        }, 
                        "version": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "description": {
                    "type": "string"
                  }
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "installModes": {
          "items": {
            "required": [
              "supported", 
              "type"
            ], 
            "type": "object", 
            "description": "InstallMode associates an InstallModeType with a flag representing if the CSV supports it", 
            "properties": {
              "supported": {
                "type": "boolean"
              }, 
              "type": {
                "type": "string", 
                "description": "InstallModeType is a supported type of install mode for CSV installation"
              }
            }
          }, 
          "type": "array", 
          "description": "InstallModes specify supported installation types"
        }, 
        "displayName": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "links": {
          "items": {
            "type": "object", 
            "properties": {
              "url": {
                "type": "string"
              }, 
              "name": {
                "type": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "apiservicedefinitions": {
          "type": "object", 
          "description": "APIServiceDefinitions declares all of the extension apis managed or required by an operator being ran by ClusterServiceVersion.", 
          "properties": {
            "required": {
              "items": {
                "required": [
                  "group", 
                  "kind", 
                  "name", 
                  "version"
                ], 
                "type": "object", 
                "description": "APIServiceDescription provides details to OLM about apis provided via aggregation", 
                "properties": {
                  "kind": {
                    "type": "string"
                  }, 
                  "group": {
                    "type": "string"
                  }, 
                  "name": {
                    "type": "string"
                  }, 
                  "specDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "SpecDescriptor describes a field in a spec block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "description": {
                    "type": "string"
                  }, 
                  "actionDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "ActionDescriptor describes a declarative action that can be performed on a custom resource instance", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "deploymentName": {
                    "type": "string"
                  }, 
                  "version": {
                    "type": "string"
                  }, 
                  "displayName": {
                    "type": "string"
                  }, 
                  "containerPort": {
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "resources": {
                    "items": {
                      "required": [
                        "kind", 
                        "name", 
                        "version"
                      ], 
                      "type": "object", 
                      "description": "APIResourceReference is a Kubernetes resource type used by a custom resource", 
                      "properties": {
                        "kind": {
                          "type": "string"
                        }, 
                        "version": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "statusDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "StatusDescriptor describes a field in a status block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }
                }
              }, 
              "type": "array"
            }, 
            "owned": {
              "items": {
                "required": [
                  "group", 
                  "kind", 
                  "name", 
                  "version"
                ], 
                "type": "object", 
                "description": "APIServiceDescription provides details to OLM about apis provided via aggregation", 
                "properties": {
                  "kind": {
                    "type": "string"
                  }, 
                  "group": {
                    "type": "string"
                  }, 
                  "name": {
                    "type": "string"
                  }, 
                  "specDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "SpecDescriptor describes a field in a spec block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "description": {
                    "type": "string"
                  }, 
                  "actionDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "ActionDescriptor describes a declarative action that can be performed on a custom resource instance", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "deploymentName": {
                    "type": "string"
                  }, 
                  "version": {
                    "type": "string"
                  }, 
                  "displayName": {
                    "type": "string"
                  }, 
                  "containerPort": {
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "resources": {
                    "items": {
                      "required": [
                        "kind", 
                        "name", 
                        "version"
                      ], 
                      "type": "object", 
                      "description": "APIResourceReference is a Kubernetes resource type used by a custom resource", 
                      "properties": {
                        "kind": {
                          "type": "string"
                        }, 
                        "version": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "statusDescriptors": {
                    "items": {
                      "required": [
                        "path"
                      ], 
                      "type": "object", 
                      "description": "StatusDescriptor describes a field in a status block of a CRD so that OLM can consume it", 
                      "properties": {
                        "x-descriptors": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array"
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "displayName": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.", 
                          "format": "byte"
                        }
                      }
                    }, 
                    "type": "array"
                  }
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "install": {
          "required": [
            "strategy"
          ], 
          "type": "object", 
          "description": "NamedInstallStrategy represents the block of an ClusterServiceVersion resource where the install strategy is specified.", 
          "properties": {
            "spec": {
              "required": [
                "deployments"
              ], 
              "type": "object", 
              "description": "StrategyDetailsDeployment represents the parsed details of a Deployment InstallStrategy.", 
              "properties": {
                "permissions": {
                  "items": {
                    "required": [
                      "rules", 
                      "serviceAccountName"
                    ], 
                    "type": "object", 
                    "description": "StrategyDeploymentPermissions describe the rbac rules and service account needed by the install strategy", 
                    "properties": {
                      "rules": {
                        "items": {
                          "required": [
                            "verbs"
                          ], 
                          "type": "object", 
                          "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.", 
                          "properties": {
                            "apiGroups": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
                            }, 
                            "verbs": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
                            }, 
                            "nonResourceURLs": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
                            }, 
                            "resources": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
                            }, 
                            "resourceNames": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
                            }
                          }
                        }, 
                        "type": "array"
                      }, 
                      "serviceAccountName": {
                        "type": "string"
                      }
                    }
                  }, 
                  "type": "array"
                }, 
                "clusterPermissions": {
                  "items": {
                    "required": [
                      "rules", 
                      "serviceAccountName"
                    ], 
                    "type": "object", 
                    "description": "StrategyDeploymentPermissions describe the rbac rules and service account needed by the install strategy", 
                    "properties": {
                      "rules": {
                        "items": {
                          "required": [
                            "verbs"
                          ], 
                          "type": "object", 
                          "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.", 
                          "properties": {
                            "apiGroups": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
                            }, 
                            "verbs": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
                            }, 
                            "nonResourceURLs": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
                            }, 
                            "resources": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
                            }, 
                            "resourceNames": {
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
                            }
                          }
                        }, 
                        "type": "array"
                      }, 
                      "serviceAccountName": {
                        "type": "string"
                      }
                    }
                  }, 
                  "type": "array"
                }, 
                "deployments": {
                  "items": {
                    "required": [
                      "name", 
                      "spec"
                    ], 
                    "type": "object", 
                    "description": "StrategyDeploymentSpec contains the name, spec and labels for the deployment ALM should create", 
                    "properties": {
                      "spec": {
                        "required": [
                          "selector", 
                          "template"
                        ], 
                        "type": "object", 
                        "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.", 
                        "properties": {
                          "replicas": {
                            "type": "integer", 
                            "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.", 
                            "format": "int32"
                          }, 
                          "selector": {
                            "type": "object", 
                            "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.", 
                            "properties": {
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                }, 
                                "type": "object", 
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              }, 
                              "matchExpressions": {
                                "items": {
                                  "required": [
                                    "key", 
                                    "operator"
                                  ], 
                                  "type": "object", 
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                  "properties": {
                                    "operator": {
                                      "type": "string", 
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                    }, 
                                    "values": {
                                      "items": {
                                        "type": "string"
                                      }, 
                                      "type": "array", 
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                    }, 
                                    "key": {
                                      "type": "string", 
                                      "description": "key is the label key that the selector applies to."
                                    }
                                  }
                                }, 
                                "type": "array", 
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              }
                            }
                          }, 
                          "paused": {
                            "type": "boolean", 
                            "description": "Indicates that the deployment is paused."
                          }, 
                          "strategy": {
                            "type": "object", 
                            "description": "The deployment strategy to use to replace existing pods with new ones.", 
                            "properties": {
                              "rollingUpdate": {
                                "type": "object", 
                                "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate. --- TODO: Update this to follow our convention for oneOf, whatever we decide it to be.", 
                                "properties": {
                                  "maxSurge": {
                                    "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.", 
                                    "x-kubernetes-int-or-string": true
                                  }, 
                                  "maxUnavailable": {
                                    "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.", 
                                    "x-kubernetes-int-or-string": true
                                  }
                                }
                              }, 
                              "type": {
                                "type": "string", 
                                "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
                              }
                            }
                          }, 
                          "template": {
                            "type": "object", 
                            "description": "Template describes the pods that will be created.", 
                            "properties": {
                              "spec": {
                                "required": [
                                  "containers"
                                ], 
                                "type": "object", 
                                "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status", 
                                "properties": {
                                  "dnsPolicy": {
                                    "type": "string", 
                                    "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
                                  }, 
                                  "hostNetwork": {
                                    "type": "boolean", 
                                    "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
                                  }, 
                                  "topologySpreadConstraints": {
                                    "items": {
                                      "required": [
                                        "maxSkew", 
                                        "topologyKey", 
                                        "whenUnsatisfiable"
                                      ], 
                                      "type": "object", 
                                      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.", 
                                      "properties": {
                                        "whenUnsatisfiable": {
                                          "type": "string", 
                                          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assigment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field."
                                        }, 
                                        "maxSkew": {
                                          "type": "integer", 
                                          "description": "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.", 
                                          "format": "int32"
                                        }, 
                                        "labelSelector": {
                                          "type": "object", 
                                          "description": "LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.", 
                                          "properties": {
                                            "matchLabels": {
                                              "additionalProperties": {
                                                "type": "string"
                                              }, 
                                              "type": "object", 
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            }, 
                                            "matchExpressions": {
                                              "items": {
                                                "required": [
                                                  "key", 
                                                  "operator"
                                                ], 
                                                "type": "object", 
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                "properties": {
                                                  "operator": {
                                                    "type": "string", 
                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                                  }, 
                                                  "values": {
                                                    "items": {
                                                      "type": "string"
                                                    }, 
                                                    "type": "array", 
                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                                  }, 
                                                  "key": {
                                                    "type": "string", 
                                                    "description": "key is the label key that the selector applies to."
                                                  }
                                                }
                                              }, 
                                              "type": "array", 
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            }
                                          }
                                        }, 
                                        "topologyKey": {
                                          "type": "string", 
                                          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. It's a required field."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.", 
                                    "x-kubernetes-list-map-keys": [
                                      "topologyKey", 
                                      "whenUnsatisfiable"
                                    ], 
                                    "x-kubernetes-list-type": "map"
                                  }, 
                                  "restartPolicy": {
                                    "type": "string", 
                                    "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy"
                                  }, 
                                  "automountServiceAccountToken": {
                                    "type": "boolean", 
                                    "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
                                  }, 
                                  "priorityClassName": {
                                    "type": "string", 
                                    "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default."
                                  }, 
                                  "securityContext": {
                                    "type": "object", 
                                    "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.", 
                                    "properties": {
                                      "seccompProfile": {
                                        "required": [
                                          "type"
                                        ], 
                                        "type": "object", 
                                        "description": "The seccomp options to use by the containers in this pod.", 
                                        "properties": {
                                          "localhostProfile": {
                                            "type": "string", 
                                            "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\"."
                                          }, 
                                          "type": {
                                            "type": "string", 
                                            "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                          }
                                        }
                                      }, 
                                      "runAsGroup": {
                                        "type": "integer", 
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.", 
                                        "format": "int64"
                                      }, 
                                      "runAsUser": {
                                        "type": "integer", 
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.", 
                                        "format": "int64"
                                      }, 
                                      "supplementalGroups": {
                                        "items": {
                                          "type": "integer", 
                                          "format": "int64"
                                        }, 
                                        "type": "array", 
                                        "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container."
                                      }, 
                                      "fsGroup": {
                                        "type": "integer", 
                                        "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: \n 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- \n If unset, the Kubelet will not modify the ownership and permissions of any volume.", 
                                        "format": "int64"
                                      }, 
                                      "sysctls": {
                                        "items": {
                                          "required": [
                                            "name", 
                                            "value"
                                          ], 
                                          "type": "object", 
                                          "description": "Sysctl defines a kernel parameter to be set", 
                                          "properties": {
                                            "name": {
                                              "type": "string", 
                                              "description": "Name of a property to set"
                                            }, 
                                            "value": {
                                              "type": "string", 
                                              "description": "Value of a property to set"
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch."
                                      }, 
                                      "runAsNonRoot": {
                                        "type": "boolean", 
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                      }, 
                                      "windowsOptions": {
                                        "type": "object", 
                                        "description": "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                        "properties": {
                                          "gmsaCredentialSpec": {
                                            "type": "string", 
                                            "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field."
                                          }, 
                                          "gmsaCredentialSpecName": {
                                            "type": "string", 
                                            "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                          }, 
                                          "runAsUserName": {
                                            "type": "string", 
                                            "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                          }
                                        }
                                      }, 
                                      "seLinuxOptions": {
                                        "type": "object", 
                                        "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.", 
                                        "properties": {
                                          "type": {
                                            "type": "string", 
                                            "description": "Type is a SELinux type label that applies to the container."
                                          }, 
                                          "role": {
                                            "type": "string", 
                                            "description": "Role is a SELinux role label that applies to the container."
                                          }, 
                                          "user": {
                                            "type": "string", 
                                            "description": "User is a SELinux user label that applies to the container."
                                          }, 
                                          "level": {
                                            "type": "string", 
                                            "description": "Level is SELinux level label that applies to the container."
                                          }
                                        }
                                      }, 
                                      "fsGroupChangePolicy": {
                                        "type": "string", 
                                        "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used."
                                      }
                                    }
                                  }, 
                                  "nodeName": {
                                    "type": "string", 
                                    "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
                                  }, 
                                  "hostAliases": {
                                    "items": {
                                      "type": "object", 
                                      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.", 
                                      "properties": {
                                        "ip": {
                                          "type": "string", 
                                          "description": "IP address of the host file entry."
                                        }, 
                                        "hostnames": {
                                          "items": {
                                            "type": "string"
                                          }, 
                                          "type": "array", 
                                          "description": "Hostnames for the above IP address."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods."
                                  }, 
                                  "hostname": {
                                    "type": "string", 
                                    "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
                                  }, 
                                  "serviceAccount": {
                                    "type": "string", 
                                    "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
                                  }, 
                                  "nodeSelector": {
                                    "additionalProperties": {
                                      "type": "string"
                                    }, 
                                    "type": "object", 
                                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
                                  }, 
                                  "priority": {
                                    "type": "integer", 
                                    "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.", 
                                    "format": "int32"
                                  }, 
                                  "affinity": {
                                    "type": "object", 
                                    "description": "If specified, the pod's scheduling constraints", 
                                    "properties": {
                                      "podAffinity": {
                                        "type": "object", 
                                        "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).", 
                                        "properties": {
                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "items": {
                                              "required": [
                                                "topologyKey"
                                              ], 
                                              "type": "object", 
                                              "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running", 
                                              "properties": {
                                                "labelSelector": {
                                                  "type": "object", 
                                                  "description": "A label query over a set of resources, in this case pods.", 
                                                  "properties": {
                                                    "matchLabels": {
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "object", 
                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    }, 
                                                    "matchExpressions": {
                                                      "items": {
                                                        "required": [
                                                          "key", 
                                                          "operator"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                        "properties": {
                                                          "operator": {
                                                            "type": "string", 
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                                          }, 
                                                          "values": {
                                                            "items": {
                                                              "type": "string"
                                                            }, 
                                                            "type": "array", 
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                                          }, 
                                                          "key": {
                                                            "type": "string", 
                                                            "description": "key is the label key that the selector applies to."
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    }
                                                  }
                                                }, 
                                                "namespaces": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\""
                                                }, 
                                                "topologyKey": {
                                                  "type": "string", 
                                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed."
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
                                          }, 
                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                            "items": {
                                              "required": [
                                                "podAffinityTerm", 
                                                "weight"
                                              ], 
                                              "type": "object", 
                                              "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)", 
                                              "properties": {
                                                "podAffinityTerm": {
                                                  "required": [
                                                    "topologyKey"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "Required. A pod affinity term, associated with the corresponding weight.", 
                                                  "properties": {
                                                    "labelSelector": {
                                                      "type": "object", 
                                                      "description": "A label query over a set of resources, in this case pods.", 
                                                      "properties": {
                                                        "matchLabels": {
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }, 
                                                          "type": "object", 
                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        }, 
                                                        "matchExpressions": {
                                                          "items": {
                                                            "required": [
                                                              "key", 
                                                              "operator"
                                                            ], 
                                                            "type": "object", 
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                            "properties": {
                                                              "operator": {
                                                                "type": "string", 
                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                                              }, 
                                                              "values": {
                                                                "items": {
                                                                  "type": "string"
                                                                }, 
                                                                "type": "array", 
                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                                              }, 
                                                              "key": {
                                                                "type": "string", 
                                                                "description": "key is the label key that the selector applies to."
                                                              }
                                                            }
                                                          }, 
                                                          "type": "array", 
                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        }
                                                      }
                                                    }, 
                                                    "namespaces": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\""
                                                    }, 
                                                    "topologyKey": {
                                                      "type": "string", 
                                                      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed."
                                                    }
                                                  }
                                                }, 
                                                "weight": {
                                                  "type": "integer", 
                                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.", 
                                                  "format": "int32"
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
                                          }
                                        }
                                      }, 
                                      "nodeAffinity": {
                                        "type": "object", 
                                        "description": "Describes node affinity scheduling rules for the pod.", 
                                        "properties": {
                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "required": [
                                              "nodeSelectorTerms"
                                            ], 
                                            "type": "object", 
                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.", 
                                            "properties": {
                                              "nodeSelectorTerms": {
                                                "items": {
                                                  "type": "object", 
                                                  "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.", 
                                                  "properties": {
                                                    "matchFields": {
                                                      "items": {
                                                        "required": [
                                                          "key", 
                                                          "operator"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                        "properties": {
                                                          "operator": {
                                                            "type": "string", 
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          }, 
                                                          "values": {
                                                            "items": {
                                                              "type": "string"
                                                            }, 
                                                            "type": "array", 
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
                                                          }, 
                                                          "key": {
                                                            "type": "string", 
                                                            "description": "The label key that the selector applies to."
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "A list of node selector requirements by node's fields."
                                                    }, 
                                                    "matchExpressions": {
                                                      "items": {
                                                        "required": [
                                                          "key", 
                                                          "operator"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                        "properties": {
                                                          "operator": {
                                                            "type": "string", 
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          }, 
                                                          "values": {
                                                            "items": {
                                                              "type": "string"
                                                            }, 
                                                            "type": "array", 
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
                                                          }, 
                                                          "key": {
                                                            "type": "string", 
                                                            "description": "The label key that the selector applies to."
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "A list of node selector requirements by node's labels."
                                                    }
                                                  }
                                                }, 
                                                "type": "array", 
                                                "description": "Required. A list of node selector terms. The terms are ORed."
                                              }
                                            }
                                          }, 
                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                            "items": {
                                              "required": [
                                                "preference", 
                                                "weight"
                                              ], 
                                              "type": "object", 
                                              "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).", 
                                              "properties": {
                                                "preference": {
                                                  "type": "object", 
                                                  "description": "A node selector term, associated with the corresponding weight.", 
                                                  "properties": {
                                                    "matchFields": {
                                                      "items": {
                                                        "required": [
                                                          "key", 
                                                          "operator"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                        "properties": {
                                                          "operator": {
                                                            "type": "string", 
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          }, 
                                                          "values": {
                                                            "items": {
                                                              "type": "string"
                                                            }, 
                                                            "type": "array", 
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
                                                          }, 
                                                          "key": {
                                                            "type": "string", 
                                                            "description": "The label key that the selector applies to."
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "A list of node selector requirements by node's fields."
                                                    }, 
                                                    "matchExpressions": {
                                                      "items": {
                                                        "required": [
                                                          "key", 
                                                          "operator"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                        "properties": {
                                                          "operator": {
                                                            "type": "string", 
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          }, 
                                                          "values": {
                                                            "items": {
                                                              "type": "string"
                                                            }, 
                                                            "type": "array", 
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
                                                          }, 
                                                          "key": {
                                                            "type": "string", 
                                                            "description": "The label key that the selector applies to."
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "A list of node selector requirements by node's labels."
                                                    }
                                                  }
                                                }, 
                                                "weight": {
                                                  "type": "integer", 
                                                  "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.", 
                                                  "format": "int32"
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred."
                                          }
                                        }
                                      }, 
                                      "podAntiAffinity": {
                                        "type": "object", 
                                        "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).", 
                                        "properties": {
                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "items": {
                                              "required": [
                                                "topologyKey"
                                              ], 
                                              "type": "object", 
                                              "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running", 
                                              "properties": {
                                                "labelSelector": {
                                                  "type": "object", 
                                                  "description": "A label query over a set of resources, in this case pods.", 
                                                  "properties": {
                                                    "matchLabels": {
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "object", 
                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    }, 
                                                    "matchExpressions": {
                                                      "items": {
                                                        "required": [
                                                          "key", 
                                                          "operator"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                        "properties": {
                                                          "operator": {
                                                            "type": "string", 
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                                          }, 
                                                          "values": {
                                                            "items": {
                                                              "type": "string"
                                                            }, 
                                                            "type": "array", 
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                                          }, 
                                                          "key": {
                                                            "type": "string", 
                                                            "description": "key is the label key that the selector applies to."
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    }
                                                  }
                                                }, 
                                                "namespaces": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\""
                                                }, 
                                                "topologyKey": {
                                                  "type": "string", 
                                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed."
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
                                          }, 
                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                            "items": {
                                              "required": [
                                                "podAffinityTerm", 
                                                "weight"
                                              ], 
                                              "type": "object", 
                                              "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)", 
                                              "properties": {
                                                "podAffinityTerm": {
                                                  "required": [
                                                    "topologyKey"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "Required. A pod affinity term, associated with the corresponding weight.", 
                                                  "properties": {
                                                    "labelSelector": {
                                                      "type": "object", 
                                                      "description": "A label query over a set of resources, in this case pods.", 
                                                      "properties": {
                                                        "matchLabels": {
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }, 
                                                          "type": "object", 
                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        }, 
                                                        "matchExpressions": {
                                                          "items": {
                                                            "required": [
                                                              "key", 
                                                              "operator"
                                                            ], 
                                                            "type": "object", 
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                            "properties": {
                                                              "operator": {
                                                                "type": "string", 
                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                                              }, 
                                                              "values": {
                                                                "items": {
                                                                  "type": "string"
                                                                }, 
                                                                "type": "array", 
                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                                              }, 
                                                              "key": {
                                                                "type": "string", 
                                                                "description": "key is the label key that the selector applies to."
                                                              }
                                                            }
                                                          }, 
                                                          "type": "array", 
                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        }
                                                      }
                                                    }, 
                                                    "namespaces": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\""
                                                    }, 
                                                    "topologyKey": {
                                                      "type": "string", 
                                                      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed."
                                                    }
                                                  }
                                                }, 
                                                "weight": {
                                                  "type": "integer", 
                                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.", 
                                                  "format": "int32"
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
                                          }
                                        }
                                      }
                                    }
                                  }, 
                                  "overhead": {
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                      "x-kubernetes-int-or-string": true
                                    }, 
                                    "type": "object", 
                                    "description": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.16, and is only honored by servers that enable the PodOverhead feature."
                                  }, 
                                  "subdomain": {
                                    "type": "string", 
                                    "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
                                  }, 
                                  "hostPID": {
                                    "type": "boolean", 
                                    "description": "Use the host's pid namespace. Optional: Default to false."
                                  }, 
                                  "preemptionPolicy": {
                                    "type": "string", 
                                    "description": "PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is beta-level, gated by the NonPreemptingPriority feature-gate."
                                  }, 
                                  "shareProcessNamespace": {
                                    "type": "boolean", 
                                    "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false."
                                  }, 
                                  "serviceAccountName": {
                                    "type": "string", 
                                    "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
                                  }, 
                                  "schedulerName": {
                                    "type": "string", 
                                    "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler."
                                  }, 
                                  "setHostnameAsFQDN": {
                                    "type": "boolean", 
                                    "description": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false."
                                  }, 
                                  "enableServiceLinks": {
                                    "type": "boolean", 
                                    "description": "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true."
                                  }, 
                                  "hostIPC": {
                                    "type": "boolean", 
                                    "description": "Use the host's ipc namespace. Optional: Default to false."
                                  }, 
                                  "ephemeralContainers": {
                                    "items": {
                                      "required": [
                                        "name"
                                      ], 
                                      "type": "object", 
                                      "description": "An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.", 
                                      "properties": {
                                        "livenessProbe": {
                                          "type": "object", 
                                          "description": "Probes are not allowed for ephemeral containers.", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "workingDir": {
                                          "type": "string", 
                                          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                                        }, 
                                        "image": {
                                          "type": "string", 
                                          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images"
                                        }, 
                                        "volumeMounts": {
                                          "items": {
                                            "required": [
                                              "mountPath", 
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "VolumeMount describes a mounting of a Volume within a container.", 
                                            "properties": {
                                              "mountPath": {
                                                "type": "string", 
                                                "description": "Path within the container at which the volume should be mounted.  Must not contain ':'."
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "This must match the Name of a Volume."
                                              }, 
                                              "subPath": {
                                                "type": "string", 
                                                "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                              }, 
                                              "readOnly": {
                                                "type": "boolean", 
                                                "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
                                              }, 
                                              "mountPropagation": {
                                                "type": "string", 
                                                "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10."
                                              }, 
                                              "subPathExpr": {
                                                "type": "string", 
                                                "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated."
                                        }, 
                                        "tty": {
                                          "type": "boolean", 
                                          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
                                        }, 
                                        "securityContext": {
                                          "type": "object", 
                                          "description": "SecurityContext is not allowed for ephemeral containers.", 
                                          "properties": {
                                            "readOnlyRootFilesystem": {
                                              "type": "boolean", 
                                              "description": "Whether this container has a read-only root filesystem. Default is false."
                                            }, 
                                            "seccompProfile": {
                                              "required": [
                                                "type"
                                              ], 
                                              "type": "object", 
                                              "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.", 
                                              "properties": {
                                                "localhostProfile": {
                                                  "type": "string", 
                                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\"."
                                                }, 
                                                "type": {
                                                  "type": "string", 
                                                  "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                                }
                                              }
                                            }, 
                                            "runAsGroup": {
                                              "type": "integer", 
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "format": "int64"
                                            }, 
                                            "runAsUser": {
                                              "type": "integer", 
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "format": "int64"
                                            }, 
                                            "allowPrivilegeEscalation": {
                                              "type": "boolean", 
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
                                            }, 
                                            "procMount": {
                                              "type": "string", 
                                              "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled."
                                            }, 
                                            "runAsNonRoot": {
                                              "type": "boolean", 
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                            }, 
                                            "windowsOptions": {
                                              "type": "object", 
                                              "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "properties": {
                                                "gmsaCredentialSpec": {
                                                  "type": "string", 
                                                  "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field."
                                                }, 
                                                "gmsaCredentialSpecName": {
                                                  "type": "string", 
                                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                                }, 
                                                "runAsUserName": {
                                                  "type": "string", 
                                                  "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                                }
                                              }
                                            }, 
                                            "seLinuxOptions": {
                                              "type": "object", 
                                              "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "properties": {
                                                "type": {
                                                  "type": "string", 
                                                  "description": "Type is a SELinux type label that applies to the container."
                                                }, 
                                                "role": {
                                                  "type": "string", 
                                                  "description": "Role is a SELinux role label that applies to the container."
                                                }, 
                                                "user": {
                                                  "type": "string", 
                                                  "description": "User is a SELinux user label that applies to the container."
                                                }, 
                                                "level": {
                                                  "type": "string", 
                                                  "description": "Level is SELinux level label that applies to the container."
                                                }
                                              }
                                            }, 
                                            "capabilities": {
                                              "type": "object", 
                                              "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.", 
                                              "properties": {
                                                "add": {
                                                  "items": {
                                                    "type": "string", 
                                                    "description": "Capability represent POSIX capabilities type"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Added capabilities"
                                                }, 
                                                "drop": {
                                                  "items": {
                                                    "type": "string", 
                                                    "description": "Capability represent POSIX capabilities type"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Removed capabilities"
                                                }
                                              }
                                            }, 
                                            "privileged": {
                                              "type": "boolean", 
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false."
                                            }
                                          }
                                        }, 
                                        "envFrom": {
                                          "items": {
                                            "type": "object", 
                                            "description": "EnvFromSource represents the source of a set of ConfigMaps", 
                                            "properties": {
                                              "prefix": {
                                                "type": "string", 
                                                "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                              }, 
                                              "configMapRef": {
                                                "type": "object", 
                                                "description": "The ConfigMap to select from", 
                                                "properties": {
                                                  "optional": {
                                                    "type": "boolean", 
                                                    "description": "Specify whether the ConfigMap must be defined"
                                                  }, 
                                                  "name": {
                                                    "type": "string", 
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                  }
                                                }
                                              }, 
                                              "secretRef": {
                                                "type": "object", 
                                                "description": "The Secret to select from", 
                                                "properties": {
                                                  "optional": {
                                                    "type": "boolean", 
                                                    "description": "Specify whether the Secret must be defined"
                                                  }, 
                                                  "name": {
                                                    "type": "string", 
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                  }
                                                }
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
                                        }, 
                                        "stdinOnce": {
                                          "type": "boolean", 
                                          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
                                        }, 
                                        "env": {
                                          "items": {
                                            "required": [
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "EnvVar represents an environment variable present in a Container.", 
                                            "properties": {
                                              "valueFrom": {
                                                "type": "object", 
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.", 
                                                "properties": {
                                                  "secretKeyRef": {
                                                    "required": [
                                                      "key"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a key of a secret in the pod's namespace", 
                                                    "properties": {
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the Secret or its key must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }, 
                                                      "key": {
                                                        "type": "string", 
                                                        "description": "The key of the secret to select from.  Must be a valid secret key."
                                                      }
                                                    }
                                                  }, 
                                                  "fieldRef": {
                                                    "required": [
                                                      "fieldPath"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.", 
                                                    "properties": {
                                                      "fieldPath": {
                                                        "type": "string", 
                                                        "description": "Path of the field to select in the specified API version."
                                                      }, 
                                                      "apiVersion": {
                                                        "type": "string", 
                                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                      }
                                                    }
                                                  }, 
                                                  "resourceFieldRef": {
                                                    "required": [
                                                      "resource"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.", 
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string", 
                                                        "description": "Container name: required for volumes, optional for env vars"
                                                      }, 
                                                      "resource": {
                                                        "type": "string", 
                                                        "description": "Required: resource to select"
                                                      }, 
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"", 
                                                        "x-kubernetes-int-or-string": true
                                                      }
                                                    }
                                                  }, 
                                                  "configMapKeyRef": {
                                                    "required": [
                                                      "key"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a key of a ConfigMap.", 
                                                    "properties": {
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the ConfigMap or its key must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }, 
                                                      "key": {
                                                        "type": "string", 
                                                        "description": "The key to select."
                                                      }
                                                    }
                                                  }
                                                }
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER."
                                              }, 
                                              "value": {
                                                "type": "string", 
                                                "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of environment variables to set in the container. Cannot be updated."
                                        }, 
                                        "readinessProbe": {
                                          "type": "object", 
                                          "description": "Probes are not allowed for ephemeral containers.", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "resources": {
                                          "type": "object", 
                                          "description": "Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.", 
                                          "properties": {
                                            "requests": {
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                "x-kubernetes-int-or-string": true
                                              }, 
                                              "type": "object", 
                                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                            }, 
                                            "limits": {
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                "x-kubernetes-int-or-string": true
                                              }, 
                                              "type": "object", 
                                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                            }
                                          }
                                        }, 
                                        "terminationMessagePath": {
                                          "type": "string", 
                                          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                                        }, 
                                        "args": {
                                          "items": {
                                            "type": "string"
                                          }, 
                                          "type": "array", 
                                          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                        }, 
                                        "lifecycle": {
                                          "type": "object", 
                                          "description": "Lifecycle is not allowed for ephemeral containers.", 
                                          "properties": {
                                            "preStop": {
                                              "type": "object", 
                                              "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                              "properties": {
                                                "httpGet": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPGet specifies the http request to perform.", 
                                                  "properties": {
                                                    "path": {
                                                      "type": "string", 
                                                      "description": "Path to access on the HTTP server."
                                                    }, 
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                    }, 
                                                    "scheme": {
                                                      "type": "string", 
                                                      "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                    }, 
                                                    "httpHeaders": {
                                                      "items": {
                                                        "required": [
                                                          "name", 
                                                          "value"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                        "properties": {
                                                          "name": {
                                                            "type": "string", 
                                                            "description": "The header field name"
                                                          }, 
                                                          "value": {
                                                            "type": "string", 
                                                            "description": "The header field value"
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                    }, 
                                                    "port": {
                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "tcpSocket": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                                  "properties": {
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                    }, 
                                                    "port": {
                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "exec": {
                                                  "type": "object", 
                                                  "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                                  "properties": {
                                                    "command": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                    }
                                                  }
                                                }
                                              }
                                            }, 
                                            "postStart": {
                                              "type": "object", 
                                              "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                              "properties": {
                                                "httpGet": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPGet specifies the http request to perform.", 
                                                  "properties": {
                                                    "path": {
                                                      "type": "string", 
                                                      "description": "Path to access on the HTTP server."
                                                    }, 
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                    }, 
                                                    "scheme": {
                                                      "type": "string", 
                                                      "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                    }, 
                                                    "httpHeaders": {
                                                      "items": {
                                                        "required": [
                                                          "name", 
                                                          "value"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                        "properties": {
                                                          "name": {
                                                            "type": "string", 
                                                            "description": "The header field name"
                                                          }, 
                                                          "value": {
                                                            "type": "string", 
                                                            "description": "The header field value"
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                    }, 
                                                    "port": {
                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "tcpSocket": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                                  "properties": {
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                    }, 
                                                    "port": {
                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "exec": {
                                                  "type": "object", 
                                                  "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                                  "properties": {
                                                    "command": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers."
                                        }, 
                                        "volumeDevices": {
                                          "items": {
                                            "required": [
                                              "devicePath", 
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "volumeDevice describes a mapping of a raw block device within a container.", 
                                            "properties": {
                                              "devicePath": {
                                                "type": "string", 
                                                "description": "devicePath is the path inside of the container that the device will be mapped to."
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "name must match the name of a persistentVolumeClaim in the pod"
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "volumeDevices is the list of block devices to be used by the container."
                                        }, 
                                        "stdin": {
                                          "type": "boolean", 
                                          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
                                        }, 
                                        "terminationMessagePolicy": {
                                          "type": "string", 
                                          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
                                        }, 
                                        "command": {
                                          "items": {
                                            "type": "string"
                                          }, 
                                          "type": "array", 
                                          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                        }, 
                                        "imagePullPolicy": {
                                          "type": "string", 
                                          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                        }, 
                                        "startupProbe": {
                                          "type": "object", 
                                          "description": "Probes are not allowed for ephemeral containers.", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "ports": {
                                          "items": {
                                            "required": [
                                              "containerPort"
                                            ], 
                                            "type": "object", 
                                            "description": "ContainerPort represents a network port in a single container.", 
                                            "properties": {
                                              "hostPort": {
                                                "type": "integer", 
                                                "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.", 
                                                "format": "int32"
                                              }, 
                                              "protocol": {
                                                "type": "string", 
                                                "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\"."
                                              }, 
                                              "containerPort": {
                                                "type": "integer", 
                                                "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.", 
                                                "format": "int32"
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
                                              }, 
                                              "hostIP": {
                                                "type": "string", 
                                                "description": "What host IP to bind the external port to."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "Ports are not allowed for ephemeral containers."
                                        }, 
                                        "targetContainerName": {
                                          "type": "string", 
                                          "description": "If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature."
                                  }, 
                                  "runtimeClassName": {
                                    "type": "string", 
                                    "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14."
                                  }, 
                                  "dnsConfig": {
                                    "type": "object", 
                                    "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.", 
                                    "properties": {
                                      "nameservers": {
                                        "items": {
                                          "type": "string"
                                        }, 
                                        "type": "array", 
                                        "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed."
                                      }, 
                                      "searches": {
                                        "items": {
                                          "type": "string"
                                        }, 
                                        "type": "array", 
                                        "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed."
                                      }, 
                                      "options": {
                                        "items": {
                                          "type": "object", 
                                          "description": "PodDNSConfigOption defines DNS resolver options of a pod.", 
                                          "properties": {
                                            "name": {
                                              "type": "string", 
                                              "description": "Required."
                                            }, 
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy."
                                      }
                                    }
                                  }, 
                                  "activeDeadlineSeconds": {
                                    "type": "integer", 
                                    "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.", 
                                    "format": "int64"
                                  }, 
                                  "terminationGracePeriodSeconds": {
                                    "type": "integer", 
                                    "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.", 
                                    "format": "int64"
                                  }, 
                                  "readinessGates": {
                                    "items": {
                                      "required": [
                                        "conditionType"
                                      ], 
                                      "type": "object", 
                                      "description": "PodReadinessGate contains the reference to a pod condition", 
                                      "properties": {
                                        "conditionType": {
                                          "type": "string", 
                                          "description": "ConditionType refers to a condition in the pod's condition list with matching type."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md"
                                  }, 
                                  "containers": {
                                    "items": {
                                      "required": [
                                        "name"
                                      ], 
                                      "type": "object", 
                                      "description": "A single application container that you want to run within a pod.", 
                                      "properties": {
                                        "livenessProbe": {
                                          "type": "object", 
                                          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "workingDir": {
                                          "type": "string", 
                                          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                                        }, 
                                        "image": {
                                          "type": "string", 
                                          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
                                        }, 
                                        "volumeMounts": {
                                          "items": {
                                            "required": [
                                              "mountPath", 
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "VolumeMount describes a mounting of a Volume within a container.", 
                                            "properties": {
                                              "mountPath": {
                                                "type": "string", 
                                                "description": "Path within the container at which the volume should be mounted.  Must not contain ':'."
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "This must match the Name of a Volume."
                                              }, 
                                              "subPath": {
                                                "type": "string", 
                                                "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                              }, 
                                              "readOnly": {
                                                "type": "boolean", 
                                                "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
                                              }, 
                                              "mountPropagation": {
                                                "type": "string", 
                                                "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10."
                                              }, 
                                              "subPathExpr": {
                                                "type": "string", 
                                                "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated."
                                        }, 
                                        "tty": {
                                          "type": "boolean", 
                                          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
                                        }, 
                                        "securityContext": {
                                          "type": "object", 
                                          "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/", 
                                          "properties": {
                                            "readOnlyRootFilesystem": {
                                              "type": "boolean", 
                                              "description": "Whether this container has a read-only root filesystem. Default is false."
                                            }, 
                                            "seccompProfile": {
                                              "required": [
                                                "type"
                                              ], 
                                              "type": "object", 
                                              "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.", 
                                              "properties": {
                                                "localhostProfile": {
                                                  "type": "string", 
                                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\"."
                                                }, 
                                                "type": {
                                                  "type": "string", 
                                                  "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                                }
                                              }
                                            }, 
                                            "runAsGroup": {
                                              "type": "integer", 
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "format": "int64"
                                            }, 
                                            "runAsUser": {
                                              "type": "integer", 
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "format": "int64"
                                            }, 
                                            "allowPrivilegeEscalation": {
                                              "type": "boolean", 
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
                                            }, 
                                            "procMount": {
                                              "type": "string", 
                                              "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled."
                                            }, 
                                            "runAsNonRoot": {
                                              "type": "boolean", 
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                            }, 
                                            "windowsOptions": {
                                              "type": "object", 
                                              "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "properties": {
                                                "gmsaCredentialSpec": {
                                                  "type": "string", 
                                                  "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field."
                                                }, 
                                                "gmsaCredentialSpecName": {
                                                  "type": "string", 
                                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                                }, 
                                                "runAsUserName": {
                                                  "type": "string", 
                                                  "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                                }
                                              }
                                            }, 
                                            "seLinuxOptions": {
                                              "type": "object", 
                                              "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "properties": {
                                                "type": {
                                                  "type": "string", 
                                                  "description": "Type is a SELinux type label that applies to the container."
                                                }, 
                                                "role": {
                                                  "type": "string", 
                                                  "description": "Role is a SELinux role label that applies to the container."
                                                }, 
                                                "user": {
                                                  "type": "string", 
                                                  "description": "User is a SELinux user label that applies to the container."
                                                }, 
                                                "level": {
                                                  "type": "string", 
                                                  "description": "Level is SELinux level label that applies to the container."
                                                }
                                              }
                                            }, 
                                            "capabilities": {
                                              "type": "object", 
                                              "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.", 
                                              "properties": {
                                                "add": {
                                                  "items": {
                                                    "type": "string", 
                                                    "description": "Capability represent POSIX capabilities type"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Added capabilities"
                                                }, 
                                                "drop": {
                                                  "items": {
                                                    "type": "string", 
                                                    "description": "Capability represent POSIX capabilities type"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Removed capabilities"
                                                }
                                              }
                                            }, 
                                            "privileged": {
                                              "type": "boolean", 
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false."
                                            }
                                          }
                                        }, 
                                        "envFrom": {
                                          "items": {
                                            "type": "object", 
                                            "description": "EnvFromSource represents the source of a set of ConfigMaps", 
                                            "properties": {
                                              "prefix": {
                                                "type": "string", 
                                                "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                              }, 
                                              "configMapRef": {
                                                "type": "object", 
                                                "description": "The ConfigMap to select from", 
                                                "properties": {
                                                  "optional": {
                                                    "type": "boolean", 
                                                    "description": "Specify whether the ConfigMap must be defined"
                                                  }, 
                                                  "name": {
                                                    "type": "string", 
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                  }
                                                }
                                              }, 
                                              "secretRef": {
                                                "type": "object", 
                                                "description": "The Secret to select from", 
                                                "properties": {
                                                  "optional": {
                                                    "type": "boolean", 
                                                    "description": "Specify whether the Secret must be defined"
                                                  }, 
                                                  "name": {
                                                    "type": "string", 
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                  }
                                                }
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
                                        }, 
                                        "stdinOnce": {
                                          "type": "boolean", 
                                          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
                                        }, 
                                        "env": {
                                          "items": {
                                            "required": [
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "EnvVar represents an environment variable present in a Container.", 
                                            "properties": {
                                              "valueFrom": {
                                                "type": "object", 
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.", 
                                                "properties": {
                                                  "secretKeyRef": {
                                                    "required": [
                                                      "key"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a key of a secret in the pod's namespace", 
                                                    "properties": {
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the Secret or its key must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }, 
                                                      "key": {
                                                        "type": "string", 
                                                        "description": "The key of the secret to select from.  Must be a valid secret key."
                                                      }
                                                    }
                                                  }, 
                                                  "fieldRef": {
                                                    "required": [
                                                      "fieldPath"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.", 
                                                    "properties": {
                                                      "fieldPath": {
                                                        "type": "string", 
                                                        "description": "Path of the field to select in the specified API version."
                                                      }, 
                                                      "apiVersion": {
                                                        "type": "string", 
                                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                      }
                                                    }
                                                  }, 
                                                  "resourceFieldRef": {
                                                    "required": [
                                                      "resource"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.", 
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string", 
                                                        "description": "Container name: required for volumes, optional for env vars"
                                                      }, 
                                                      "resource": {
                                                        "type": "string", 
                                                        "description": "Required: resource to select"
                                                      }, 
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"", 
                                                        "x-kubernetes-int-or-string": true
                                                      }
                                                    }
                                                  }, 
                                                  "configMapKeyRef": {
                                                    "required": [
                                                      "key"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a key of a ConfigMap.", 
                                                    "properties": {
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the ConfigMap or its key must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }, 
                                                      "key": {
                                                        "type": "string", 
                                                        "description": "The key to select."
                                                      }
                                                    }
                                                  }
                                                }
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER."
                                              }, 
                                              "value": {
                                                "type": "string", 
                                                "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of environment variables to set in the container. Cannot be updated."
                                        }, 
                                        "readinessProbe": {
                                          "type": "object", 
                                          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "resources": {
                                          "type": "object", 
                                          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/", 
                                          "properties": {
                                            "requests": {
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                "x-kubernetes-int-or-string": true
                                              }, 
                                              "type": "object", 
                                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                            }, 
                                            "limits": {
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                "x-kubernetes-int-or-string": true
                                              }, 
                                              "type": "object", 
                                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                            }
                                          }
                                        }, 
                                        "terminationMessagePath": {
                                          "type": "string", 
                                          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                                        }, 
                                        "args": {
                                          "items": {
                                            "type": "string"
                                          }, 
                                          "type": "array", 
                                          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                        }, 
                                        "lifecycle": {
                                          "type": "object", 
                                          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.", 
                                          "properties": {
                                            "preStop": {
                                              "type": "object", 
                                              "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                              "properties": {
                                                "httpGet": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPGet specifies the http request to perform.", 
                                                  "properties": {
                                                    "path": {
                                                      "type": "string", 
                                                      "description": "Path to access on the HTTP server."
                                                    }, 
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                    }, 
                                                    "scheme": {
                                                      "type": "string", 
                                                      "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                    }, 
                                                    "httpHeaders": {
                                                      "items": {
                                                        "required": [
                                                          "name", 
                                                          "value"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                        "properties": {
                                                          "name": {
                                                            "type": "string", 
                                                            "description": "The header field name"
                                                          }, 
                                                          "value": {
                                                            "type": "string", 
                                                            "description": "The header field value"
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                    }, 
                                                    "port": {
                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "tcpSocket": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                                  "properties": {
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                    }, 
                                                    "port": {
                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "exec": {
                                                  "type": "object", 
                                                  "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                                  "properties": {
                                                    "command": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                    }
                                                  }
                                                }
                                              }
                                            }, 
                                            "postStart": {
                                              "type": "object", 
                                              "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                              "properties": {
                                                "httpGet": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPGet specifies the http request to perform.", 
                                                  "properties": {
                                                    "path": {
                                                      "type": "string", 
                                                      "description": "Path to access on the HTTP server."
                                                    }, 
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                    }, 
                                                    "scheme": {
                                                      "type": "string", 
                                                      "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                    }, 
                                                    "httpHeaders": {
                                                      "items": {
                                                        "required": [
                                                          "name", 
                                                          "value"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                        "properties": {
                                                          "name": {
                                                            "type": "string", 
                                                            "description": "The header field name"
                                                          }, 
                                                          "value": {
                                                            "type": "string", 
                                                            "description": "The header field value"
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                    }, 
                                                    "port": {
                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "tcpSocket": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                                  "properties": {
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                    }, 
                                                    "port": {
                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "exec": {
                                                  "type": "object", 
                                                  "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                                  "properties": {
                                                    "command": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                                        }, 
                                        "volumeDevices": {
                                          "items": {
                                            "required": [
                                              "devicePath", 
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "volumeDevice describes a mapping of a raw block device within a container.", 
                                            "properties": {
                                              "devicePath": {
                                                "type": "string", 
                                                "description": "devicePath is the path inside of the container that the device will be mapped to."
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "name must match the name of a persistentVolumeClaim in the pod"
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "volumeDevices is the list of block devices to be used by the container."
                                        }, 
                                        "stdin": {
                                          "type": "boolean", 
                                          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
                                        }, 
                                        "terminationMessagePolicy": {
                                          "type": "string", 
                                          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
                                        }, 
                                        "command": {
                                          "items": {
                                            "type": "string"
                                          }, 
                                          "type": "array", 
                                          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                        }, 
                                        "imagePullPolicy": {
                                          "type": "string", 
                                          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                        }, 
                                        "startupProbe": {
                                          "type": "object", 
                                          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "ports": {
                                          "items": {
                                            "required": [
                                              "containerPort"
                                            ], 
                                            "type": "object", 
                                            "description": "ContainerPort represents a network port in a single container.", 
                                            "properties": {
                                              "hostPort": {
                                                "type": "integer", 
                                                "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.", 
                                                "format": "int32"
                                              }, 
                                              "protocol": {
                                                "type": "string", 
                                                "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\"."
                                              }, 
                                              "containerPort": {
                                                "type": "integer", 
                                                "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.", 
                                                "format": "int32"
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
                                              }, 
                                              "hostIP": {
                                                "type": "string", 
                                                "description": "What host IP to bind the external port to."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.", 
                                          "x-kubernetes-list-map-keys": [
                                            "containerPort", 
                                            "protocol"
                                          ], 
                                          "x-kubernetes-list-type": "map"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
                                  }, 
                                  "volumes": {
                                    "items": {
                                      "required": [
                                        "name"
                                      ], 
                                      "type": "object", 
                                      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.", 
                                      "properties": {
                                        "portworxVolume": {
                                          "required": [
                                            "volumeID"
                                          ], 
                                          "type": "object", 
                                          "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine", 
                                          "properties": {
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                                            }, 
                                            "volumeID": {
                                              "type": "string", 
                                              "description": "VolumeID uniquely identifies a Portworx volume"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                            }
                                          }
                                        }, 
                                        "glusterfs": {
                                          "required": [
                                            "endpoints", 
                                            "path"
                                          ], 
                                          "type": "object", 
                                          "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md", 
                                          "properties": {
                                            "path": {
                                              "type": "string", 
                                              "description": "Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                            }, 
                                            "endpoints": {
                                              "type": "string", 
                                              "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                            }
                                          }
                                        }, 
                                        "gitRepo": {
                                          "required": [
                                            "repository"
                                          ], 
                                          "type": "object", 
                                          "description": "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.", 
                                          "properties": {
                                            "directory": {
                                              "type": "string", 
                                              "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
                                            }, 
                                            "repository": {
                                              "type": "string", 
                                              "description": "Repository URL"
                                            }, 
                                            "revision": {
                                              "type": "string", 
                                              "description": "Commit hash for the specified revision."
                                            }
                                          }
                                        }, 
                                        "flocker": {
                                          "type": "object", 
                                          "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running", 
                                          "properties": {
                                            "datasetName": {
                                              "type": "string", 
                                              "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated"
                                            }, 
                                            "datasetUUID": {
                                              "type": "string", 
                                              "description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                                            }
                                          }
                                        }, 
                                        "storageos": {
                                          "type": "object", 
                                          "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.", 
                                          "properties": {
                                            "volumeName": {
                                              "type": "string", 
                                              "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace."
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                                            }, 
                                            "volumeNamespace": {
                                              "type": "string", 
                                              "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created."
                                            }, 
                                            "secretRef": {
                                              "type": "object", 
                                              "description": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                            }
                                          }
                                        }, 
                                        "csi": {
                                          "required": [
                                            "driver"
                                          ], 
                                          "type": "object", 
                                          "description": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).", 
                                          "properties": {
                                            "nodePublishSecretRef": {
                                              "type": "object", 
                                              "description": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Specifies a read-only configuration for the volume. Defaults to false (read/write)."
                                            }, 
                                            "driver": {
                                              "type": "string", 
                                              "description": "Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster."
                                            }, 
                                            "volumeAttributes": {
                                              "additionalProperties": {
                                                "type": "string"
                                              }, 
                                              "type": "object", 
                                              "description": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values."
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply."
                                            }
                                          }
                                        }, 
                                        "iscsi": {
                                          "required": [
                                            "iqn", 
                                            "lun", 
                                            "targetPortal"
                                          ], 
                                          "type": "object", 
                                          "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md", 
                                          "properties": {
                                            "targetPortal": {
                                              "type": "string", 
                                              "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                                            }, 
                                            "portals": {
                                              "items": {
                                                "type": "string"
                                              }, 
                                              "type": "array", 
                                              "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                                            }, 
                                            "secretRef": {
                                              "type": "object", 
                                              "description": "CHAP Secret for iSCSI target and initiator authentication", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
                                            }, 
                                            "chapAuthSession": {
                                              "type": "boolean", 
                                              "description": "whether support iSCSI Session CHAP authentication"
                                            }, 
                                            "initiatorName": {
                                              "type": "string", 
                                              "description": "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection."
                                            }, 
                                            "iscsiInterface": {
                                              "type": "string", 
                                              "description": "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp)."
                                            }, 
                                            "chapAuthDiscovery": {
                                              "type": "boolean", 
                                              "description": "whether support iSCSI Discovery CHAP authentication"
                                            }, 
                                            "iqn": {
                                              "type": "string", 
                                              "description": "Target iSCSI Qualified Name."
                                            }, 
                                            "lun": {
                                              "type": "integer", 
                                              "description": "iSCSI Target Lun number.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "ephemeral": {
                                          "type": "object", 
                                          "description": "Ephemeral represents a volume that is handled by a cluster storage driver (Alpha feature). The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. \n Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). \n Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. \n Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. \n A pod can use both types of ephemeral volumes and persistent volumes at the same time.", 
                                          "properties": {
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Specifies a read-only configuration for the volume. Defaults to false (read/write)."
                                            }, 
                                            "volumeClaimTemplate": {
                                              "required": [
                                                "spec"
                                              ], 
                                              "type": "object", 
                                              "description": "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). \n An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. \n This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. \n Required, must not be nil.", 
                                              "properties": {
                                                "spec": {
                                                  "type": "object", 
                                                  "description": "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.", 
                                                  "properties": {
                                                    "storageClassName": {
                                                      "type": "string", 
                                                      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                                    }, 
                                                    "volumeMode": {
                                                      "type": "string", 
                                                      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec."
                                                    }, 
                                                    "selector": {
                                                      "type": "object", 
                                                      "description": "A label query over volumes to consider for binding.", 
                                                      "properties": {
                                                        "matchLabels": {
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }, 
                                                          "type": "object", 
                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        }, 
                                                        "matchExpressions": {
                                                          "items": {
                                                            "required": [
                                                              "key", 
                                                              "operator"
                                                            ], 
                                                            "type": "object", 
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                                                            "properties": {
                                                              "operator": {
                                                                "type": "string", 
                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                                              }, 
                                                              "values": {
                                                                "items": {
                                                                  "type": "string"
                                                                }, 
                                                                "type": "array", 
                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                                              }, 
                                                              "key": {
                                                                "type": "string", 
                                                                "description": "key is the label key that the selector applies to."
                                                              }
                                                            }
                                                          }, 
                                                          "type": "array", 
                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        }
                                                      }
                                                    }, 
                                                    "accessModes": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                                    }, 
                                                    "dataSource": {
                                                      "required": [
                                                        "kind", 
                                                        "name"
                                                      ], 
                                                      "type": "object", 
                                                      "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.", 
                                                      "properties": {
                                                        "apiGroup": {
                                                          "type": "string", 
                                                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                                        }, 
                                                        "kind": {
                                                          "type": "string", 
                                                          "description": "Kind is the type of resource being referenced"
                                                        }, 
                                                        "name": {
                                                          "type": "string", 
                                                          "description": "Name is the name of resource being referenced"
                                                        }
                                                      }
                                                    }, 
                                                    "volumeName": {
                                                      "type": "string", 
                                                      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                                                    }, 
                                                    "resources": {
                                                      "type": "object", 
                                                      "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources", 
                                                      "properties": {
                                                        "requests": {
                                                          "additionalProperties": {
                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                            "x-kubernetes-int-or-string": true
                                                          }, 
                                                          "type": "object", 
                                                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                                        }, 
                                                        "limits": {
                                                          "additionalProperties": {
                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                            "x-kubernetes-int-or-string": true
                                                          }, 
                                                          "type": "object", 
                                                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }, 
                                                "metadata": {
                                                  "type": "object", 
                                                  "description": "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation."
                                                }
                                              }
                                            }
                                          }
                                        }, 
                                        "projected": {
                                          "type": "object", 
                                          "description": "Items for all in one resources secrets, configmaps, and downward API", 
                                          "properties": {
                                            "sources": {
                                              "items": {
                                                "type": "object", 
                                                "description": "Projection that may be projected along with other supported volume types", 
                                                "properties": {
                                                  "configMap": {
                                                    "type": "object", 
                                                    "description": "information about the configMap data to project", 
                                                    "properties": {
                                                      "items": {
                                                        "items": {
                                                          "required": [
                                                            "key", 
                                                            "path"
                                                          ], 
                                                          "type": "object", 
                                                          "description": "Maps a string key to a path within a volume.", 
                                                          "properties": {
                                                            "path": {
                                                              "type": "string", 
                                                              "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                                            }, 
                                                            "mode": {
                                                              "type": "integer", 
                                                              "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                                              "format": "int32"
                                                            }, 
                                                            "key": {
                                                              "type": "string", 
                                                              "description": "The key to project."
                                                            }
                                                          }
                                                        }, 
                                                        "type": "array", 
                                                        "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
                                                      }, 
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the ConfigMap or its keys must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }
                                                    }
                                                  }, 
                                                  "secret": {
                                                    "type": "object", 
                                                    "description": "information about the secret data to project", 
                                                    "properties": {
                                                      "items": {
                                                        "items": {
                                                          "required": [
                                                            "key", 
                                                            "path"
                                                          ], 
                                                          "type": "object", 
                                                          "description": "Maps a string key to a path within a volume.", 
                                                          "properties": {
                                                            "path": {
                                                              "type": "string", 
                                                              "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                                            }, 
                                                            "mode": {
                                                              "type": "integer", 
                                                              "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                                              "format": "int32"
                                                            }, 
                                                            "key": {
                                                              "type": "string", 
                                                              "description": "The key to project."
                                                            }
                                                          }
                                                        }, 
                                                        "type": "array", 
                                                        "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
                                                      }, 
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the Secret or its key must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }
                                                    }
                                                  }, 
                                                  "serviceAccountToken": {
                                                    "required": [
                                                      "path"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "information about the serviceAccountToken data to project", 
                                                    "properties": {
                                                      "path": {
                                                        "type": "string", 
                                                        "description": "Path is the path relative to the mount point of the file to project the token into."
                                                      }, 
                                                      "audience": {
                                                        "type": "string", 
                                                        "description": "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver."
                                                      }, 
                                                      "expirationSeconds": {
                                                        "type": "integer", 
                                                        "description": "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.", 
                                                        "format": "int64"
                                                      }
                                                    }
                                                  }, 
                                                  "downwardAPI": {
                                                    "type": "object", 
                                                    "description": "information about the downwardAPI data to project", 
                                                    "properties": {
                                                      "items": {
                                                        "items": {
                                                          "required": [
                                                            "path"
                                                          ], 
                                                          "type": "object", 
                                                          "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field", 
                                                          "properties": {
                                                            "path": {
                                                              "type": "string", 
                                                              "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                                            }, 
                                                            "fieldRef": {
                                                              "required": [
                                                                "fieldPath"
                                                              ], 
                                                              "type": "object", 
                                                              "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.", 
                                                              "properties": {
                                                                "fieldPath": {
                                                                  "type": "string", 
                                                                  "description": "Path of the field to select in the specified API version."
                                                                }, 
                                                                "apiVersion": {
                                                                  "type": "string", 
                                                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                                }
                                                              }
                                                            }, 
                                                            "mode": {
                                                              "type": "integer", 
                                                              "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                                              "format": "int32"
                                                            }, 
                                                            "resourceFieldRef": {
                                                              "required": [
                                                                "resource"
                                                              ], 
                                                              "type": "object", 
                                                              "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.", 
                                                              "properties": {
                                                                "containerName": {
                                                                  "type": "string", 
                                                                  "description": "Container name: required for volumes, optional for env vars"
                                                                }, 
                                                                "resource": {
                                                                  "type": "string", 
                                                                  "description": "Required: resource to select"
                                                                }, 
                                                                "divisor": {
                                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"", 
                                                                  "x-kubernetes-int-or-string": true
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }, 
                                                        "type": "array", 
                                                        "description": "Items is a list of DownwardAPIVolume file"
                                                      }
                                                    }
                                                  }
                                                }
                                              }, 
                                              "type": "array", 
                                              "description": "list of volume projections"
                                            }, 
                                            "defaultMode": {
                                              "type": "integer", 
                                              "description": "Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "secret": {
                                          "type": "object", 
                                          "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret", 
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "required": [
                                                  "key", 
                                                  "path"
                                                ], 
                                                "type": "object", 
                                                "description": "Maps a string key to a path within a volume.", 
                                                "properties": {
                                                  "path": {
                                                    "type": "string", 
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                                  }, 
                                                  "mode": {
                                                    "type": "integer", 
                                                    "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                                    "format": "int32"
                                                  }, 
                                                  "key": {
                                                    "type": "string", 
                                                    "description": "The key to project."
                                                  }
                                                }
                                              }, 
                                              "type": "array", 
                                              "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
                                            }, 
                                            "optional": {
                                              "type": "boolean", 
                                              "description": "Specify whether the Secret or its keys must be defined"
                                            }, 
                                            "defaultMode": {
                                              "type": "integer", 
                                              "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                              "format": "int32"
                                            }, 
                                            "secretName": {
                                              "type": "string", 
                                              "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                            }
                                          }
                                        }, 
                                        "scaleIO": {
                                          "required": [
                                            "gateway", 
                                            "secretRef", 
                                            "system"
                                          ], 
                                          "type": "object", 
                                          "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.", 
                                          "properties": {
                                            "storageMode": {
                                              "type": "string", 
                                              "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned."
                                            }, 
                                            "secretRef": {
                                              "type": "object", 
                                              "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "protectionDomain": {
                                              "type": "string", 
                                              "description": "The name of the ScaleIO Protection Domain for the configured storage."
                                            }, 
                                            "volumeName": {
                                              "type": "string", 
                                              "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source."
                                            }, 
                                            "sslEnabled": {
                                              "type": "boolean", 
                                              "description": "Flag to enable/disable SSL communication with Gateway, default false"
                                            }, 
                                            "system": {
                                              "type": "string", 
                                              "description": "The name of the storage system as configured in ScaleIO."
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\"."
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                                            }, 
                                            "storagePool": {
                                              "type": "string", 
                                              "description": "The ScaleIO Storage Pool associated with the protection domain."
                                            }, 
                                            "gateway": {
                                              "type": "string", 
                                              "description": "The host address of the ScaleIO API Gateway."
                                            }
                                          }
                                        }, 
                                        "photonPersistentDisk": {
                                          "required": [
                                            "pdID"
                                          ], 
                                          "type": "object", 
                                          "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine", 
                                          "properties": {
                                            "pdID": {
                                              "type": "string", 
                                              "description": "ID that identifies Photon Controller persistent disk"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                            }
                                          }
                                        }, 
                                        "azureDisk": {
                                          "required": [
                                            "diskName", 
                                            "diskURI"
                                          ], 
                                          "type": "object", 
                                          "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.", 
                                          "properties": {
                                            "diskName": {
                                              "type": "string", 
                                              "description": "The Name of the data disk in the blob storage"
                                            }, 
                                            "cachingMode": {
                                              "type": "string", 
                                              "description": "Host Caching mode: None, Read Only, Read Write."
                                            }, 
                                            "kind": {
                                              "type": "string", 
                                              "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                            }, 
                                            "diskURI": {
                                              "type": "string", 
                                              "description": "The URI the data disk in the blob storage"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                                            }
                                          }
                                        }, 
                                        "fc": {
                                          "type": "object", 
                                          "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.", 
                                          "properties": {
                                            "targetWWNs": {
                                              "items": {
                                                "type": "string"
                                              }, 
                                              "type": "array", 
                                              "description": "Optional: FC target worldwide names (WWNs)"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                                            }, 
                                            "lun": {
                                              "type": "integer", 
                                              "description": "Optional: FC target lun number", 
                                              "format": "int32"
                                            }, 
                                            "wwids": {
                                              "items": {
                                                "type": "string"
                                              }, 
                                              "type": "array", 
                                              "description": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                                            }
                                          }
                                        }, 
                                        "flexVolume": {
                                          "required": [
                                            "driver"
                                          ], 
                                          "type": "object", 
                                          "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.", 
                                          "properties": {
                                            "secretRef": {
                                              "type": "object", 
                                              "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "options": {
                                              "additionalProperties": {
                                                "type": "string"
                                              }, 
                                              "type": "object", 
                                              "description": "Optional: Extra command options if any."
                                            }, 
                                            "driver": {
                                              "type": "string", 
                                              "description": "Driver is the name of the driver to use for this volume."
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                            }
                                          }
                                        }, 
                                        "emptyDir": {
                                          "type": "object", 
                                          "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir", 
                                          "properties": {
                                            "sizeLimit": {
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                              "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir", 
                                              "x-kubernetes-int-or-string": true
                                            }, 
                                            "medium": {
                                              "type": "string", 
                                              "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                            }
                                          }
                                        }, 
                                        "persistentVolumeClaim": {
                                          "required": [
                                            "claimName"
                                          ], 
                                          "type": "object", 
                                          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims", 
                                          "properties": {
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Will force the ReadOnly setting in VolumeMounts. Default false."
                                            }, 
                                            "claimName": {
                                              "type": "string", 
                                              "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                                            }
                                          }
                                        }, 
                                        "configMap": {
                                          "type": "object", 
                                          "description": "ConfigMap represents a configMap that should populate this volume", 
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "required": [
                                                  "key", 
                                                  "path"
                                                ], 
                                                "type": "object", 
                                                "description": "Maps a string key to a path within a volume.", 
                                                "properties": {
                                                  "path": {
                                                    "type": "string", 
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                                  }, 
                                                  "mode": {
                                                    "type": "integer", 
                                                    "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                                    "format": "int32"
                                                  }, 
                                                  "key": {
                                                    "type": "string", 
                                                    "description": "The key to project."
                                                  }
                                                }
                                              }, 
                                              "type": "array", 
                                              "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
                                            }, 
                                            "optional": {
                                              "type": "boolean", 
                                              "description": "Specify whether the ConfigMap or its keys must be defined"
                                            }, 
                                            "defaultMode": {
                                              "type": "integer", 
                                              "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                              "format": "int32"
                                            }, 
                                            "name": {
                                              "type": "string", 
                                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                            }
                                          }
                                        }, 
                                        "rbd": {
                                          "required": [
                                            "image", 
                                            "monitors"
                                          ], 
                                          "type": "object", 
                                          "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md", 
                                          "properties": {
                                            "secretRef": {
                                              "type": "object", 
                                              "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "image": {
                                              "type": "string", 
                                              "description": "The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                            }, 
                                            "keyring": {
                                              "type": "string", 
                                              "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                            }, 
                                            "user": {
                                              "type": "string", 
                                              "description": "The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                            }, 
                                            "monitors": {
                                              "items": {
                                                "type": "string"
                                              }, 
                                              "type": "array", 
                                              "description": "A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                            }, 
                                            "pool": {
                                              "type": "string", 
                                              "description": "The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                            }
                                          }
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                        }, 
                                        "azureFile": {
                                          "required": [
                                            "secretName", 
                                            "shareName"
                                          ], 
                                          "type": "object", 
                                          "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.", 
                                          "properties": {
                                            "shareName": {
                                              "type": "string", 
                                              "description": "Share Name"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                                            }, 
                                            "secretName": {
                                              "type": "string", 
                                              "description": "the name of secret that contains Azure Storage Account Name and Key"
                                            }
                                          }
                                        }, 
                                        "quobyte": {
                                          "required": [
                                            "registry", 
                                            "volume"
                                          ], 
                                          "type": "object", 
                                          "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime", 
                                          "properties": {
                                            "group": {
                                              "type": "string", 
                                              "description": "Group to map volume access to Default is no group"
                                            }, 
                                            "volume": {
                                              "type": "string", 
                                              "description": "Volume is a string that references an already created Quobyte volume by name."
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                                            }, 
                                            "registry": {
                                              "type": "string", 
                                              "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                                            }, 
                                            "tenant": {
                                              "type": "string", 
                                              "description": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin"
                                            }, 
                                            "user": {
                                              "type": "string", 
                                              "description": "User to map volume access to Defaults to serivceaccount user"
                                            }
                                          }
                                        }, 
                                        "hostPath": {
                                          "required": [
                                            "path"
                                          ], 
                                          "type": "object", 
                                          "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.", 
                                          "properties": {
                                            "path": {
                                              "type": "string", 
                                              "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                            }, 
                                            "type": {
                                              "type": "string", 
                                              "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                            }
                                          }
                                        }, 
                                        "nfs": {
                                          "required": [
                                            "path", 
                                            "server"
                                          ], 
                                          "type": "object", 
                                          "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs", 
                                          "properties": {
                                            "path": {
                                              "type": "string", 
                                              "description": "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                            }, 
                                            "server": {
                                              "type": "string", 
                                              "description": "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                            }
                                          }
                                        }, 
                                        "vsphereVolume": {
                                          "required": [
                                            "volumePath"
                                          ], 
                                          "type": "object", 
                                          "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine", 
                                          "properties": {
                                            "storagePolicyName": {
                                              "type": "string", 
                                              "description": "Storage Policy Based Management (SPBM) profile name."
                                            }, 
                                            "volumePath": {
                                              "type": "string", 
                                              "description": "Path that identifies vSphere volume vmdk"
                                            }, 
                                            "storagePolicyID": {
                                              "type": "string", 
                                              "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                            }
                                          }
                                        }, 
                                        "cinder": {
                                          "required": [
                                            "volumeID"
                                          ], 
                                          "type": "object", 
                                          "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md", 
                                          "properties": {
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                            }, 
                                            "secretRef": {
                                              "type": "object", 
                                              "description": "Optional: points to a secret object containing parameters used to connect to OpenStack.", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "volumeID": {
                                              "type": "string", 
                                              "description": "volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                            }
                                          }
                                        }, 
                                        "awsElasticBlockStore": {
                                          "required": [
                                            "volumeID"
                                          ], 
                                          "type": "object", 
                                          "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore", 
                                          "properties": {
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                            }, 
                                            "partition": {
                                              "type": "integer", 
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).", 
                                              "format": "int32"
                                            }, 
                                            "volumeID": {
                                              "type": "string", 
                                              "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine"
                                            }
                                          }
                                        }, 
                                        "cephfs": {
                                          "required": [
                                            "monitors"
                                          ], 
                                          "type": "object", 
                                          "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime", 
                                          "properties": {
                                            "secretRef": {
                                              "type": "object", 
                                              "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }
                                              }
                                            }, 
                                            "secretFile": {
                                              "type": "string", 
                                              "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                            }, 
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                            }, 
                                            "user": {
                                              "type": "string", 
                                              "description": "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                            }, 
                                            "path": {
                                              "type": "string", 
                                              "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                                            }, 
                                            "monitors": {
                                              "items": {
                                                "type": "string"
                                              }, 
                                              "type": "array", 
                                              "description": "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                            }
                                          }
                                        }, 
                                        "downwardAPI": {
                                          "type": "object", 
                                          "description": "DownwardAPI represents downward API about the pod that should populate this volume", 
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "required": [
                                                  "path"
                                                ], 
                                                "type": "object", 
                                                "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field", 
                                                "properties": {
                                                  "path": {
                                                    "type": "string", 
                                                    "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                                  }, 
                                                  "fieldRef": {
                                                    "required": [
                                                      "fieldPath"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.", 
                                                    "properties": {
                                                      "fieldPath": {
                                                        "type": "string", 
                                                        "description": "Path of the field to select in the specified API version."
                                                      }, 
                                                      "apiVersion": {
                                                        "type": "string", 
                                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                      }
                                                    }
                                                  }, 
                                                  "mode": {
                                                    "type": "integer", 
                                                    "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                                    "format": "int32"
                                                  }, 
                                                  "resourceFieldRef": {
                                                    "required": [
                                                      "resource"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.", 
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string", 
                                                        "description": "Container name: required for volumes, optional for env vars"
                                                      }, 
                                                      "resource": {
                                                        "type": "string", 
                                                        "description": "Required: resource to select"
                                                      }, 
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"", 
                                                        "x-kubernetes-int-or-string": true
                                                      }
                                                    }
                                                  }
                                                }
                                              }, 
                                              "type": "array", 
                                              "description": "Items is a list of downward API volume file"
                                            }, 
                                            "defaultMode": {
                                              "type": "integer", 
                                              "description": "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "gcePersistentDisk": {
                                          "required": [
                                            "pdName"
                                          ], 
                                          "type": "object", 
                                          "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk", 
                                          "properties": {
                                            "readOnly": {
                                              "type": "boolean", 
                                              "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                            }, 
                                            "partition": {
                                              "type": "integer", 
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk", 
                                              "format": "int32"
                                            }, 
                                            "pdName": {
                                              "type": "string", 
                                              "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                            }, 
                                            "fsType": {
                                              "type": "string", 
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine"
                                            }
                                          }
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
                                  }, 
                                  "tolerations": {
                                    "items": {
                                      "type": "object", 
                                      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.", 
                                      "properties": {
                                        "operator": {
                                          "type": "string", 
                                          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category."
                                        }, 
                                        "value": {
                                          "type": "string", 
                                          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string."
                                        }, 
                                        "tolerationSeconds": {
                                          "type": "integer", 
                                          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.", 
                                          "format": "int64"
                                        }, 
                                        "effect": {
                                          "type": "string", 
                                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                        }, 
                                        "key": {
                                          "type": "string", 
                                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "If specified, the pod's tolerations."
                                  }, 
                                  "initContainers": {
                                    "items": {
                                      "required": [
                                        "name"
                                      ], 
                                      "type": "object", 
                                      "description": "A single application container that you want to run within a pod.", 
                                      "properties": {
                                        "livenessProbe": {
                                          "type": "object", 
                                          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "workingDir": {
                                          "type": "string", 
                                          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                                        }, 
                                        "image": {
                                          "type": "string", 
                                          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
                                        }, 
                                        "volumeMounts": {
                                          "items": {
                                            "required": [
                                              "mountPath", 
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "VolumeMount describes a mounting of a Volume within a container.", 
                                            "properties": {
                                              "mountPath": {
                                                "type": "string", 
                                                "description": "Path within the container at which the volume should be mounted.  Must not contain ':'."
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "This must match the Name of a Volume."
                                              }, 
                                              "subPath": {
                                                "type": "string", 
                                                "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                              }, 
                                              "readOnly": {
                                                "type": "boolean", 
                                                "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
                                              }, 
                                              "mountPropagation": {
                                                "type": "string", 
                                                "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10."
                                              }, 
                                              "subPathExpr": {
                                                "type": "string", 
                                                "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated."
                                        }, 
                                        "tty": {
                                          "type": "boolean", 
                                          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
                                        }, 
                                        "securityContext": {
                                          "type": "object", 
                                          "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/", 
                                          "properties": {
                                            "readOnlyRootFilesystem": {
                                              "type": "boolean", 
                                              "description": "Whether this container has a read-only root filesystem. Default is false."
                                            }, 
                                            "seccompProfile": {
                                              "required": [
                                                "type"
                                              ], 
                                              "type": "object", 
                                              "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.", 
                                              "properties": {
                                                "localhostProfile": {
                                                  "type": "string", 
                                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\"."
                                                }, 
                                                "type": {
                                                  "type": "string", 
                                                  "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                                }
                                              }
                                            }, 
                                            "runAsGroup": {
                                              "type": "integer", 
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "format": "int64"
                                            }, 
                                            "runAsUser": {
                                              "type": "integer", 
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "format": "int64"
                                            }, 
                                            "allowPrivilegeEscalation": {
                                              "type": "boolean", 
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
                                            }, 
                                            "procMount": {
                                              "type": "string", 
                                              "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled."
                                            }, 
                                            "runAsNonRoot": {
                                              "type": "boolean", 
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                            }, 
                                            "windowsOptions": {
                                              "type": "object", 
                                              "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "properties": {
                                                "gmsaCredentialSpec": {
                                                  "type": "string", 
                                                  "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field."
                                                }, 
                                                "gmsaCredentialSpecName": {
                                                  "type": "string", 
                                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                                }, 
                                                "runAsUserName": {
                                                  "type": "string", 
                                                  "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                                }
                                              }
                                            }, 
                                            "seLinuxOptions": {
                                              "type": "object", 
                                              "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                              "properties": {
                                                "type": {
                                                  "type": "string", 
                                                  "description": "Type is a SELinux type label that applies to the container."
                                                }, 
                                                "role": {
                                                  "type": "string", 
                                                  "description": "Role is a SELinux role label that applies to the container."
                                                }, 
                                                "user": {
                                                  "type": "string", 
                                                  "description": "User is a SELinux user label that applies to the container."
                                                }, 
                                                "level": {
                                                  "type": "string", 
                                                  "description": "Level is SELinux level label that applies to the container."
                                                }
                                              }
                                            }, 
                                            "capabilities": {
                                              "type": "object", 
                                              "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.", 
                                              "properties": {
                                                "add": {
                                                  "items": {
                                                    "type": "string", 
                                                    "description": "Capability represent POSIX capabilities type"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Added capabilities"
                                                }, 
                                                "drop": {
                                                  "items": {
                                                    "type": "string", 
                                                    "description": "Capability represent POSIX capabilities type"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Removed capabilities"
                                                }
                                              }
                                            }, 
                                            "privileged": {
                                              "type": "boolean", 
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false."
                                            }
                                          }
                                        }, 
                                        "envFrom": {
                                          "items": {
                                            "type": "object", 
                                            "description": "EnvFromSource represents the source of a set of ConfigMaps", 
                                            "properties": {
                                              "prefix": {
                                                "type": "string", 
                                                "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                              }, 
                                              "configMapRef": {
                                                "type": "object", 
                                                "description": "The ConfigMap to select from", 
                                                "properties": {
                                                  "optional": {
                                                    "type": "boolean", 
                                                    "description": "Specify whether the ConfigMap must be defined"
                                                  }, 
                                                  "name": {
                                                    "type": "string", 
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                  }
                                                }
                                              }, 
                                              "secretRef": {
                                                "type": "object", 
                                                "description": "The Secret to select from", 
                                                "properties": {
                                                  "optional": {
                                                    "type": "boolean", 
                                                    "description": "Specify whether the Secret must be defined"
                                                  }, 
                                                  "name": {
                                                    "type": "string", 
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                  }
                                                }
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
                                        }, 
                                        "stdinOnce": {
                                          "type": "boolean", 
                                          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
                                        }, 
                                        "env": {
                                          "items": {
                                            "required": [
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "EnvVar represents an environment variable present in a Container.", 
                                            "properties": {
                                              "valueFrom": {
                                                "type": "object", 
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.", 
                                                "properties": {
                                                  "secretKeyRef": {
                                                    "required": [
                                                      "key"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a key of a secret in the pod's namespace", 
                                                    "properties": {
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the Secret or its key must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }, 
                                                      "key": {
                                                        "type": "string", 
                                                        "description": "The key of the secret to select from.  Must be a valid secret key."
                                                      }
                                                    }
                                                  }, 
                                                  "fieldRef": {
                                                    "required": [
                                                      "fieldPath"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.", 
                                                    "properties": {
                                                      "fieldPath": {
                                                        "type": "string", 
                                                        "description": "Path of the field to select in the specified API version."
                                                      }, 
                                                      "apiVersion": {
                                                        "type": "string", 
                                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                      }
                                                    }
                                                  }, 
                                                  "resourceFieldRef": {
                                                    "required": [
                                                      "resource"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.", 
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string", 
                                                        "description": "Container name: required for volumes, optional for env vars"
                                                      }, 
                                                      "resource": {
                                                        "type": "string", 
                                                        "description": "Required: resource to select"
                                                      }, 
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"", 
                                                        "x-kubernetes-int-or-string": true
                                                      }
                                                    }
                                                  }, 
                                                  "configMapKeyRef": {
                                                    "required": [
                                                      "key"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Selects a key of a ConfigMap.", 
                                                    "properties": {
                                                      "optional": {
                                                        "type": "boolean", 
                                                        "description": "Specify whether the ConfigMap or its key must be defined"
                                                      }, 
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                      }, 
                                                      "key": {
                                                        "type": "string", 
                                                        "description": "The key to select."
                                                      }
                                                    }
                                                  }
                                                }
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER."
                                              }, 
                                              "value": {
                                                "type": "string", 
                                                "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of environment variables to set in the container. Cannot be updated."
                                        }, 
                                        "readinessProbe": {
                                          "type": "object", 
                                          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "resources": {
                                          "type": "object", 
                                          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/", 
                                          "properties": {
                                            "requests": {
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                "x-kubernetes-int-or-string": true
                                              }, 
                                              "type": "object", 
                                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                            }, 
                                            "limits": {
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                "x-kubernetes-int-or-string": true
                                              }, 
                                              "type": "object", 
                                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                            }
                                          }
                                        }, 
                                        "terminationMessagePath": {
                                          "type": "string", 
                                          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                                        }, 
                                        "args": {
                                          "items": {
                                            "type": "string"
                                          }, 
                                          "type": "array", 
                                          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                        }, 
                                        "lifecycle": {
                                          "type": "object", 
                                          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.", 
                                          "properties": {
                                            "preStop": {
                                              "type": "object", 
                                              "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                              "properties": {
                                                "httpGet": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPGet specifies the http request to perform.", 
                                                  "properties": {
                                                    "path": {
                                                      "type": "string", 
                                                      "description": "Path to access on the HTTP server."
                                                    }, 
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                    }, 
                                                    "scheme": {
                                                      "type": "string", 
                                                      "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                    }, 
                                                    "httpHeaders": {
                                                      "items": {
                                                        "required": [
                                                          "name", 
                                                          "value"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                        "properties": {
                                                          "name": {
                                                            "type": "string", 
                                                            "description": "The header field name"
                                                          }, 
                                                          "value": {
                                                            "type": "string", 
                                                            "description": "The header field value"
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                    }, 
                                                    "port": {
                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "tcpSocket": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                                  "properties": {
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                    }, 
                                                    "port": {
                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "exec": {
                                                  "type": "object", 
                                                  "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                                  "properties": {
                                                    "command": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                    }
                                                  }
                                                }
                                              }
                                            }, 
                                            "postStart": {
                                              "type": "object", 
                                              "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                              "properties": {
                                                "httpGet": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPGet specifies the http request to perform.", 
                                                  "properties": {
                                                    "path": {
                                                      "type": "string", 
                                                      "description": "Path to access on the HTTP server."
                                                    }, 
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                    }, 
                                                    "scheme": {
                                                      "type": "string", 
                                                      "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                    }, 
                                                    "httpHeaders": {
                                                      "items": {
                                                        "required": [
                                                          "name", 
                                                          "value"
                                                        ], 
                                                        "type": "object", 
                                                        "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                        "properties": {
                                                          "name": {
                                                            "type": "string", 
                                                            "description": "The header field name"
                                                          }, 
                                                          "value": {
                                                            "type": "string", 
                                                            "description": "The header field value"
                                                          }
                                                        }
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                    }, 
                                                    "port": {
                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "tcpSocket": {
                                                  "required": [
                                                    "port"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                                  "properties": {
                                                    "host": {
                                                      "type": "string", 
                                                      "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                    }, 
                                                    "port": {
                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }, 
                                                "exec": {
                                                  "type": "object", 
                                                  "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                                  "properties": {
                                                    "command": {
                                                      "items": {
                                                        "type": "string"
                                                      }, 
                                                      "type": "array", 
                                                      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                                        }, 
                                        "volumeDevices": {
                                          "items": {
                                            "required": [
                                              "devicePath", 
                                              "name"
                                            ], 
                                            "type": "object", 
                                            "description": "volumeDevice describes a mapping of a raw block device within a container.", 
                                            "properties": {
                                              "devicePath": {
                                                "type": "string", 
                                                "description": "devicePath is the path inside of the container that the device will be mapped to."
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "name must match the name of a persistentVolumeClaim in the pod"
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "volumeDevices is the list of block devices to be used by the container."
                                        }, 
                                        "stdin": {
                                          "type": "boolean", 
                                          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
                                        }, 
                                        "terminationMessagePolicy": {
                                          "type": "string", 
                                          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
                                        }, 
                                        "command": {
                                          "items": {
                                            "type": "string"
                                          }, 
                                          "type": "array", 
                                          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                        }, 
                                        "imagePullPolicy": {
                                          "type": "string", 
                                          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                        }, 
                                        "startupProbe": {
                                          "type": "object", 
                                          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                          "properties": {
                                            "httpGet": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPGet specifies the http request to perform.", 
                                              "properties": {
                                                "path": {
                                                  "type": "string", 
                                                  "description": "Path to access on the HTTP server."
                                                }, 
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                }, 
                                                "scheme": {
                                                  "type": "string", 
                                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                                }, 
                                                "httpHeaders": {
                                                  "items": {
                                                    "required": [
                                                      "name", 
                                                      "value"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                    "properties": {
                                                      "name": {
                                                        "type": "string", 
                                                        "description": "The header field name"
                                                      }, 
                                                      "value": {
                                                        "type": "string", 
                                                        "description": "The header field value"
                                                      }
                                                    }
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                                }, 
                                                "port": {
                                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "timeoutSeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "exec": {
                                              "type": "object", 
                                              "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                              "properties": {
                                                "command": {
                                                  "items": {
                                                    "type": "string"
                                                  }, 
                                                  "type": "array", 
                                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                                }
                                              }
                                            }, 
                                            "initialDelaySeconds": {
                                              "type": "integer", 
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                              "format": "int32"
                                            }, 
                                            "tcpSocket": {
                                              "required": [
                                                "port"
                                              ], 
                                              "type": "object", 
                                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                              "properties": {
                                                "host": {
                                                  "type": "string", 
                                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                                }, 
                                                "port": {
                                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "periodSeconds": {
                                              "type": "integer", 
                                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "successThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                              "format": "int32"
                                            }, 
                                            "failureThreshold": {
                                              "type": "integer", 
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "ports": {
                                          "items": {
                                            "required": [
                                              "containerPort"
                                            ], 
                                            "type": "object", 
                                            "description": "ContainerPort represents a network port in a single container.", 
                                            "properties": {
                                              "hostPort": {
                                                "type": "integer", 
                                                "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.", 
                                                "format": "int32"
                                              }, 
                                              "protocol": {
                                                "type": "string", 
                                                "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\"."
                                              }, 
                                              "containerPort": {
                                                "type": "integer", 
                                                "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.", 
                                                "format": "int32"
                                              }, 
                                              "name": {
                                                "type": "string", 
                                                "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
                                              }, 
                                              "hostIP": {
                                                "type": "string", 
                                                "description": "What host IP to bind the external port to."
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.", 
                                          "x-kubernetes-list-map-keys": [
                                            "containerPort", 
                                            "protocol"
                                          ], 
                                          "x-kubernetes-list-type": "map"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"
                                  }, 
                                  "imagePullSecrets": {
                                    "items": {
                                      "type": "object", 
                                      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.", 
                                      "properties": {
                                        "name": {
                                          "type": "string", 
                                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
                                  }
                                }
                              }, 
                              "metadata": {
                                "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
                                "x-kubernetes-preserve-unknown-fields": true
                              }
                            }
                          }, 
                          "revisionHistoryLimit": {
                            "type": "integer", 
                            "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.", 
                            "format": "int32"
                          }, 
                          "progressDeadlineSeconds": {
                            "type": "integer", 
                            "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.", 
                            "format": "int32"
                          }, 
                          "minReadySeconds": {
                            "type": "integer", 
                            "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)", 
                            "format": "int32"
                          }
                        }
                      }, 
                      "name": {
                        "type": "string"
                      }, 
                      "label": {
                        "additionalProperties": {
                          "type": "string"
                        }, 
                        "type": "object", 
                        "description": "Set is a map of label:value. It implements Labels."
                      }
                    }
                  }, 
                  "type": "array"
                }
              }
            }, 
            "strategy": {
              "type": "string"
            }
          }
        }, 
        "labels": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects."
        }, 
        "selector": {
          "type": "object", 
          "description": "Label selector for related resources.", 
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              }, 
              "type": "object", 
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
            }, 
            "matchExpressions": {
              "items": {
                "required": [
                  "key", 
                  "operator"
                ], 
                "type": "object", 
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                "properties": {
                  "operator": {
                    "type": "string", 
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                  }, 
                  "values": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "key is the label key that the selector applies to."
                  }
                }
              }, 
              "type": "array", 
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
            }
          }
        }, 
        "nativeAPIs": {
          "items": {
            "required": [
              "group", 
              "kind", 
              "version"
            ], 
            "type": "object", 
            "description": "GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion to avoid automatic coersion.  It doesn't use a GroupVersion to avoid custom marshalling", 
            "properties": {
              "kind": {
                "type": "string"
              }, 
              "version": {
                "type": "string"
              }, 
              "group": {
                "type": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "maturity": {
          "type": "string"
        }, 
        "maintainers": {
          "items": {
            "type": "object", 
            "properties": {
              "email": {
                "type": "string"
              }, 
              "name": {
                "type": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "replaces": {
          "type": "string", 
          "description": "The name of a CSV this one replaces. Should match the `metadata.Name` field of the old CSV."
        }, 
        "minKubeVersion": {
          "type": "string"
        }, 
        "version": {
          "type": "string", 
          "description": "OperatorVersion is a wrapper around semver.Version which supports correct marshaling to YAML and JSON."
        }, 
        "provider": {
          "type": "object", 
          "properties": {
            "url": {
              "type": "string"
            }, 
            "name": {
              "type": "string"
            }
          }
        }, 
        "keywords": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "icon": {
          "items": {
            "required": [
              "base64data", 
              "mediatype"
            ], 
            "type": "object", 
            "properties": {
              "mediatype": {
                "type": "string"
              }, 
              "base64data": {
                "type": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "annotations": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata."
        }, 
        "webhookdefinitions": {
          "items": {
            "required": [
              "admissionReviewVersions", 
              "generateName", 
              "sideEffects", 
              "type"
            ], 
            "type": "object", 
            "description": "WebhookDescription provides details to OLM about required webhooks", 
            "properties": {
              "reinvocationPolicy": {
                "type": "string", 
                "description": "ReinvocationPolicyType specifies what type of policy the admission hook uses."
              }, 
              "matchPolicy": {
                "type": "string", 
                "description": "MatchPolicyType specifies the type of match policy"
              }, 
              "objectSelector": {
                "type": "object", 
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
                "properties": {
                  "matchLabels": {
                    "additionalProperties": {
                      "type": "string"
                    }, 
                    "type": "object", 
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                  }, 
                  "matchExpressions": {
                    "items": {
                      "required": [
                        "key", 
                        "operator"
                      ], 
                      "type": "object", 
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                      "properties": {
                        "operator": {
                          "type": "string", 
                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                        }, 
                        "values": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array", 
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                        }, 
                        "key": {
                          "type": "string", 
                          "description": "key is the label key that the selector applies to."
                        }
                      }
                    }, 
                    "type": "array", 
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                  }
                }
              }, 
              "sideEffects": {
                "type": "string"
              }, 
              "timeoutSeconds": {
                "type": "integer", 
                "format": "int32"
              }, 
              "rules": {
                "items": {
                  "type": "object", 
                  "description": "RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.", 
                  "properties": {
                    "operations": {
                      "items": {
                        "type": "string"
                      }, 
                      "type": "array", 
                      "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required."
                    }, 
                    "apiGroups": {
                      "items": {
                        "type": "string"
                      }, 
                      "type": "array", 
                      "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required."
                    }, 
                    "apiVersions": {
                      "items": {
                        "type": "string"
                      }, 
                      "type": "array", 
                      "description": "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required."
                    }, 
                    "resources": {
                      "items": {
                        "type": "string"
                      }, 
                      "type": "array", 
                      "description": "Resources is a list of resources this rule applies to. \n For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources. \n If wildcard is present, the validation rule will ensure resources do not overlap with each other. \n Depending on the enclosing object, subresources might not be allowed. Required."
                    }, 
                    "scope": {
                      "type": "string", 
                      "description": "scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\"."
                    }
                  }
                }, 
                "type": "array"
              }, 
              "failurePolicy": {
                "type": "string"
              }, 
              "deploymentName": {
                "type": "string"
              }, 
              "admissionReviewVersions": {
                "items": {
                  "type": "string"
                }, 
                "type": "array"
              }, 
              "generateName": {
                "type": "string"
              }, 
              "targetPort": {
                "x-kubernetes-int-or-string": true
              }, 
              "conversionCRDs": {
                "items": {
                  "type": "string"
                }, 
                "type": "array"
              }, 
              "type": {
                "enum": [
                  "ValidatingAdmissionWebhook", 
                  "MutatingAdmissionWebhook", 
                  "ConversionWebhook"
                ], 
                "type": "string", 
                "description": "WebhookAdmissionType is the type of admission webhooks supported by OLM"
              }, 
              "containerPort": {
                "minimum": 1, 
                "type": "integer", 
                "maximum": 65535, 
                "format": "int32"
              }, 
              "webhookPath": {
                "type": "string"
              }
            }
          }, 
          "type": "array"
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}