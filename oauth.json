{
  "description": "OAuth holds cluster-wide information about OAuth.  The canonical name is `cluster`. It is used to configure the integrated OAuth server. This configuration is only honored when the top level Authentication config has type set to IntegratedOAuth.", 
  "required": [
    "spec"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "OAuth", 
      "version": "v1", 
      "group": "config.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "status holds observed values from the cluster. They may not be overridden."
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "spec holds user settable values for configuration", 
      "properties": {
        "templates": {
          "type": "object", 
          "description": "templates allow you to customize pages like the login page.", 
          "properties": {
            "login": {
              "required": [
                "name"
              ], 
              "type": "object", 
              "description": "login is the name of a secret that specifies a go template to use to render the login page. The key \"login.html\" is used to locate the template data. If specified and the secret or expected key is not found, the default login page is used. If the specified template is not valid, the default login page is used. If unspecified, the default login page is used. The namespace for this secret is openshift-config.", 
              "properties": {
                "name": {
                  "type": "string", 
                  "description": "name is the metadata.name of the referenced secret"
                }
              }
            }, 
            "providerSelection": {
              "required": [
                "name"
              ], 
              "type": "object", 
              "description": "providerSelection is the name of a secret that specifies a go template to use to render the provider selection page. The key \"providers.html\" is used to locate the template data. If specified and the secret or expected key is not found, the default provider selection page is used. If the specified template is not valid, the default provider selection page is used. If unspecified, the default provider selection page is used. The namespace for this secret is openshift-config.", 
              "properties": {
                "name": {
                  "type": "string", 
                  "description": "name is the metadata.name of the referenced secret"
                }
              }
            }, 
            "error": {
              "required": [
                "name"
              ], 
              "type": "object", 
              "description": "error is the name of a secret that specifies a go template to use to render error pages during the authentication or grant flow. The key \"errors.html\" is used to locate the template data. If specified and the secret or expected key is not found, the default error page is used. If the specified template is not valid, the default error page is used. If unspecified, the default error page is used. The namespace for this secret is openshift-config.", 
              "properties": {
                "name": {
                  "type": "string", 
                  "description": "name is the metadata.name of the referenced secret"
                }
              }
            }
          }
        }, 
        "identityProviders": {
          "items": {
            "type": "object", 
            "description": "IdentityProvider provides identities for users authenticating using credentials", 
            "properties": {
              "openID": {
                "type": "object", 
                "description": "openID enables user authentication using OpenID credentials", 
                "properties": {
                  "clientSecret": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "extraAuthorizeParameters": {
                    "additionalProperties": {
                      "type": "string"
                    }, 
                    "type": "object", 
                    "description": "extraAuthorizeParameters are any custom parameters to add to the authorize request."
                  }, 
                  "ca": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced config map"
                      }
                    }
                  }, 
                  "clientID": {
                    "type": "string", 
                    "description": "clientID is the oauth client ID"
                  }, 
                  "claims": {
                    "type": "object", 
                    "description": "claims mappings", 
                    "properties": {
                      "preferredUsername": {
                        "items": {
                          "type": "string"
                        }, 
                        "type": "array", 
                        "description": "preferredUsername is the list of claims whose values should be used as the preferred username. If unspecified, the preferred username is determined from the value of the sub claim"
                      }, 
                      "email": {
                        "items": {
                          "type": "string"
                        }, 
                        "type": "array", 
                        "description": "email is the list of claims whose values should be used as the email address. Optional. If unspecified, no email is set for the identity"
                      }, 
                      "name": {
                        "items": {
                          "type": "string"
                        }, 
                        "type": "array", 
                        "description": "name is the list of claims whose values should be used as the display name. Optional. If unspecified, no display name is set for the identity"
                      }
                    }
                  }, 
                  "extraScopes": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "extraScopes are any scopes to request in addition to the standard \"openid\" scope."
                  }, 
                  "issuer": {
                    "type": "string", 
                    "description": "issuer is the URL that the OpenID Provider asserts as its Issuer Identifier. It must use the https scheme with no query or fragment component."
                  }
                }
              }, 
              "google": {
                "type": "object", 
                "description": "google enables user authentication using Google credentials", 
                "properties": {
                  "clientSecret": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "clientID": {
                    "type": "string", 
                    "description": "clientID is the oauth client ID"
                  }, 
                  "hostedDomain": {
                    "type": "string", 
                    "description": "hostedDomain is the optional Google App domain (e.g. \"mycompany.com\") to restrict logins to"
                  }
                }
              }, 
              "name": {
                "type": "string", 
                "description": "name is used to qualify the identities returned by this provider. - It MUST be unique and not shared by any other identity provider used - It MUST be a valid path segment: name cannot equal \".\" or \"..\" or contain \"/\" or \"%\" or \":\"   Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName"
              }, 
              "gitlab": {
                "type": "object", 
                "description": "gitlab enables user authentication using GitLab credentials", 
                "properties": {
                  "url": {
                    "type": "string", 
                    "description": "url is the oauth server base URL"
                  }, 
                  "clientSecret": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "ca": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced config map"
                      }
                    }
                  }, 
                  "clientID": {
                    "type": "string", 
                    "description": "clientID is the oauth client ID"
                  }
                }
              }, 
              "mappingMethod": {
                "type": "string", 
                "description": "mappingMethod determines how identities from this provider are mapped to users Defaults to \"claim\""
              }, 
              "basicAuth": {
                "type": "object", 
                "description": "basicAuth contains configuration options for the BasicAuth IdP", 
                "properties": {
                  "url": {
                    "type": "string", 
                    "description": "url is the remote URL to connect to"
                  }, 
                  "tlsClientCert": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "tlsClientCert is an optional reference to a secret by name that contains the PEM-encoded TLS client certificate to present when connecting to the server. The key \"tls.crt\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "ca": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced config map"
                      }
                    }
                  }, 
                  "tlsClientKey": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "tlsClientKey is an optional reference to a secret by name that contains the PEM-encoded TLS private key for the client certificate referenced in tlsClientCert. The key \"tls.key\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }
                }
              }, 
              "requestHeader": {
                "type": "object", 
                "description": "requestHeader enables user authentication using request header credentials", 
                "properties": {
                  "emailHeaders": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "emailHeaders is the set of headers to check for the email address"
                  }, 
                  "clientCommonNames": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "clientCommonNames is an optional list of common names to require a match from. If empty, any client certificate validated against the clientCA bundle is considered authoritative."
                  }, 
                  "ca": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "ca is a required reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. Specifically, it allows verification of incoming requests to prevent header spoofing. The key \"ca.crt\" is used to locate the data. If the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. The namespace for this config map is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced config map"
                      }
                    }
                  }, 
                  "headers": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "headers is the set of headers to check for identity information"
                  }, 
                  "challengeURL": {
                    "type": "string", 
                    "description": "challengeURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect WWW-Authenticate challenges will be redirected here. ${url} is replaced with the current URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url} ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query} Required when challenge is set to true."
                  }, 
                  "preferredUsernameHeaders": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "preferredUsernameHeaders is the set of headers to check for the preferred username"
                  }, 
                  "loginURL": {
                    "type": "string", 
                    "description": "loginURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect interactive logins will be redirected here ${url} is replaced with the current URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url} ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query} Required when login is set to true."
                  }, 
                  "nameHeaders": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "nameHeaders is the set of headers to check for the display name"
                  }
                }
              }, 
              "htpasswd": {
                "type": "object", 
                "description": "htpasswd enables user authentication using an HTPasswd file to validate credentials", 
                "properties": {
                  "fileData": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "fileData is a required reference to a secret by name containing the data to use as the htpasswd file. The key \"htpasswd\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. If the specified htpasswd data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }
                }
              }, 
              "github": {
                "type": "object", 
                "description": "github enables user authentication using GitHub credentials", 
                "properties": {
                  "clientSecret": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "organizations": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "organizations optionally restricts which organizations are allowed to log in"
                  }, 
                  "ca": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. This can only be configured when hostname is set to a non-empty value. The namespace for this config map is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced config map"
                      }
                    }
                  }, 
                  "hostname": {
                    "type": "string", 
                    "description": "hostname is the optional domain (e.g. \"mycompany.com\") for use with a hosted instance of GitHub Enterprise. It must match the GitHub Enterprise settings value configured at /setup/settings#hostname."
                  }, 
                  "clientID": {
                    "type": "string", 
                    "description": "clientID is the oauth client ID"
                  }, 
                  "teams": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "teams optionally restricts which teams are allowed to log in. Format is <org>/<team>."
                  }
                }
              }, 
              "keystone": {
                "type": "object", 
                "description": "keystone enables user authentication using keystone password credentials", 
                "properties": {
                  "url": {
                    "type": "string", 
                    "description": "url is the remote URL to connect to"
                  }, 
                  "tlsClientCert": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "tlsClientCert is an optional reference to a secret by name that contains the PEM-encoded TLS client certificate to present when connecting to the server. The key \"tls.crt\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "ca": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced config map"
                      }
                    }
                  }, 
                  "tlsClientKey": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "tlsClientKey is an optional reference to a secret by name that contains the PEM-encoded TLS private key for the client certificate referenced in tlsClientCert. The key \"tls.key\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "domainName": {
                    "type": "string", 
                    "description": "domainName is required for keystone v3"
                  }
                }
              }, 
              "ldap": {
                "type": "object", 
                "description": "ldap enables user authentication using LDAP credentials", 
                "properties": {
                  "bindDN": {
                    "type": "string", 
                    "description": "bindDN is an optional DN to bind with during the search phase."
                  }, 
                  "bindPassword": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "bindPassword is an optional reference to a secret by name containing a password to bind with during the search phase. The key \"bindPassword\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced secret"
                      }
                    }
                  }, 
                  "url": {
                    "type": "string", 
                    "description": "url is an RFC 2255 URL which specifies the LDAP search parameters to use. The syntax of the URL is: ldap://host:port/basedn?attribute?scope?filter"
                  }, 
                  "ca": {
                    "required": [
                      "name"
                    ], 
                    "type": "object", 
                    "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "name is the metadata.name of the referenced config map"
                      }
                    }
                  }, 
                  "attributes": {
                    "type": "object", 
                    "description": "attributes maps LDAP attributes to identities", 
                    "properties": {
                      "preferredUsername": {
                        "items": {
                          "type": "string"
                        }, 
                        "type": "array", 
                        "description": "preferredUsername is the list of attributes whose values should be used as the preferred username. LDAP standard login attribute is \"uid\""
                      }, 
                      "id": {
                        "items": {
                          "type": "string"
                        }, 
                        "type": "array", 
                        "description": "id is the list of attributes whose values should be used as the user ID. Required. First non-empty attribute is used. At least one attribute is required. If none of the listed attribute have a value, authentication fails. LDAP standard identity attribute is \"dn\""
                      }, 
                      "name": {
                        "items": {
                          "type": "string"
                        }, 
                        "type": "array", 
                        "description": "name is the list of attributes whose values should be used as the display name. Optional. If unspecified, no display name is set for the identity LDAP standard display name attribute is \"cn\""
                      }, 
                      "email": {
                        "items": {
                          "type": "string"
                        }, 
                        "type": "array", 
                        "description": "email is the list of attributes whose values should be used as the email address. Optional. If unspecified, no email is set for the identity"
                      }
                    }
                  }, 
                  "insecure": {
                    "type": "boolean", 
                    "description": "insecure, if true, indicates the connection should not use TLS WARNING: Should not be set to `true` with the URL scheme \"ldaps://\" as \"ldaps://\" URLs always          attempt to connect using TLS, even when `insecure` is set to `true` When `true`, \"ldap://\" URLS connect insecurely. When `false`, \"ldap://\" URLs are upgraded to a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830."
                  }
                }
              }, 
              "type": {
                "type": "string", 
                "description": "type identifies the identity provider type for this entry."
              }
            }
          }, 
          "type": "array", 
          "description": "identityProviders is an ordered list of ways for a user to identify themselves. When this list is empty, no identities are provisioned for users."
        }, 
        "tokenConfig": {
          "type": "object", 
          "description": "tokenConfig contains options for authorization and access tokens", 
          "properties": {
            "accessTokenInactivityTimeout": {
              "type": "string", 
              "description": "accessTokenInactivityTimeout defines the token inactivity timeout for tokens granted by any client. The value represents the maximum amount of time that can occur between consecutive uses of the token. Tokens become invalid if they are not used within this temporal window. The user will need to acquire a new token to regain access once a token times out. Takes valid time duration string such as \"5m\", \"1.5h\" or \"2h45m\". The minimum allowed value for duration is 300s (5 minutes). If the timeout is configured per client, then that value takes precedence. If the timeout value is not specified and the client does not override the value, then tokens are valid until their lifetime."
            }, 
            "accessTokenInactivityTimeoutSeconds": {
              "type": "integer", 
              "description": "accessTokenInactivityTimeoutSeconds - DEPRECATED: setting this field has no effect.", 
              "format": "int32"
            }, 
            "accessTokenMaxAgeSeconds": {
              "type": "integer", 
              "description": "accessTokenMaxAgeSeconds defines the maximum age of access tokens", 
              "format": "int32"
            }
          }
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}