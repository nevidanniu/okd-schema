{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "Restore", 
      "version": "v1", 
      "group": "velero.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "Restore is a Velero resource that represents the application of resources from a Velero backup to a target Kubernetes cluster.", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "RestoreStatus captures the current status of a Velero restore", 
      "properties": {
        "completionTimestamp": {
          "description": "CompletionTimestamp records the time the restore operation was completed. Completion time is recorded even on failed restore. The server's time is used for StartTimestamps", 
          "format": "date-time"
        }, 
        "errors": {
          "type": "integer", 
          "description": "Errors is a count of all error messages that were generated during execution of the restore. The actual errors are stored in object storage."
        }, 
        "warnings": {
          "type": "integer", 
          "description": "Warnings is a count of all warning messages that were generated during execution of the restore. The actual warnings are stored in object storage."
        }, 
        "startTimestamp": {
          "description": "StartTimestamp records the time the restore operation was started. The server's time is used for StartTimestamps", 
          "format": "date-time"
        }, 
        "validationErrors": {
          "description": "ValidationErrors is a slice of all validation errors (if applicable)"
        }, 
        "phase": {
          "enum": [
            "New", 
            "FailedValidation", 
            "InProgress", 
            "Completed", 
            "PartiallyFailed", 
            "Failed"
          ], 
          "type": "string", 
          "description": "Phase is the current state of the Restore"
        }, 
        "failureReason": {
          "type": "string", 
          "description": "FailureReason is an error that caused the entire restore to fail."
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "backupName"
      ], 
      "type": "object", 
      "description": "RestoreSpec defines the specification for a Velero restore.", 
      "properties": {
        "excludedNamespaces": {
          "description": "ExcludedNamespaces contains a list of namespaces that are not included in the restore."
        }, 
        "excludedResources": {
          "description": "ExcludedResources is a slice of resource names that are not included in the restore."
        }, 
        "includeClusterResources": {
          "description": "IncludeClusterResources specifies whether cluster-scoped resources should be included for consideration in the restore. If null, defaults to true."
        }, 
        "labelSelector": {
          "description": "LabelSelector is a metav1.LabelSelector to filter with when restoring individual objects from the backup. If empty or nil, all objects are included. Optional."
        }, 
        "backupName": {
          "type": "string", 
          "description": "BackupName is the unique name of the Velero backup to restore from."
        }, 
        "namespaceMapping": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "NamespaceMapping is a map of source namespace names to target namespace names to restore into. Any source namespaces not included in the map will be restored into namespaces of the same name."
        }, 
        "hooks": {
          "type": "object", 
          "description": "Hooks represent custom behaviors that should be executed during or post restore.", 
          "properties": {
            "resources": {
              "items": {
                "required": [
                  "name"
                ], 
                "type": "object", 
                "description": "RestoreResourceHookSpec defines one or more RestoreResrouceHooks that should be executed based on the rules defined for namespaces, resources, and label selector.", 
                "properties": {
                  "excludedNamespaces": {
                    "description": "ExcludedNamespaces specifies the namespaces to which this hook spec does not apply."
                  }, 
                  "excludedResources": {
                    "description": "ExcludedResources specifies the resources to which this hook spec does not apply."
                  }, 
                  "labelSelector": {
                    "description": "LabelSelector, if specified, filters the resources to which this hook spec applies."
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "Name is the name of this hook."
                  }, 
                  "postHooks": {
                    "items": {
                      "type": "object", 
                      "description": "RestoreResourceHook defines a restore hook for a resource.", 
                      "properties": {
                        "init": {
                          "type": "object", 
                          "description": "Init defines an init restore hook.", 
                          "properties": {
                            "initContainers": {
                              "items": {
                                "required": [
                                  "name"
                                ], 
                                "type": "object", 
                                "description": "A single application container that you want to run within a pod.", 
                                "properties": {
                                  "livenessProbe": {
                                    "type": "object", 
                                    "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                    "properties": {
                                      "httpGet": {
                                        "required": [
                                          "port"
                                        ], 
                                        "type": "object", 
                                        "description": "HTTPGet specifies the http request to perform.", 
                                        "properties": {
                                          "path": {
                                            "type": "string", 
                                            "description": "Path to access on the HTTP server."
                                          }, 
                                          "host": {
                                            "type": "string", 
                                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          }, 
                                          "scheme": {
                                            "type": "string", 
                                            "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                          }, 
                                          "httpHeaders": {
                                            "items": {
                                              "required": [
                                                "name", 
                                                "value"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "The header field name"
                                                }, 
                                                "value": {
                                                  "type": "string", 
                                                  "description": "The header field value"
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                          }, 
                                          "port": {
                                            "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }, 
                                      "timeoutSeconds": {
                                        "type": "integer", 
                                        "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                        "format": "int32"
                                      }, 
                                      "exec": {
                                        "type": "object", 
                                        "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            }, 
                                            "type": "array", 
                                            "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                          }
                                        }
                                      }, 
                                      "initialDelaySeconds": {
                                        "type": "integer", 
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                        "format": "int32"
                                      }, 
                                      "tcpSocket": {
                                        "required": [
                                          "port"
                                        ], 
                                        "type": "object", 
                                        "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                        "properties": {
                                          "host": {
                                            "type": "string", 
                                            "description": "Optional: Host name to connect to, defaults to the pod IP."
                                          }, 
                                          "port": {
                                            "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }, 
                                      "periodSeconds": {
                                        "type": "integer", 
                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                        "format": "int32"
                                      }, 
                                      "successThreshold": {
                                        "type": "integer", 
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                        "format": "int32"
                                      }, 
                                      "failureThreshold": {
                                        "type": "integer", 
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "workingDir": {
                                    "type": "string", 
                                    "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                                  }, 
                                  "image": {
                                    "type": "string", 
                                    "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
                                  }, 
                                  "volumeMounts": {
                                    "items": {
                                      "required": [
                                        "mountPath", 
                                        "name"
                                      ], 
                                      "type": "object", 
                                      "description": "VolumeMount describes a mounting of a Volume within a container.", 
                                      "properties": {
                                        "mountPath": {
                                          "type": "string", 
                                          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'."
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "This must match the Name of a Volume."
                                        }, 
                                        "subPath": {
                                          "type": "string", 
                                          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                        }, 
                                        "readOnly": {
                                          "type": "boolean", 
                                          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
                                        }, 
                                        "mountPropagation": {
                                          "type": "string", 
                                          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10."
                                        }, 
                                        "subPathExpr": {
                                          "type": "string", 
                                          "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Pod volumes to mount into the container's filesystem. Cannot be updated."
                                  }, 
                                  "tty": {
                                    "type": "boolean", 
                                    "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
                                  }, 
                                  "securityContext": {
                                    "type": "object", 
                                    "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/", 
                                    "properties": {
                                      "readOnlyRootFilesystem": {
                                        "type": "boolean", 
                                        "description": "Whether this container has a read-only root filesystem. Default is false."
                                      }, 
                                      "runAsGroup": {
                                        "type": "integer", 
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                        "format": "int64"
                                      }, 
                                      "runAsUser": {
                                        "type": "integer", 
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                        "format": "int64"
                                      }, 
                                      "allowPrivilegeEscalation": {
                                        "type": "boolean", 
                                        "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
                                      }, 
                                      "procMount": {
                                        "type": "string", 
                                        "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled."
                                      }, 
                                      "runAsNonRoot": {
                                        "type": "boolean", 
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                      }, 
                                      "windowsOptions": {
                                        "type": "object", 
                                        "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                        "properties": {
                                          "gmsaCredentialSpec": {
                                            "type": "string", 
                                            "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field."
                                          }, 
                                          "gmsaCredentialSpecName": {
                                            "type": "string", 
                                            "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                          }, 
                                          "runAsUserName": {
                                            "type": "string", 
                                            "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                          }
                                        }
                                      }, 
                                      "seLinuxOptions": {
                                        "type": "object", 
                                        "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.", 
                                        "properties": {
                                          "type": {
                                            "type": "string", 
                                            "description": "Type is a SELinux type label that applies to the container."
                                          }, 
                                          "role": {
                                            "type": "string", 
                                            "description": "Role is a SELinux role label that applies to the container."
                                          }, 
                                          "user": {
                                            "type": "string", 
                                            "description": "User is a SELinux user label that applies to the container."
                                          }, 
                                          "level": {
                                            "type": "string", 
                                            "description": "Level is SELinux level label that applies to the container."
                                          }
                                        }
                                      }, 
                                      "capabilities": {
                                        "type": "object", 
                                        "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.", 
                                        "properties": {
                                          "add": {
                                            "items": {
                                              "type": "string", 
                                              "description": "Capability represent POSIX capabilities type"
                                            }, 
                                            "type": "array", 
                                            "description": "Added capabilities"
                                          }, 
                                          "drop": {
                                            "items": {
                                              "type": "string", 
                                              "description": "Capability represent POSIX capabilities type"
                                            }, 
                                            "type": "array", 
                                            "description": "Removed capabilities"
                                          }
                                        }
                                      }, 
                                      "privileged": {
                                        "type": "boolean", 
                                        "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false."
                                      }
                                    }
                                  }, 
                                  "envFrom": {
                                    "items": {
                                      "type": "object", 
                                      "description": "EnvFromSource represents the source of a set of ConfigMaps", 
                                      "properties": {
                                        "prefix": {
                                          "type": "string", 
                                          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                        }, 
                                        "configMapRef": {
                                          "type": "object", 
                                          "description": "The ConfigMap to select from", 
                                          "properties": {
                                            "optional": {
                                              "type": "boolean", 
                                              "description": "Specify whether the ConfigMap must be defined"
                                            }, 
                                            "name": {
                                              "type": "string", 
                                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                            }
                                          }
                                        }, 
                                        "secretRef": {
                                          "type": "object", 
                                          "description": "The Secret to select from", 
                                          "properties": {
                                            "optional": {
                                              "type": "boolean", 
                                              "description": "Specify whether the Secret must be defined"
                                            }, 
                                            "name": {
                                              "type": "string", 
                                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                            }
                                          }
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
                                  }, 
                                  "stdinOnce": {
                                    "type": "boolean", 
                                    "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
                                  }, 
                                  "env": {
                                    "items": {
                                      "required": [
                                        "name"
                                      ], 
                                      "type": "object", 
                                      "description": "EnvVar represents an environment variable present in a Container.", 
                                      "properties": {
                                        "valueFrom": {
                                          "type": "object", 
                                          "description": "Source for the environment variable's value. Cannot be used if value is not empty.", 
                                          "properties": {
                                            "secretKeyRef": {
                                              "required": [
                                                "key"
                                              ], 
                                              "type": "object", 
                                              "description": "Selects a key of a secret in the pod's namespace", 
                                              "properties": {
                                                "optional": {
                                                  "type": "boolean", 
                                                  "description": "Specify whether the Secret or its key must be defined"
                                                }, 
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }, 
                                                "key": {
                                                  "type": "string", 
                                                  "description": "The key of the secret to select from.  Must be a valid secret key."
                                                }
                                              }
                                            }, 
                                            "fieldRef": {
                                              "required": [
                                                "fieldPath"
                                              ], 
                                              "type": "object", 
                                              "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.", 
                                              "properties": {
                                                "fieldPath": {
                                                  "type": "string", 
                                                  "description": "Path of the field to select in the specified API version."
                                                }, 
                                                "apiVersion": {
                                                  "type": "string", 
                                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                }
                                              }
                                            }, 
                                            "resourceFieldRef": {
                                              "required": [
                                                "resource"
                                              ], 
                                              "type": "object", 
                                              "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.", 
                                              "properties": {
                                                "containerName": {
                                                  "type": "string", 
                                                  "description": "Container name: required for volumes, optional for env vars"
                                                }, 
                                                "resource": {
                                                  "type": "string", 
                                                  "description": "Required: resource to select"
                                                }, 
                                                "divisor": {
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"", 
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            }, 
                                            "configMapKeyRef": {
                                              "required": [
                                                "key"
                                              ], 
                                              "type": "object", 
                                              "description": "Selects a key of a ConfigMap.", 
                                              "properties": {
                                                "optional": {
                                                  "type": "boolean", 
                                                  "description": "Specify whether the ConfigMap or its key must be defined"
                                                }, 
                                                "name": {
                                                  "type": "string", 
                                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                                }, 
                                                "key": {
                                                  "type": "string", 
                                                  "description": "The key to select."
                                                }
                                              }
                                            }
                                          }
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
                                        }, 
                                        "value": {
                                          "type": "string", 
                                          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "List of environment variables to set in the container. Cannot be updated."
                                  }, 
                                  "readinessProbe": {
                                    "type": "object", 
                                    "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                    "properties": {
                                      "httpGet": {
                                        "required": [
                                          "port"
                                        ], 
                                        "type": "object", 
                                        "description": "HTTPGet specifies the http request to perform.", 
                                        "properties": {
                                          "path": {
                                            "type": "string", 
                                            "description": "Path to access on the HTTP server."
                                          }, 
                                          "host": {
                                            "type": "string", 
                                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          }, 
                                          "scheme": {
                                            "type": "string", 
                                            "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                          }, 
                                          "httpHeaders": {
                                            "items": {
                                              "required": [
                                                "name", 
                                                "value"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "The header field name"
                                                }, 
                                                "value": {
                                                  "type": "string", 
                                                  "description": "The header field value"
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                          }, 
                                          "port": {
                                            "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }, 
                                      "timeoutSeconds": {
                                        "type": "integer", 
                                        "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                        "format": "int32"
                                      }, 
                                      "exec": {
                                        "type": "object", 
                                        "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            }, 
                                            "type": "array", 
                                            "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                          }
                                        }
                                      }, 
                                      "initialDelaySeconds": {
                                        "type": "integer", 
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                        "format": "int32"
                                      }, 
                                      "tcpSocket": {
                                        "required": [
                                          "port"
                                        ], 
                                        "type": "object", 
                                        "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                        "properties": {
                                          "host": {
                                            "type": "string", 
                                            "description": "Optional: Host name to connect to, defaults to the pod IP."
                                          }, 
                                          "port": {
                                            "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }, 
                                      "periodSeconds": {
                                        "type": "integer", 
                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                        "format": "int32"
                                      }, 
                                      "successThreshold": {
                                        "type": "integer", 
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                        "format": "int32"
                                      }, 
                                      "failureThreshold": {
                                        "type": "integer", 
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "resources": {
                                    "type": "object", 
                                    "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/", 
                                    "properties": {
                                      "requests": {
                                        "additionalProperties": {
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                          "x-kubernetes-int-or-string": true
                                        }, 
                                        "type": "object", 
                                        "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                      }, 
                                      "limits": {
                                        "additionalProperties": {
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$", 
                                          "x-kubernetes-int-or-string": true
                                        }, 
                                        "type": "object", 
                                        "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                      }
                                    }
                                  }, 
                                  "terminationMessagePath": {
                                    "type": "string", 
                                    "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                                  }, 
                                  "args": {
                                    "items": {
                                      "type": "string"
                                    }, 
                                    "type": "array", 
                                    "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                  }, 
                                  "lifecycle": {
                                    "type": "object", 
                                    "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.", 
                                    "properties": {
                                      "preStop": {
                                        "type": "object", 
                                        "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                        "properties": {
                                          "httpGet": {
                                            "required": [
                                              "port"
                                            ], 
                                            "type": "object", 
                                            "description": "HTTPGet specifies the http request to perform.", 
                                            "properties": {
                                              "path": {
                                                "type": "string", 
                                                "description": "Path to access on the HTTP server."
                                              }, 
                                              "host": {
                                                "type": "string", 
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                              }, 
                                              "scheme": {
                                                "type": "string", 
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                              }, 
                                              "httpHeaders": {
                                                "items": {
                                                  "required": [
                                                    "name", 
                                                    "value"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                  "properties": {
                                                    "name": {
                                                      "type": "string", 
                                                      "description": "The header field name"
                                                    }, 
                                                    "value": {
                                                      "type": "string", 
                                                      "description": "The header field value"
                                                    }
                                                  }
                                                }, 
                                                "type": "array", 
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                              }, 
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          }, 
                                          "tcpSocket": {
                                            "required": [
                                              "port"
                                            ], 
                                            "type": "object", 
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                            "properties": {
                                              "host": {
                                                "type": "string", 
                                                "description": "Optional: Host name to connect to, defaults to the pod IP."
                                              }, 
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          }, 
                                          "exec": {
                                            "type": "object", 
                                            "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                            "properties": {
                                              "command": {
                                                "items": {
                                                  "type": "string"
                                                }, 
                                                "type": "array", 
                                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                              }
                                            }
                                          }
                                        }
                                      }, 
                                      "postStart": {
                                        "type": "object", 
                                        "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks", 
                                        "properties": {
                                          "httpGet": {
                                            "required": [
                                              "port"
                                            ], 
                                            "type": "object", 
                                            "description": "HTTPGet specifies the http request to perform.", 
                                            "properties": {
                                              "path": {
                                                "type": "string", 
                                                "description": "Path to access on the HTTP server."
                                              }, 
                                              "host": {
                                                "type": "string", 
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                              }, 
                                              "scheme": {
                                                "type": "string", 
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                              }, 
                                              "httpHeaders": {
                                                "items": {
                                                  "required": [
                                                    "name", 
                                                    "value"
                                                  ], 
                                                  "type": "object", 
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                                  "properties": {
                                                    "name": {
                                                      "type": "string", 
                                                      "description": "The header field name"
                                                    }, 
                                                    "value": {
                                                      "type": "string", 
                                                      "description": "The header field value"
                                                    }
                                                  }
                                                }, 
                                                "type": "array", 
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                              }, 
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          }, 
                                          "tcpSocket": {
                                            "required": [
                                              "port"
                                            ], 
                                            "type": "object", 
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                            "properties": {
                                              "host": {
                                                "type": "string", 
                                                "description": "Optional: Host name to connect to, defaults to the pod IP."
                                              }, 
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          }, 
                                          "exec": {
                                            "type": "object", 
                                            "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                            "properties": {
                                              "command": {
                                                "items": {
                                                  "type": "string"
                                                }, 
                                                "type": "array", 
                                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                                  }, 
                                  "volumeDevices": {
                                    "items": {
                                      "required": [
                                        "devicePath", 
                                        "name"
                                      ], 
                                      "type": "object", 
                                      "description": "volumeDevice describes a mapping of a raw block device within a container.", 
                                      "properties": {
                                        "devicePath": {
                                          "type": "string", 
                                          "description": "devicePath is the path inside of the container that the device will be mapped to."
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "name must match the name of a persistentVolumeClaim in the pod"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "volumeDevices is the list of block devices to be used by the container."
                                  }, 
                                  "stdin": {
                                    "type": "boolean", 
                                    "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
                                  }, 
                                  "terminationMessagePolicy": {
                                    "type": "string", 
                                    "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
                                  }, 
                                  "command": {
                                    "items": {
                                      "type": "string"
                                    }, 
                                    "type": "array", 
                                    "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                  }, 
                                  "imagePullPolicy": {
                                    "type": "string", 
                                    "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                  }, 
                                  "startupProbe": {
                                    "type": "object", 
                                    "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                    "properties": {
                                      "httpGet": {
                                        "required": [
                                          "port"
                                        ], 
                                        "type": "object", 
                                        "description": "HTTPGet specifies the http request to perform.", 
                                        "properties": {
                                          "path": {
                                            "type": "string", 
                                            "description": "Path to access on the HTTP server."
                                          }, 
                                          "host": {
                                            "type": "string", 
                                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          }, 
                                          "scheme": {
                                            "type": "string", 
                                            "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                          }, 
                                          "httpHeaders": {
                                            "items": {
                                              "required": [
                                                "name", 
                                                "value"
                                              ], 
                                              "type": "object", 
                                              "description": "HTTPHeader describes a custom header to be used in HTTP probes", 
                                              "properties": {
                                                "name": {
                                                  "type": "string", 
                                                  "description": "The header field name"
                                                }, 
                                                "value": {
                                                  "type": "string", 
                                                  "description": "The header field value"
                                                }
                                              }
                                            }, 
                                            "type": "array", 
                                            "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                          }, 
                                          "port": {
                                            "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }, 
                                      "timeoutSeconds": {
                                        "type": "integer", 
                                        "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                        "format": "int32"
                                      }, 
                                      "exec": {
                                        "type": "object", 
                                        "description": "One and only one of the following should be specified. Exec specifies the action to take.", 
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            }, 
                                            "type": "array", 
                                            "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                          }
                                        }
                                      }, 
                                      "initialDelaySeconds": {
                                        "type": "integer", 
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes", 
                                        "format": "int32"
                                      }, 
                                      "tcpSocket": {
                                        "required": [
                                          "port"
                                        ], 
                                        "type": "object", 
                                        "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook", 
                                        "properties": {
                                          "host": {
                                            "type": "string", 
                                            "description": "Optional: Host name to connect to, defaults to the pod IP."
                                          }, 
                                          "port": {
                                            "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.", 
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }, 
                                      "periodSeconds": {
                                        "type": "integer", 
                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.", 
                                        "format": "int32"
                                      }, 
                                      "successThreshold": {
                                        "type": "integer", 
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.", 
                                        "format": "int32"
                                      }, 
                                      "failureThreshold": {
                                        "type": "integer", 
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "ports": {
                                    "items": {
                                      "required": [
                                        "containerPort", 
                                        "protocol"
                                      ], 
                                      "type": "object", 
                                      "description": "ContainerPort represents a network port in a single container.", 
                                      "properties": {
                                        "hostPort": {
                                          "type": "integer", 
                                          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.", 
                                          "format": "int32"
                                        }, 
                                        "protocol": {
                                          "type": "string", 
                                          "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\"."
                                        }, 
                                        "containerPort": {
                                          "type": "integer", 
                                          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.", 
                                          "format": "int32"
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
                                        }, 
                                        "hostIP": {
                                          "type": "string", 
                                          "description": "What host IP to bind the external port to."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.", 
                                    "x-kubernetes-list-map-keys": [
                                      "containerPort", 
                                      "protocol"
                                    ], 
                                    "x-kubernetes-list-type": "map"
                                  }
                                }
                              }, 
                              "type": "array", 
                              "description": "InitContainers is list of init containers to be added to a pod during its restore."
                            }, 
                            "timeout": {
                              "type": "string", 
                              "description": "Timeout defines the maximum amount of time Velero should wait for the initContainers to complete."
                            }
                          }
                        }, 
                        "exec": {
                          "required": [
                            "command"
                          ], 
                          "type": "object", 
                          "description": "Exec defines an exec restore hook.", 
                          "properties": {
                            "onError": {
                              "enum": [
                                "Continue", 
                                "Fail"
                              ], 
                              "type": "string", 
                              "description": "OnError specifies how Velero should behave if it encounters an error executing this hook."
                            }, 
                            "container": {
                              "type": "string", 
                              "description": "Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used."
                            }, 
                            "waitTimeout": {
                              "type": "string", 
                              "description": "WaitTimeout defines the maximum amount of time Velero should wait for the container to be Ready before attempting to run the command."
                            }, 
                            "command": {
                              "minItems": 1, 
                              "items": {
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "Command is the command and arguments to execute from within a container after a pod has been restored."
                            }, 
                            "execTimeout": {
                              "type": "string", 
                              "description": "ExecTimeout defines the maximum amount of time Velero should wait for the hook to complete before considering the execution a failure."
                            }
                          }
                        }
                      }
                    }, 
                    "type": "array", 
                    "description": "PostHooks is a list of RestoreResourceHooks to execute during and after restoring a resource."
                  }, 
                  "includedResources": {
                    "description": "IncludedResources specifies the resources to which this hook spec applies. If empty, it applies to all resources."
                  }, 
                  "includedNamespaces": {
                    "description": "IncludedNamespaces specifies the namespaces to which this hook spec applies. If empty, it applies to all namespaces."
                  }
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "includedResources": {
          "description": "IncludedResources is a slice of resource names to include in the restore. If empty, all resources in the backup are included."
        }, 
        "restorePVs": {
          "description": "RestorePVs specifies whether to restore all included PVs from snapshot (via the cloudprovider)."
        }, 
        "scheduleName": {
          "type": "string", 
          "description": "ScheduleName is the unique name of the Velero schedule to restore from. If specified, and BackupName is empty, Velero will restore from the most recent successful backup created from this schedule."
        }, 
        "includedNamespaces": {
          "description": "IncludedNamespaces is a slice of namespace names to include objects from. If empty, all namespaces are included."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}