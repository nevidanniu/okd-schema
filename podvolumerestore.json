{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "PodVolumeRestore", 
      "version": "v1", 
      "group": "velero.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "PodVolumeRestoreStatus is the current status of a PodVolumeRestore.", 
      "properties": {
        "phase": {
          "enum": [
            "New", 
            "InProgress", 
            "Completed", 
            "Failed"
          ], 
          "type": "string", 
          "description": "Phase is the current state of the PodVolumeRestore."
        }, 
        "completionTimestamp": {
          "description": "CompletionTimestamp records the time a restore was completed. Completion time is recorded even on failed restores. The server's time is used for CompletionTimestamps", 
          "format": "date-time"
        }, 
        "message": {
          "type": "string", 
          "description": "Message is a message about the pod volume restore's status."
        }, 
        "startTimestamp": {
          "description": "StartTimestamp records the time a restore was started. The server's time is used for StartTimestamps", 
          "format": "date-time"
        }, 
        "progress": {
          "type": "object", 
          "description": "Progress holds the total number of bytes of the snapshot and the current number of restored bytes. This can be used to display progress information about the restore operation.", 
          "properties": {
            "totalBytes": {
              "type": "integer", 
              "format": "int64"
            }, 
            "bytesDone": {
              "type": "integer", 
              "format": "int64"
            }
          }
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "backupStorageLocation", 
        "pod", 
        "repoIdentifier", 
        "snapshotID", 
        "volume"
      ], 
      "type": "object", 
      "description": "PodVolumeRestoreSpec is the specification for a PodVolumeRestore.", 
      "properties": {
        "volume": {
          "type": "string", 
          "description": "Volume is the name of the volume within the Pod to be restored."
        }, 
        "backupStorageLocation": {
          "type": "string", 
          "description": "BackupStorageLocation is the name of the backup storage location where the restic repository is stored."
        }, 
        "pod": {
          "type": "object", 
          "description": "Pod is a reference to the pod containing the volume to be restored.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            }, 
            "namespace": {
              "type": "string", 
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
            }, 
            "apiVersion": {
              "type": "string", 
              "description": "API version of the referent."
            }, 
            "fieldPath": {
              "type": "string", 
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
            }, 
            "resourceVersion": {
              "type": "string", 
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
            }, 
            "uid": {
              "type": "string", 
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
            }
          }
        }, 
        "repoIdentifier": {
          "type": "string", 
          "description": "RepoIdentifier is the restic repository identifier."
        }, 
        "snapshotID": {
          "type": "string", 
          "description": "SnapshotID is the ID of the volume snapshot to be restored."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}