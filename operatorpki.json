{
  "description": "OperatorPKI is a simple certificate authority. It is not intended for external use - rather, it is internal to the network operator. The CNO creates a CA and a certificate signed by that CA. The certificate has both ClientAuth and ServerAuth extended usages enabled. \n  More specifically, given an OperatorPKI with <name>, the CNO will manage: - A Secret called <name>-ca with two data keys:   - tls.key - the private key   - tls.crt - the CA certificate - A ConfigMap called <name>-ca with a single data key:   - cabundle.crt - the CA certificate(s) - A Secret called <name>-cert with two data keys:   - tls.key - the private key   - tls.crt - the certificate, signed by the CA \n The CA certificate will have a validity of 10 years, rotated after 9. The target certificate will have a validity of 6 months, rotated after 3 \n The CA certificate will have a CommonName of \"<namespace>_<name>-ca@<timestamp>\", where <timestamp> is the last rotation time.", 
  "required": [
    "spec"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "OperatorPKI", 
      "version": "v1", 
      "group": "network.operator.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "OperatorPKIStatus is not implemented."
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "targetCert"
      ], 
      "type": "object", 
      "description": "OperatorPKISpec is the PKI configuration.", 
      "properties": {
        "targetCert": {
          "required": [
            "commonName"
          ], 
          "type": "object", 
          "description": "targetCert configures the certificate signed by the CA. It will have both ClientAuth and ServerAuth enabled", 
          "properties": {
            "commonName": {
              "minLength": 1, 
              "type": "string", 
              "description": "commonName is the value in the certificate's CN"
            }
          }
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}