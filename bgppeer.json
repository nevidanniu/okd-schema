{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "BGPPeer", 
      "version": "v1", 
      "group": "crd.projectcalico.org"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "BGPPeerSpec contains the specification for a BGPPeer resource.", 
      "properties": {
        "node": {
          "type": "string", 
          "description": "The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster."
        }, 
        "peerIP": {
          "type": "string", 
          "description": "The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be `[<IPv6>]:port` or `<IPv4>:<port>` for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer."
        }, 
        "keepOriginalNextHop": {
          "type": "boolean", 
          "description": "Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \"true\" configures the selected BGP Peers node to use the \"next hop keep;\" instead of \"next hop self;\"(default) in the specific branch of the Node on \"bird.cfg\"."
        }, 
        "nodeSelector": {
          "type": "string", 
          "description": "Selector for the nodes that should have this peering.  When this is set, the Node field must be empty."
        }, 
        "asNumber": {
          "type": "integer", 
          "description": "The AS Number of the peer.", 
          "format": "int32"
        }, 
        "peerSelector": {
          "type": "string", 
          "description": "Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set."
        }, 
        "password": {
          "type": "object", 
          "description": "Optional BGP password for the peerings generated by this BGPPeer resource.", 
          "properties": {
            "secretKeyRef": {
              "required": [
                "key"
              ], 
              "type": "object", 
              "description": "Selects a key of a secret in the node pod's namespace.", 
              "properties": {
                "optional": {
                  "type": "boolean", 
                  "description": "Specify whether the Secret or its key must be defined"
                }, 
                "name": {
                  "type": "string", 
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                }, 
                "key": {
                  "type": "string", 
                  "description": "The key of the secret to select from.  Must be a valid secret key."
                }
              }
            }
          }
        }, 
        "sourceAddress": {
          "type": "string", 
          "description": "Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \"UseNodeIP\" means to configure the node IP as the source address.  \"None\" means not to configure a source address."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}