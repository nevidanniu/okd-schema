{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "BGPConfiguration", 
      "version": "v1", 
      "group": "crd.projectcalico.org"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "BGPConfiguration contains the configuration for any BGP routing.", 
  "properties": {
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "BGPConfigurationSpec contains the values of the BGP configuration.", 
      "properties": {
        "serviceClusterIPs": {
          "items": {
            "type": "object", 
            "description": "ServiceClusterIPBlock represents a single allowed ClusterIP CIDR block.", 
            "properties": {
              "cidr": {
                "type": "string"
              }
            }
          }, 
          "type": "array", 
          "description": "ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them."
        }, 
        "logSeverityScreen": {
          "type": "string", 
          "description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]"
        }, 
        "listenPort": {
          "minimum": 1, 
          "type": "integer", 
          "description": "ListenPort is the port where BGP protocol should listen. Defaults to 179", 
          "maximum": 65535
        }, 
        "prefixAdvertisements": {
          "items": {
            "type": "object", 
            "description": "PrefixAdvertisement configures advertisement properties for the specified CIDR.", 
            "properties": {
              "communities": {
                "items": {
                  "type": "string"
                }, 
                "type": "array", 
                "description": "Communities can be list of either community names already defined in `Specs.Communities` or community value of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where,`aa` is an AS Number, `nn` and `mm` are per-AS identifier."
              }, 
              "cidr": {
                "type": "string", 
                "description": "CIDR for which properties should be advertised."
              }
            }
          }, 
          "type": "array", 
          "description": "PrefixAdvertisements contains per-prefix advertisement configuration."
        }, 
        "nodeToNodeMeshEnabled": {
          "type": "boolean", 
          "description": "NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]"
        }, 
        "serviceExternalIPs": {
          "items": {
            "type": "object", 
            "description": "ServiceExternalIPBlock represents a single allowed External IP CIDR block.", 
            "properties": {
              "cidr": {
                "type": "string"
              }
            }
          }, 
          "type": "array", 
          "description": "ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks."
        }, 
        "asNumber": {
          "type": "integer", 
          "description": "ASNumber is the default AS number used by a node. [Default: 64512]", 
          "format": "int32"
        }, 
        "serviceLoadBalancerIPs": {
          "items": {
            "type": "object", 
            "description": "ServiceLoadBalancerIPBlock represents a single allowed LoadBalancer IP CIDR block.", 
            "properties": {
              "cidr": {
                "type": "string"
              }
            }
          }, 
          "type": "array", 
          "description": "ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks."
        }, 
        "communities": {
          "items": {
            "type": "object", 
            "description": "Community contains standard or large community value and its name.", 
            "properties": {
              "name": {
                "type": "string", 
                "description": "Name given to community value."
              }, 
              "value": {
                "pattern": "^(\\d+):(\\d+)$|^(\\d+):(\\d+):(\\d+)$", 
                "type": "string", 
                "description": "Value must be of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where, `aa` is an AS Number, `nn` and `mm` are per-AS identifier."
              }
            }
          }, 
          "type": "array", 
          "description": "Communities is a list of BGP community values and their arbitrary names for tagging routes."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}