{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "BareMetalHost", 
      "version": "v1alpha1", 
      "group": "metal3.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "BareMetalHost is the Schema for the baremetalhosts API", 
  "properties": {
    "status": {
      "required": [
        "errorCount", 
        "errorMessage", 
        "hardwareProfile", 
        "operationHistory", 
        "operationalStatus", 
        "poweredOn", 
        "provisioning"
      ], 
      "type": "object", 
      "description": "BareMetalHostStatus defines the observed state of BareMetalHost", 
      "properties": {
        "hardwareProfile": {
          "type": "string", 
          "description": "The name of the profile matching the hardware details."
        }, 
        "triedCredentials": {
          "type": "object", 
          "description": "the last credentials we sent to the provisioning backend", 
          "properties": {
            "credentials": {
              "type": "object", 
              "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace", 
              "properties": {
                "namespace": {
                  "type": "string", 
                  "description": "Namespace defines the space within which the secret name must be unique."
                }, 
                "name": {
                  "type": "string", 
                  "description": "Name is unique within a namespace to reference a secret resource."
                }
              }
            }, 
            "credentialsVersion": {
              "type": "string"
            }
          }
        }, 
        "errorMessage": {
          "type": "string", 
          "description": "the last error message reported by the provisioning subsystem"
        }, 
        "goodCredentials": {
          "type": "object", 
          "description": "the last credentials we were able to validate as working", 
          "properties": {
            "credentials": {
              "type": "object", 
              "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace", 
              "properties": {
                "namespace": {
                  "type": "string", 
                  "description": "Namespace defines the space within which the secret name must be unique."
                }, 
                "name": {
                  "type": "string", 
                  "description": "Name is unique within a namespace to reference a secret resource."
                }
              }
            }, 
            "credentialsVersion": {
              "type": "string"
            }
          }
        }, 
        "operationHistory": {
          "type": "object", 
          "description": "OperationHistory holds information about operations performed on this host.", 
          "properties": {
            "inspect": {
              "type": "object", 
              "description": "OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.", 
              "properties": {
                "start": {
                  "format": "date-time"
                }, 
                "end": {
                  "format": "date-time"
                }
              }
            }, 
            "provision": {
              "type": "object", 
              "description": "OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.", 
              "properties": {
                "start": {
                  "format": "date-time"
                }, 
                "end": {
                  "format": "date-time"
                }
              }
            }, 
            "deprovision": {
              "type": "object", 
              "description": "OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.", 
              "properties": {
                "start": {
                  "format": "date-time"
                }, 
                "end": {
                  "format": "date-time"
                }
              }
            }, 
            "register": {
              "type": "object", 
              "description": "OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.", 
              "properties": {
                "start": {
                  "format": "date-time"
                }, 
                "end": {
                  "format": "date-time"
                }
              }
            }
          }
        }, 
        "poweredOn": {
          "type": "boolean", 
          "description": "indicator for whether or not the host is powered on"
        }, 
        "errorType": {
          "enum": [
            "registration error", 
            "inspection error", 
            "provisioning error", 
            "power management error"
          ], 
          "type": "string", 
          "description": "ErrorType indicates the type of failure encountered when the OperationalStatus is OperationalStatusError"
        }, 
        "lastUpdated": {
          "type": "string", 
          "description": "LastUpdated identifies when this status was last observed.", 
          "format": "date-time"
        }, 
        "provisioning": {
          "required": [
            "ID", 
            "state"
          ], 
          "type": "object", 
          "description": "Information tracked by the provisioner.", 
          "properties": {
            "bootMode": {
              "enum": [
                "UEFI", 
                "legacy"
              ], 
              "type": "string", 
              "description": "BootMode indicates the boot mode used to provision the node"
            }, 
            "image": {
              "required": [
                "checksum", 
                "url"
              ], 
              "type": "object", 
              "description": "Image holds the details of the last image successfully provisioned to the host.", 
              "properties": {
                "url": {
                  "type": "string", 
                  "description": "URL is a location of an image to deploy."
                }, 
                "checksum": {
                  "type": "string", 
                  "description": "Checksum is the checksum for the image."
                }, 
                "checksumType": {
                  "enum": [
                    "md5", 
                    "sha256", 
                    "sha512"
                  ], 
                  "type": "string", 
                  "description": "ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512"
                }, 
                "format": {
                  "enum": [
                    "raw", 
                    "qcow2", 
                    "vdi", 
                    "vmdk"
                  ], 
                  "type": "string", 
                  "description": "DiskFormat contains the format of the image (raw, qcow2, ...) Needs to be set to raw for raw images streaming"
                }
              }
            }, 
            "rootDeviceHints": {
              "type": "object", 
              "description": "The RootDevicehints set by the user", 
              "properties": {
                "deviceName": {
                  "type": "string", 
                  "description": "A Linux device name like \"/dev/vda\". The hint must match the actual value exactly."
                }, 
                "rotational": {
                  "type": "boolean", 
                  "description": "True if the device should use spinning media, false otherwise."
                }, 
                "minSizeGigabytes": {
                  "minimum": 0, 
                  "type": "integer", 
                  "description": "The minimum size of the device in Gigabytes."
                }, 
                "hctl": {
                  "type": "string", 
                  "description": "A SCSI bus address like 0:0:0:0. The hint must match the actual value exactly."
                }, 
                "serialNumber": {
                  "type": "string", 
                  "description": "Device serial number. The hint must match the actual value exactly."
                }, 
                "wwnVendorExtension": {
                  "type": "string", 
                  "description": "Unique vendor storage identifier. The hint must match the actual value exactly."
                }, 
                "wwnWithExtension": {
                  "type": "string", 
                  "description": "Unique storage identifier with the vendor extension appended. The hint must match the actual value exactly."
                }, 
                "vendor": {
                  "type": "string", 
                  "description": "The name of the vendor or manufacturer of the device. The hint can be a substring of the actual value."
                }, 
                "model": {
                  "type": "string", 
                  "description": "A vendor-specific device identifier. The hint can be a substring of the actual value."
                }, 
                "wwn": {
                  "type": "string", 
                  "description": "Unique storage identifier. The hint must match the actual value exactly."
                }
              }
            }, 
            "ID": {
              "type": "string", 
              "description": "The machine's UUID from the underlying provisioning tool"
            }, 
            "state": {
              "type": "string", 
              "description": "An indiciator for what the provisioner is doing with the host."
            }
          }
        }, 
        "hardware": {
          "required": [
            "cpu", 
            "firmware", 
            "hostname", 
            "nics", 
            "ramMebibytes", 
            "storage", 
            "systemVendor"
          ], 
          "type": "object", 
          "description": "The hardware discovered to exist on the host.", 
          "properties": {
            "hostname": {
              "type": "string"
            }, 
            "nics": {
              "items": {
                "required": [
                  "ip", 
                  "mac", 
                  "model", 
                  "name", 
                  "pxe", 
                  "speedGbps", 
                  "vlanId"
                ], 
                "type": "object", 
                "description": "NIC describes one network interface on the host.", 
                "properties": {
                  "name": {
                    "type": "string", 
                    "description": "The name of the NIC, e.g. \"nic-1\""
                  }, 
                  "ip": {
                    "type": "string", 
                    "description": "The IP address of the device"
                  }, 
                  "vlanId": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "The untagged VLAN ID", 
                    "maximum": 4094, 
                    "format": "int32"
                  }, 
                  "mac": {
                    "pattern": "[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}", 
                    "type": "string", 
                    "description": "The device MAC addr"
                  }, 
                  "model": {
                    "type": "string", 
                    "description": "The name of the model, e.g. \"virt-io\""
                  }, 
                  "vlans": {
                    "items": {
                      "required": [
                        "id"
                      ], 
                      "type": "object", 
                      "description": "VLAN represents the name and ID of a VLAN", 
                      "properties": {
                        "id": {
                          "minimum": 0, 
                          "type": "integer", 
                          "description": "VLANID is a 12-bit 802.1Q VLAN identifier", 
                          "maximum": 4094, 
                          "format": "int32"
                        }, 
                        "name": {
                          "type": "string"
                        }
                      }
                    }, 
                    "type": "array", 
                    "description": "The VLANs available"
                  }, 
                  "speedGbps": {
                    "type": "integer", 
                    "description": "The speed of the device"
                  }, 
                  "pxe": {
                    "type": "boolean", 
                    "description": "Whether the NIC is PXE Bootable"
                  }
                }
              }, 
              "type": "array"
            }, 
            "ramMebibytes": {
              "type": "integer"
            }, 
            "firmware": {
              "required": [
                "bios"
              ], 
              "type": "object", 
              "description": "Firmware describes the firmware on the host.", 
              "properties": {
                "bios": {
                  "required": [
                    "date", 
                    "vendor", 
                    "version"
                  ], 
                  "type": "object", 
                  "description": "The BIOS for this firmware", 
                  "properties": {
                    "date": {
                      "type": "string", 
                      "description": "The release/build date for this BIOS"
                    }, 
                    "version": {
                      "type": "string", 
                      "description": "The version of the BIOS"
                    }, 
                    "vendor": {
                      "type": "string", 
                      "description": "The vendor name for this BIOS"
                    }
                  }
                }
              }
            }, 
            "storage": {
              "items": {
                "required": [
                  "name", 
                  "rotational", 
                  "serialNumber", 
                  "sizeBytes"
                ], 
                "type": "object", 
                "description": "Storage describes one storage device (disk, SSD, etc.) on the host.", 
                "properties": {
                  "rotational": {
                    "type": "boolean", 
                    "description": "Whether this disk represents rotational storage"
                  }, 
                  "vendor": {
                    "type": "string", 
                    "description": "The name of the vendor of the device"
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "A name for the disk, e.g. \"disk 1 (boot)\""
                  }, 
                  "hctl": {
                    "type": "string", 
                    "description": "The SCSI location of the device"
                  }, 
                  "serialNumber": {
                    "type": "string", 
                    "description": "The serial number of the device"
                  }, 
                  "wwnVendorExtension": {
                    "type": "string", 
                    "description": "The WWN Vendor extension of the device"
                  }, 
                  "wwnWithExtension": {
                    "type": "string", 
                    "description": "The WWN with the extension"
                  }, 
                  "sizeBytes": {
                    "type": "integer", 
                    "description": "The size of the disk in Bytes", 
                    "format": "int64"
                  }, 
                  "model": {
                    "type": "string", 
                    "description": "Hardware model"
                  }, 
                  "wwn": {
                    "type": "string", 
                    "description": "The WWN of the device"
                  }
                }
              }, 
              "type": "array"
            }, 
            "systemVendor": {
              "required": [
                "manufacturer", 
                "productName", 
                "serialNumber"
              ], 
              "type": "object", 
              "description": "HardwareSystemVendor stores details about the whole hardware system.", 
              "properties": {
                "serialNumber": {
                  "type": "string"
                }, 
                "productName": {
                  "type": "string"
                }, 
                "manufacturer": {
                  "type": "string"
                }
              }
            }, 
            "cpu": {
              "required": [
                "arch", 
                "clockMegahertz", 
                "count", 
                "flags", 
                "model"
              ], 
              "type": "object", 
              "description": "CPU describes one processor on the host.", 
              "properties": {
                "count": {
                  "type": "integer"
                }, 
                "flags": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "model": {
                  "type": "string"
                }, 
                "arch": {
                  "type": "string"
                }, 
                "clockMegahertz": {
                  "type": "number", 
                  "description": "ClockSpeed is a clock speed in MHz"
                }
              }
            }
          }
        }, 
        "operationalStatus": {
          "enum": [
            "", 
            "OK", 
            "discovered", 
            "error"
          ], 
          "type": "string", 
          "description": "OperationalStatus holds the status of the host"
        }, 
        "errorCount": {
          "type": "integer", 
          "description": "ErrorCount records how many times the host has encoutered an error since the last successful operation"
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "online"
      ], 
      "type": "object", 
      "description": "BareMetalHostSpec defines the desired state of BareMetalHost", 
      "properties": {
        "consumerRef": {
          "type": "object", 
          "description": "ConsumerRef can be used to store information about something that is using a host. When it is not empty, the host is considered \"in use\".", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            }, 
            "namespace": {
              "type": "string", 
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
            }, 
            "apiVersion": {
              "type": "string", 
              "description": "API version of the referent."
            }, 
            "fieldPath": {
              "type": "string", 
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
            }, 
            "resourceVersion": {
              "type": "string", 
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
            }, 
            "uid": {
              "type": "string", 
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
            }
          }
        }, 
        "bmc": {
          "required": [
            "address", 
            "credentialsName"
          ], 
          "type": "object", 
          "description": "How do we connect to the BMC?", 
          "properties": {
            "credentialsName": {
              "type": "string", 
              "description": "The name of the secret containing the BMC credentials (requires keys \"username\" and \"password\")."
            }, 
            "disableCertificateVerification": {
              "type": "boolean", 
              "description": "DisableCertificateVerification disables verification of server certificates when using HTTPS to connect to the BMC. This is required when the server certificate is self-signed, but is insecure because it allows a man-in-the-middle to intercept the connection."
            }, 
            "address": {
              "type": "string", 
              "description": "Address holds the URL for accessing the controller on the network."
            }
          }
        }, 
        "description": {
          "type": "string", 
          "description": "Description is a human-entered text used to help identify the host"
        }, 
        "externallyProvisioned": {
          "type": "boolean", 
          "description": "ExternallyProvisioned means something else is managing the image running on the host and the operator should only manage the power status and hardware inventory inspection. If the Image field is filled in, this field is ignored."
        }, 
        "networkData": {
          "type": "object", 
          "description": "NetworkData holds the reference to the Secret containing network configuration (e.g content of network_data.json which is passed to Config Drive).", 
          "properties": {
            "namespace": {
              "type": "string", 
              "description": "Namespace defines the space within which the secret name must be unique."
            }, 
            "name": {
              "type": "string", 
              "description": "Name is unique within a namespace to reference a secret resource."
            }
          }
        }, 
        "image": {
          "required": [
            "checksum", 
            "url"
          ], 
          "type": "object", 
          "description": "Image holds the details of the image to be provisioned.", 
          "properties": {
            "url": {
              "type": "string", 
              "description": "URL is a location of an image to deploy."
            }, 
            "checksum": {
              "type": "string", 
              "description": "Checksum is the checksum for the image."
            }, 
            "checksumType": {
              "enum": [
                "md5", 
                "sha256", 
                "sha512"
              ], 
              "type": "string", 
              "description": "ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512"
            }, 
            "format": {
              "enum": [
                "raw", 
                "qcow2", 
                "vdi", 
                "vmdk"
              ], 
              "type": "string", 
              "description": "DiskFormat contains the format of the image (raw, qcow2, ...) Needs to be set to raw for raw images streaming"
            }
          }
        }, 
        "bootMACAddress": {
          "pattern": "[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}", 
          "type": "string", 
          "description": "Which MAC address will PXE boot? This is optional for some types, but required for libvirt VMs driven by vbmc."
        }, 
        "taints": {
          "items": {
            "required": [
              "effect", 
              "key"
            ], 
            "type": "object", 
            "description": "The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint.", 
            "properties": {
              "value": {
                "type": "string", 
                "description": "Required. The taint value corresponding to the taint key."
              }, 
              "timeAdded": {
                "type": "string", 
                "description": "TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.", 
                "format": "date-time"
              }, 
              "effect": {
                "type": "string", 
                "description": "Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute."
              }, 
              "key": {
                "type": "string", 
                "description": "Required. The taint key to be applied to a node."
              }
            }
          }, 
          "type": "array", 
          "description": "Taints is the full, authoritative list of taints to apply to the corresponding Machine. This list will overwrite any modifications made to the Machine on an ongoing basis."
        }, 
        "hardwareProfile": {
          "type": "string", 
          "description": "What is the name of the hardware profile for this host? It should only be necessary to set this when inspection cannot automatically determine the profile."
        }, 
        "bootMode": {
          "enum": [
            "UEFI", 
            "legacy"
          ], 
          "type": "string", 
          "description": "Select the method of initializing the hardware during boot. Defaults to UEFI."
        }, 
        "rootDeviceHints": {
          "type": "object", 
          "description": "Provide guidance about how to choose the device for the image being provisioned.", 
          "properties": {
            "deviceName": {
              "type": "string", 
              "description": "A Linux device name like \"/dev/vda\". The hint must match the actual value exactly."
            }, 
            "rotational": {
              "type": "boolean", 
              "description": "True if the device should use spinning media, false otherwise."
            }, 
            "minSizeGigabytes": {
              "minimum": 0, 
              "type": "integer", 
              "description": "The minimum size of the device in Gigabytes."
            }, 
            "hctl": {
              "type": "string", 
              "description": "A SCSI bus address like 0:0:0:0. The hint must match the actual value exactly."
            }, 
            "serialNumber": {
              "type": "string", 
              "description": "Device serial number. The hint must match the actual value exactly."
            }, 
            "wwnVendorExtension": {
              "type": "string", 
              "description": "Unique vendor storage identifier. The hint must match the actual value exactly."
            }, 
            "wwnWithExtension": {
              "type": "string", 
              "description": "Unique storage identifier with the vendor extension appended. The hint must match the actual value exactly."
            }, 
            "vendor": {
              "type": "string", 
              "description": "The name of the vendor or manufacturer of the device. The hint can be a substring of the actual value."
            }, 
            "model": {
              "type": "string", 
              "description": "A vendor-specific device identifier. The hint can be a substring of the actual value."
            }, 
            "wwn": {
              "type": "string", 
              "description": "Unique storage identifier. The hint must match the actual value exactly."
            }
          }
        }, 
        "online": {
          "type": "boolean", 
          "description": "Should the server be online?"
        }, 
        "userData": {
          "type": "object", 
          "description": "UserData holds the reference to the Secret containing the user data to be passed to the host before it boots.", 
          "properties": {
            "namespace": {
              "type": "string", 
              "description": "Namespace defines the space within which the secret name must be unique."
            }, 
            "name": {
              "type": "string", 
              "description": "Name is unique within a namespace to reference a secret resource."
            }
          }
        }, 
        "metaData": {
          "type": "object", 
          "description": "MetaData holds the reference to the Secret containing host metadata (e.g. meta_data.json which is passed to Config Drive).", 
          "properties": {
            "namespace": {
              "type": "string", 
              "description": "Namespace defines the space within which the secret name must be unique."
            }, 
            "name": {
              "type": "string", 
              "description": "Name is unique within a namespace to reference a secret resource."
            }
          }
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}