{
  "$schema": "http://json-schema.org/schema#", 
  "required": [
    "termination"
  ], 
  "type": "object", 
  "description": "TLSConfig defines config used to secure a route and provide termination", 
  "properties": {
    "key": {
      "type": "string", 
      "description": "key provides key file contents"
    }, 
    "certificate": {
      "type": "string", 
      "description": "certificate provides certificate contents"
    }, 
    "caCertificate": {
      "type": "string", 
      "description": "caCertificate provides the cert authority certificate contents"
    }, 
    "insecureEdgeTerminationPolicy": {
      "type": "string", 
      "description": "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80.\n\n* Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
    }, 
    "termination": {
      "type": "string", 
      "description": "termination indicates termination type.\n\n* edge - TLS termination is done by the router and http is used to communicate with the backend (default) * passthrough - Traffic is sent straight to the destination without the router providing TLS termination * reencrypt - TLS termination is done by the router and https is used to communicate with the backend"
    }, 
    "destinationCACertificate": {
      "type": "string", 
      "description": "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify."
    }
  }
}