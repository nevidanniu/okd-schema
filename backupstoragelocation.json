{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "BackupStorageLocation", 
      "version": "v1", 
      "group": "velero.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "BackupStorageLocation is a location where Velero stores backup objects", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "BackupStorageLocationStatus defines the observed state of BackupStorageLocation", 
      "properties": {
        "phase": {
          "enum": [
            "Available", 
            "Unavailable"
          ], 
          "type": "string", 
          "description": "Phase is the current state of the BackupStorageLocation."
        }, 
        "accessMode": {
          "enum": [
            "ReadOnly", 
            "ReadWrite"
          ], 
          "type": "string", 
          "description": "AccessMode is an unused field. \n Deprecated: there is now an AccessMode field on the Spec and this field will be removed entirely as of v2.0."
        }, 
        "lastSyncedRevision": {
          "type": "string", 
          "description": "LastSyncedRevision is the value of the `metadata/revision` file in the backup storage location the last time the BSL's contents were synced into the cluster. \n Deprecated: this field is no longer updated or used for detecting changes to the location's contents and will be removed entirely in v2.0."
        }, 
        "lastValidationTime": {
          "description": "LastValidationTime is the last time the backup store location was validated the cluster.", 
          "format": "date-time"
        }, 
        "lastSyncedTime": {
          "description": "LastSyncedTime is the last time the contents of the location were synced into the cluster.", 
          "format": "date-time"
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "objectStorage", 
        "provider"
      ], 
      "type": "object", 
      "description": "BackupStorageLocationSpec defines the desired state of a Velero BackupStorageLocation", 
      "properties": {
        "objectStorage": {
          "required": [
            "bucket"
          ], 
          "type": "object", 
          "description": "ObjectStorageLocation specifies the settings necessary to connect to a provider's object storage.", 
          "properties": {
            "caCert": {
              "type": "string", 
              "description": "CACert defines a CA bundle to use when verifying TLS connections to the provider.", 
              "format": "byte"
            }, 
            "prefix": {
              "type": "string", 
              "description": "Prefix is the path inside a bucket to use for Velero storage. Optional."
            }, 
            "bucket": {
              "type": "string", 
              "description": "Bucket is the bucket to use for object storage."
            }
          }
        }, 
        "accessMode": {
          "enum": [
            "ReadOnly", 
            "ReadWrite"
          ], 
          "type": "string", 
          "description": "AccessMode defines the permissions for the backup storage location."
        }, 
        "backupSyncPeriod": {
          "description": "BackupSyncPeriod defines how frequently to sync backup API objects from object storage. A value of 0 disables sync."
        }, 
        "provider": {
          "type": "string", 
          "description": "Provider is the provider of the backup storage."
        }, 
        "validationFrequency": {
          "description": "ValidationFrequency defines how frequently to validate the corresponding object storage. A value of 0 disables validation."
        }, 
        "config": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Config is for provider-specific configuration fields."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}