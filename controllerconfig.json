{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "ControllerConfig", 
      "version": "v1", 
      "group": "machineconfiguration.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "ControllerConfig describes configuration for MachineConfigController. This is currently only used to drive the MachineConfig objects generated by the TemplateController.", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "ControllerConfigStatus is the status for ControllerConfig", 
      "properties": {
        "observedGeneration": {
          "type": "integer", 
          "description": "observedGeneration represents the generation observed by the controller.", 
          "format": "int64"
        }, 
        "conditions": {
          "items": {
            "type": "object", 
            "description": "ControllerConfigStatusCondition contains condition information for ControllerConfigStatus", 
            "properties": {
              "status": {
                "type": "string", 
                "description": "status of the condition, one of True, False, Unknown."
              }, 
              "type": {
                "type": "string", 
                "description": "type specifies the state of the operator's reconciliation functionality."
              }, 
              "message": {
                "type": "string", 
                "description": "message provides additional information about the current condition. This is only to be consumed by humans."
              }, 
              "lastTransitionTime": {
                "description": "lastTransitionTime is the time of the last update to the current status object.", 
                "format": "date-time"
              }, 
              "reason": {
                "type": "string", 
                "description": "reason is the reason for the condition's last transition.  Reasons are PascalCase"
              }
            }
          }, 
          "type": "array", 
          "description": "conditions represents the latest available observations of current state."
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "ControllerConfigSpec is the spec for ControllerConfig resource.", 
      "properties": {
        "cloudProviderConfig": {
          "type": "string", 
          "description": "cloudProviderConfig is the configuration for the given cloud provider"
        }, 
        "osImageURL": {
          "type": "string", 
          "description": "osImageURL is the location of the container image that contains the OS update payload. Its value is taken from the data.osImageURL field on the machine-config-osimageurl ConfigMap."
        }, 
        "etcdDiscoveryDomain": {
          "type": "string", 
          "description": "etcdDiscoveryDomain is deprecated, use infra.status.etcdDiscoveryDomain instead"
        }, 
        "clusterDNSIP": {
          "type": "string", 
          "description": "clusterDNSIP is the cluster DNS IP address"
        }, 
        "ipFamilies": {
          "type": "string", 
          "description": "ipFamilies indicates the IP families in use by the cluster network"
        }, 
        "rootCAData": {
          "type": "string", 
          "description": "rootCAData specifies the root CA data", 
          "format": "byte"
        }, 
        "infra": {
          "required": [
            "spec"
          ], 
          "description": "infra holds the infrastructure details"
        }, 
        "platform": {
          "type": "string", 
          "description": "platform is deprecated. Use infra.status.platformStatus.type instead"
        }, 
        "kubeAPIServerServingCAData": {
          "type": "string", 
          "description": "kubeAPIServerServingCAData managed Kubelet to API Server Cert... Rotated automatically", 
          "format": "byte"
        }, 
        "proxy": {
          "description": "proxy holds the current proxy configuration for the nodes"
        }, 
        "dns": {
          "required": [
            "spec"
          ], 
          "description": "dns holds the cluster dns details"
        }, 
        "pullSecret": {
          "type": "object", 
          "description": "pullSecret is the default pull secret that needs to be installed on all machines.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            }, 
            "namespace": {
              "type": "string", 
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
            }, 
            "apiVersion": {
              "type": "string", 
              "description": "API version of the referent."
            }, 
            "fieldPath": {
              "type": "string", 
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
            }, 
            "resourceVersion": {
              "type": "string", 
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
            }, 
            "uid": {
              "type": "string", 
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
            }
          }
        }, 
        "images": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "images is map of images that are used by the controller to render templates under ./templates/"
        }, 
        "networkType": {
          "type": "string", 
          "description": "networkType holds the type of network the cluster is using"
        }, 
        "additionalTrustBundle": {
          "description": "additionalTrustBundle is a certificate bundle that will be added to the nodes trusted certificate store.", 
          "format": "byte"
        }, 
        "cloudProviderCAData": {
          "description": "cloudProvider specifies the cloud provider CA data", 
          "format": "byte"
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}