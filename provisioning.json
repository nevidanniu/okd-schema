{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "Provisioning", 
      "version": "v1alpha1", 
      "group": "metal3.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "Provisioning contains configuration used by the Provisioning service (Ironic) to provision baremetal hosts. Provisioning is created by the OpenShift installer using admin or user provided information about the provisioning network and the NIC on the server that can be used to PXE boot it. This CR is a singleton, created by the installer and currently only consumed by the cluster-baremetal-operator to bring up and update containers in a metal3 cluster.", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "ProvisioningStatus defines the observed state of Provisioning", 
      "properties": {
        "observedGeneration": {
          "type": "integer", 
          "description": "observedGeneration is the last generation change you've dealt with", 
          "format": "int64"
        }, 
        "readyReplicas": {
          "type": "integer", 
          "description": "readyReplicas indicates how many replicas are ready and at the desired state", 
          "format": "int32"
        }, 
        "conditions": {
          "items": {
            "type": "object", 
            "description": "OperatorCondition is just the standard condition fields.", 
            "properties": {
              "status": {
                "type": "string"
              }, 
              "type": {
                "type": "string"
              }, 
              "message": {
                "type": "string"
              }, 
              "lastTransitionTime": {
                "type": "string", 
                "format": "date-time"
              }, 
              "reason": {
                "type": "string"
              }
            }
          }, 
          "type": "array", 
          "description": "conditions is a list of conditions and their status"
        }, 
        "version": {
          "type": "string", 
          "description": "version is the level this availability applies to"
        }, 
        "generations": {
          "items": {
            "type": "object", 
            "description": "GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.", 
            "properties": {
              "resource": {
                "type": "string", 
                "description": "resource is the resource type of the thing you're tracking"
              }, 
              "name": {
                "type": "string", 
                "description": "name is the name of the thing you're tracking"
              }, 
              "namespace": {
                "type": "string", 
                "description": "namespace is where the thing you're tracking is"
              }, 
              "lastGeneration": {
                "type": "integer", 
                "description": "lastGeneration is the last generation of the workload controller involved", 
                "format": "int64"
              }, 
              "group": {
                "type": "string", 
                "description": "group is the group of the thing you're tracking"
              }, 
              "hash": {
                "type": "string", 
                "description": "hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps"
              }
            }
          }, 
          "type": "array", 
          "description": "generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction."
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "type": "object", 
      "description": "ProvisioningSpec defines the desired state of Provisioning", 
      "properties": {
        "provisioningNetwork": {
          "enum": [
            "Managed", 
            "Unmanaged", 
            "Disabled"
          ], 
          "type": "string", 
          "description": "ProvisioningNetwork provides a way to indicate the state of the underlying network configuration for the provisioning network. This field can have one of the following values - `Managed`- when the provisioning network is completely managed by the Baremetal IPI solution. `Unmanaged`- when the provsioning network is present and used but the user is responsible for managing DHCP. Virtual media provisioning is recommended but PXE is still available if required. `Disabled`- when the provisioning network is fully disabled. User can bring up the baremetal cluster using virtual media or assisted installation. If using metal3 for power management, BMCs must be accessible from the machine networks. User should provide two IPs on the external network that would be used for provisioning services."
        }, 
        "provisioningOSDownloadURL": {
          "type": "string", 
          "description": "ProvisioningOSDownloadURL is the location from which the OS Image used to boot baremetal host machines can be downloaded by the metal3 cluster."
        }, 
        "provisioningDHCPRange": {
          "type": "string", 
          "description": "ProvisioningDHCPRange needs to be interpreted along with ProvisioningDHCPExternal. If the value of provisioningDHCPExternal is set to False, then ProvisioningDHCPRange represents the range of IP addresses that the DHCP server running within the metal3 cluster can use while provisioning baremetal servers. If the value of ProvisioningDHCPExternal is set to True, then the value of ProvisioningDHCPRange will be ignored. When the value of ProvisioningDHCPExternal is set to False, indicating an internal DHCP server and the value of ProvisioningDHCPRange is not set, then the DHCP range is taken to be the default range which goes from .10 to .100 of the ProvisioningNetworkCIDR. This is the only value in all of the Provisioning configuration that can be changed after the installer has created the CR. This value needs to be two comma sererated IP addresses within the ProvisioningNetworkCIDR where the 1st address represents the start of the range and the 2nd address represents the last usable address in the  range."
        }, 
        "provisioningNetworkCIDR": {
          "type": "string", 
          "description": "ProvisioningNetworkCIDR is the network on which the baremetal nodes are provisioned. The provisioningIP and the IPs in the dhcpRange all come from within this network."
        }, 
        "provisioningDHCPExternal": {
          "type": "boolean", 
          "description": "ProvisioningDHCPExternal indicates whether the DHCP server for IP addresses in the provisioning DHCP range is present within the metal3 cluster or external to it. This field is being deprecated in favor of provisioningNetwork."
        }, 
        "provisioningInterface": {
          "type": "string", 
          "description": "ProvisioningInterface is the name of the network interface on a baremetal server to the provisioning network. It can have values like eth1 or ens3."
        }, 
        "provisioningIP": {
          "type": "string", 
          "description": "ProvisioningIP is the IP address assigned to the provisioningInterface of the baremetal server. This IP address should be within the provisioning subnet, and outside of the DHCP range."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}