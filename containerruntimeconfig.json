{
  "description": "ContainerRuntimeConfig describes a customized Container Runtime configuration.", 
  "required": [
    "spec"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "ContainerRuntimeConfig", 
      "version": "v1", 
      "group": "machineconfiguration.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "ContainerRuntimeConfigStatus defines the observed state of a ContainerRuntimeConfig", 
      "properties": {
        "observedGeneration": {
          "type": "integer", 
          "description": "observedGeneration represents the generation observed by the controller.", 
          "format": "int64"
        }, 
        "conditions": {
          "items": {
            "type": "object", 
            "description": "ContainerRuntimeConfigCondition defines the state of the ContainerRuntimeConfig", 
            "properties": {
              "status": {
                "type": "string", 
                "description": "status of the condition, one of True, False, Unknown."
              }, 
              "type": {
                "type": "string", 
                "description": "type specifies the state of the operator's reconciliation functionality."
              }, 
              "message": {
                "type": "string", 
                "description": "message provides additional information about the current condition. This is only to be consumed by humans."
              }, 
              "lastTransitionTime": {
                "description": "lastTransitionTime is the time of the last update to the current status object.", 
                "format": "date-time"
              }, 
              "reason": {
                "type": "string", 
                "description": "reason is the reason for the condition's last transition.  Reasons are PascalCase"
              }
            }
          }, 
          "type": "array", 
          "description": "conditions represents the latest available observations of current state."
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "containerRuntimeConfig"
      ], 
      "type": "object", 
      "description": "ContainerRuntimeConfigSpec defines the desired state of ContainerRuntimeConfig", 
      "properties": {
        "machineConfigPoolSelector": {
          "type": "object", 
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              }, 
              "type": "object", 
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
            }, 
            "matchExpressions": {
              "items": {
                "required": [
                  "key", 
                  "operator"
                ], 
                "type": "object", 
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                "properties": {
                  "operator": {
                    "type": "string", 
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                  }, 
                  "values": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "key is the label key that the selector applies to."
                  }
                }
              }, 
              "type": "array", 
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
            }
          }
        }, 
        "containerRuntimeConfig": {
          "type": "object", 
          "description": "ContainerRuntimeConfiguration defines the tuneables of the container runtime", 
          "properties": {
            "logLevel": {
              "type": "string", 
              "description": "logLevel specifies the verbosity of the logs based on the level it is set to. Options are fatal, panic, error, warn, info, and debug."
            }, 
            "overlaySize": {
              "type": "string", 
              "description": "overlaySize specifies the maximum size of a container image. This flag can be used to set quota on the size of container images. (default: 10GB)"
            }, 
            "pidsLimit": {
              "type": "integer", 
              "description": "pidsLimit specifies the maximum number of processes allowed in a container", 
              "format": "int64"
            }, 
            "logSizeMax": {
              "type": "string", 
              "description": "logSizeMax specifies the Maximum size allowed for the container log file. Negative numbers indicate that no size limit is imposed. If it is positive, it must be >= 8192 to match/exceed conmon's read buffer."
            }
          }
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}