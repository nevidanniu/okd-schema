{
  "description": "ImageSignature holds a signature of an image. It allows to verify image identity and possibly other claims as long as the signature is trusted. Based on this information it is possible to restrict runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients doing image verification. The others are parsed from signature's content by the server. They serve just an informative purpose.", 
  "required": [
    "type", 
    "content"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "ImageSignature", 
      "version": "v1", 
      "group": ""
    }, 
    {
      "kind": "ImageSignature", 
      "version": "v1", 
      "group": "image.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "created": {
      "description": "If specified, it is the time of signature's creation.", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
    }, 
    "imageIdentity": {
      "type": "string", 
      "description": "A human readable string representing image's identity. It could be a product name and version, or an image pull spec (e.g. \"registry.access.redhat.com/rhel7/rhel:7.2\")."
    }, 
    "issuedTo": {
      "description": "If specified, it holds information about a subject of signing certificate or key (a person or entity who signed the image).", 
      "$ref": "_definitions.json#/definitions/com.github.openshift.api.image.v1.SignatureSubject"
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "content": {
      "type": "string", 
      "description": "Required: An opaque binary string which is an image's signature.", 
      "format": "byte"
    }, 
    "conditions": {
      "items": {
        "$ref": "_definitions.json#/definitions/com.github.openshift.api.image.v1.SignatureCondition"
      }, 
      "type": "array", 
      "description": "Conditions represent the latest available observations of a signature's current state.", 
      "x-kubernetes-patch-strategy": "merge", 
      "x-kubernetes-patch-merge-key": "type"
    }, 
    "type": {
      "type": "string", 
      "description": "Required: Describes a type of stored blob."
    }, 
    "signedClaims": {
      "additionalProperties": {
        "type": "string"
      }, 
      "type": "object", 
      "description": "Contains claims from the signature."
    }, 
    "issuedBy": {
      "description": "If specified, it holds information about an issuer of signing certificate or key (a person or entity who signed the signing certificate or key).", 
      "$ref": "_definitions.json#/definitions/com.github.openshift.api.image.v1.SignatureIssuer"
    }, 
    "metadata": {
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    }
  }
}