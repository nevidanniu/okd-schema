{
  "x-kubernetes-group-version-kind": [
    {
      "kind": "Schedule", 
      "version": "v1", 
      "group": "velero.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "Schedule is a Velero resource that represents a pre-scheduled or periodic Backup that should be run.", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "ScheduleStatus captures the current state of a Velero schedule", 
      "properties": {
        "lastBackup": {
          "description": "LastBackup is the last time a Backup was run for this Schedule schedule", 
          "format": "date-time"
        }, 
        "phase": {
          "enum": [
            "New", 
            "Enabled", 
            "FailedValidation"
          ], 
          "type": "string", 
          "description": "Phase is the current phase of the Schedule"
        }, 
        "validationErrors": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "ValidationErrors is a slice of all validation errors (if applicable)"
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "schedule", 
        "template"
      ], 
      "type": "object", 
      "description": "ScheduleSpec defines the specification for a Velero schedule", 
      "properties": {
        "template": {
          "type": "object", 
          "description": "Template is the definition of the Backup to be run on the provided schedule", 
          "properties": {
            "excludedNamespaces": {
              "description": "ExcludedNamespaces contains a list of namespaces that are not included in the backup."
            }, 
            "excludedResources": {
              "description": "ExcludedResources is a slice of resource names that are not included in the backup."
            }, 
            "includeClusterResources": {
              "description": "IncludeClusterResources specifies whether cluster-scoped resources should be included for consideration in the backup."
            }, 
            "labelSelector": {
              "description": "LabelSelector is a metav1.LabelSelector to filter with when adding individual objects to the backup. If empty or nil, all objects are included. Optional."
            }, 
            "storageLocation": {
              "type": "string", 
              "description": "StorageLocation is a string containing the name of a BackupStorageLocation where the backup should be stored."
            }, 
            "hooks": {
              "type": "object", 
              "description": "Hooks represent custom behaviors that should be executed at different phases of the backup.", 
              "properties": {
                "resources": {
                  "description": "Resources are hooks that should be executed when backing up individual instances of a resource."
                }
              }
            }, 
            "orderedResources": {
              "additionalProperties": {
                "type": "string"
              }, 
              "description": "OrderedResources specifies the backup order of resources of specific Kind. The map key is the Kind name and value is a list of resource names separeted by commas. Each resource name has format \"namespace/resourcename\".  For cluster resources, simply use \"resourcename\"."
            }, 
            "defaultVolumesToRestic": {
              "type": "boolean", 
              "description": "DefaultVolumesToRestic specifies whether restic should be used to take a backup of all pod volumes by default."
            }, 
            "volumeSnapshotLocations": {
              "items": {
                "type": "string"
              }, 
              "type": "array", 
              "description": "VolumeSnapshotLocations is a list containing names of VolumeSnapshotLocations associated with this backup."
            }, 
            "includedResources": {
              "description": "IncludedResources is a slice of resource names to include in the backup. If empty, all resources are included."
            }, 
            "ttl": {
              "type": "string", 
              "description": "TTL is a time.Duration-parseable string describing how long the Backup should be retained for."
            }, 
            "snapshotVolumes": {
              "description": "SnapshotVolumes specifies whether to take cloud snapshots of any PV's referenced in the set of objects included in the Backup."
            }, 
            "includedNamespaces": {
              "description": "IncludedNamespaces is a slice of namespace names to include objects from. If empty, all namespaces are included."
            }
          }
        }, 
        "schedule": {
          "type": "string", 
          "description": "Schedule is a Cron expression defining when to run the Backup."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}