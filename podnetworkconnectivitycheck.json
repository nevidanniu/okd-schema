{
  "description": "PodNetworkConnectivityCheck", 
  "required": [
    "spec"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "PodNetworkConnectivityCheck", 
      "version": "v1alpha1", 
      "group": "controlplane.operator.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "type": "object", 
      "description": "Status contains the observed status of the connectivity check", 
      "properties": {
        "successes": {
          "items": {
            "required": [
              "success"
            ], 
            "type": "object", 
            "description": "LogEntry records events", 
            "properties": {
              "latency": {
                "description": "Latency records how long the action mentioned in the entry took."
              }, 
              "message": {
                "type": "string", 
                "description": "Message explaining status in a human readable format."
              }, 
              "reason": {
                "type": "string", 
                "description": "Reason for status in a machine readable format."
              }, 
              "success": {
                "type": "boolean", 
                "description": "Success indicates if the log entry indicates a success or failure."
              }, 
              "time": {
                "description": "Start time of check action.", 
                "format": "date-time"
              }
            }
          }, 
          "type": "array", 
          "description": "Successes contains logs successful check actions"
        }, 
        "failures": {
          "items": {
            "required": [
              "success"
            ], 
            "type": "object", 
            "description": "LogEntry records events", 
            "properties": {
              "latency": {
                "description": "Latency records how long the action mentioned in the entry took."
              }, 
              "message": {
                "type": "string", 
                "description": "Message explaining status in a human readable format."
              }, 
              "reason": {
                "type": "string", 
                "description": "Reason for status in a machine readable format."
              }, 
              "success": {
                "type": "boolean", 
                "description": "Success indicates if the log entry indicates a success or failure."
              }, 
              "time": {
                "description": "Start time of check action.", 
                "format": "date-time"
              }
            }
          }, 
          "type": "array", 
          "description": "Failures contains logs of unsuccessful check actions"
        }, 
        "outages": {
          "items": {
            "type": "object", 
            "description": "OutageEntry records time period of an outage", 
            "properties": {
              "start": {
                "description": "Start of outage detected", 
                "format": "date-time"
              }, 
              "message": {
                "type": "string", 
                "description": "Message summarizes outage details in a human readable format."
              }, 
              "startLogs": {
                "items": {
                  "required": [
                    "success"
                  ], 
                  "type": "object", 
                  "description": "LogEntry records events", 
                  "properties": {
                    "latency": {
                      "description": "Latency records how long the action mentioned in the entry took."
                    }, 
                    "message": {
                      "type": "string", 
                      "description": "Message explaining status in a human readable format."
                    }, 
                    "reason": {
                      "type": "string", 
                      "description": "Reason for status in a machine readable format."
                    }, 
                    "success": {
                      "type": "boolean", 
                      "description": "Success indicates if the log entry indicates a success or failure."
                    }, 
                    "time": {
                      "description": "Start time of check action.", 
                      "format": "date-time"
                    }
                  }
                }, 
                "type": "array", 
                "description": "StartLogs contains log entries related to the start of this outage. Should contain the original failure, any entries where the failure mode changed."
              }, 
              "end": {
                "description": "End of outage detected", 
                "format": "date-time"
              }, 
              "endLogs": {
                "items": {
                  "required": [
                    "success"
                  ], 
                  "type": "object", 
                  "description": "LogEntry records events", 
                  "properties": {
                    "latency": {
                      "description": "Latency records how long the action mentioned in the entry took."
                    }, 
                    "message": {
                      "type": "string", 
                      "description": "Message explaining status in a human readable format."
                    }, 
                    "reason": {
                      "type": "string", 
                      "description": "Reason for status in a machine readable format."
                    }, 
                    "success": {
                      "type": "boolean", 
                      "description": "Success indicates if the log entry indicates a success or failure."
                    }, 
                    "time": {
                      "description": "Start time of check action.", 
                      "format": "date-time"
                    }
                  }
                }, 
                "type": "array", 
                "description": "EndLogs contains log entries related to the end of this outage. Should contain the success entry that resolved the outage and possibly a few of the failure log entries that preceded it."
              }
            }
          }, 
          "type": "array", 
          "description": "Outages contains logs of time periods of outages"
        }, 
        "conditions": {
          "items": {
            "required": [
              "status", 
              "type"
            ], 
            "type": "object", 
            "description": "PodNetworkConnectivityCheckCondition represents the overall status of the pod network connectivity.", 
            "properties": {
              "status": {
                "type": "string", 
                "description": "Status of the condition"
              }, 
              "type": {
                "type": "string", 
                "description": "Type of the condition"
              }, 
              "message": {
                "type": "string", 
                "description": "Message indicating details about last transition in a human readable format."
              }, 
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.", 
                "format": "date-time"
              }, 
              "reason": {
                "type": "string", 
                "description": "Reason for the condition's last status transition in a machine readable format."
              }
            }
          }, 
          "type": "array", 
          "description": "Conditions summarize the status of the check"
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "sourcePod", 
        "targetEndpoint"
      ], 
      "type": "object", 
      "description": "Spec defines the source and target of the connectivity check", 
      "properties": {
        "tlsClientCert": {
          "required": [
            "name"
          ], 
          "type": "object", 
          "description": "TLSClientCert, if specified, references a kubernetes.io/tls type secret with 'tls.crt' and 'tls.key' entries containing an optional TLS client certificate and key to be used when checking endpoints that require a client certificate in order to gracefully preform the scan without causing excessive logging in the endpoint process. The secret must exist in the same namespace as this resource.", 
          "properties": {
            "name": {
              "type": "string", 
              "description": "name is the metadata.name of the referenced secret"
            }
          }
        }, 
        "sourcePod": {
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$", 
          "type": "string", 
          "description": "SourcePod names the pod from which the condition will be checked"
        }, 
        "targetEndpoint": {
          "pattern": "^\\S+:\\d*$", 
          "type": "string", 
          "description": "EndpointAddress to check. A TCP address of the form host:port. Note that if host is a DNS name, then the check would fail if the DNS name cannot be resolved. Specify an IP address for host to bypass DNS name lookup."
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}