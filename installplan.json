{
  "description": "InstallPlan defines the installation of a set of operators.", 
  "required": [
    "metadata", 
    "spec"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "InstallPlan", 
      "version": "v1alpha1", 
      "group": "operators.coreos.com"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "status": {
      "required": [
        "catalogSources", 
        "phase"
      ], 
      "type": "object", 
      "description": "InstallPlanStatus represents the information about the status of steps required to complete installation. \n Status may trail the actual state of a system.", 
      "properties": {
        "catalogSources": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "attenuatedServiceAccountRef": {
          "type": "object", 
          "description": "AttenuatedServiceAccountRef references the service account that is used to do scoped operator install.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            }, 
            "namespace": {
              "type": "string", 
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
            }, 
            "apiVersion": {
              "type": "string", 
              "description": "API version of the referent."
            }, 
            "fieldPath": {
              "type": "string", 
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
            }, 
            "resourceVersion": {
              "type": "string", 
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
            }, 
            "uid": {
              "type": "string", 
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
            }
          }
        }, 
        "bundleLookups": {
          "items": {
            "required": [
              "catalogSourceRef", 
              "identifier", 
              "path", 
              "replaces"
            ], 
            "type": "object", 
            "description": "BundleLookup is a request to pull and unpackage the content of a bundle to the cluster.", 
            "properties": {
              "catalogSourceRef": {
                "type": "object", 
                "description": "CatalogSourceRef is a reference to the CatalogSource the bundle path was resolved from.", 
                "properties": {
                  "kind": {
                    "type": "string", 
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  }, 
                  "namespace": {
                    "type": "string", 
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                  }, 
                  "apiVersion": {
                    "type": "string", 
                    "description": "API version of the referent."
                  }, 
                  "fieldPath": {
                    "type": "string", 
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future."
                  }, 
                  "resourceVersion": {
                    "type": "string", 
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                  }, 
                  "uid": {
                    "type": "string", 
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                  }
                }
              }, 
              "replaces": {
                "type": "string", 
                "description": "Replaces is the name of the bundle to replace with the one found at Path."
              }, 
              "path": {
                "type": "string", 
                "description": "Path refers to the location of a bundle to pull. It's typically an image reference."
              }, 
              "identifier": {
                "type": "string", 
                "description": "Identifier is the catalog-unique name of the operator (the name of the CSV for bundles that contain CSVs)"
              }, 
              "conditions": {
                "items": {
                  "required": [
                    "status", 
                    "type"
                  ], 
                  "type": "object", 
                  "properties": {
                    "status": {
                      "type": "string", 
                      "description": "Status of the condition, one of True, False, Unknown."
                    }, 
                    "lastUpdateTime": {
                      "type": "string", 
                      "description": "Last time the condition was probed.", 
                      "format": "date-time"
                    }, 
                    "lastTransitionTime": {
                      "type": "string", 
                      "description": "Last time the condition transitioned from one status to another.", 
                      "format": "date-time"
                    }, 
                    "reason": {
                      "type": "string", 
                      "description": "The reason for the condition's last transition."
                    }, 
                    "message": {
                      "type": "string", 
                      "description": "A human readable message indicating details about the transition."
                    }, 
                    "type": {
                      "type": "string", 
                      "description": "Type of condition."
                    }
                  }
                }, 
                "type": "array", 
                "description": "Conditions represents the overall state of a BundleLookup."
              }, 
              "properties": {
                "type": "string", 
                "description": "The effective properties of the unpacked bundle."
              }
            }
          }, 
          "type": "array", 
          "description": "BundleLookups is the set of in-progress requests to pull and unpackage bundle content to the cluster."
        }, 
        "plan": {
          "items": {
            "required": [
              "resolving", 
              "resource", 
              "status"
            ], 
            "type": "object", 
            "description": "Step represents the status of an individual step in an InstallPlan.", 
            "properties": {
              "status": {
                "type": "string", 
                "description": "StepStatus is the current status of a particular resource an in InstallPlan"
              }, 
              "resource": {
                "required": [
                  "group", 
                  "kind", 
                  "name", 
                  "sourceName", 
                  "sourceNamespace", 
                  "version"
                ], 
                "type": "object", 
                "description": "StepResource represents the status of a resource to be tracked by an InstallPlan.", 
                "properties": {
                  "kind": {
                    "type": "string"
                  }, 
                  "group": {
                    "type": "string"
                  }, 
                  "name": {
                    "type": "string"
                  }, 
                  "sourceName": {
                    "type": "string"
                  }, 
                  "manifest": {
                    "type": "string"
                  }, 
                  "version": {
                    "type": "string"
                  }, 
                  "sourceNamespace": {
                    "type": "string"
                  }
                }
              }, 
              "resolving": {
                "type": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "phase": {
          "type": "string", 
          "description": "InstallPlanPhase is the current status of a InstallPlan as a whole."
        }, 
        "conditions": {
          "items": {
            "type": "object", 
            "description": "InstallPlanCondition represents the overall status of the execution of an InstallPlan.", 
            "properties": {
              "status": {
                "type": "string"
              }, 
              "lastUpdateTime": {
                "type": "string", 
                "format": "date-time"
              }, 
              "lastTransitionTime": {
                "type": "string", 
                "format": "date-time"
              }, 
              "reason": {
                "type": "string", 
                "description": "ConditionReason is a camelcased reason for the state transition."
              }, 
              "message": {
                "type": "string"
              }, 
              "type": {
                "type": "string", 
                "description": "InstallPlanConditionType describes the state of an InstallPlan at a certain point as a whole."
              }
            }
          }, 
          "type": "array"
        }
      }
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "approval", 
        "approved", 
        "clusterServiceVersionNames"
      ], 
      "type": "object", 
      "description": "InstallPlanSpec defines a set of Application resources to be installed", 
      "properties": {
        "clusterServiceVersionNames": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "generation": {
          "type": "integer"
        }, 
        "source": {
          "type": "string"
        }, 
        "approval": {
          "type": "string", 
          "description": "Approval is the user approval policy for an InstallPlan. It must be one of \"Automatic\" or \"Manual\"."
        }, 
        "approved": {
          "type": "boolean"
        }, 
        "sourceNamespace": {
          "type": "string"
        }
      }
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    }
  }
}