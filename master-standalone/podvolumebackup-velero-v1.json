{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "PodVolumeBackupSpec is the specification for a PodVolumeBackup.",
      "type": "object",
      "required": [
        "backupStorageLocation",
        "node",
        "pod",
        "repoIdentifier",
        "volume"
      ],
      "properties": {
        "backupStorageLocation": {
          "description": "BackupStorageLocation is the name of the backup storage location where the restic repository is stored.",
          "type": "string"
        },
        "node": {
          "description": "Node is the name of the node that the Pod is running on.",
          "type": "string"
        },
        "pod": {
          "description": "Pod is a reference to the pod containing the volume to be backed up.",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": [
                "string",
                "null"
              ]
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
              "type": [
                "string",
                "null"
              ]
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": [
                "string",
                "null"
              ]
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "repoIdentifier": {
          "description": "RepoIdentifier is the restic repository identifier.",
          "type": "string"
        },
        "tags": {
          "description": "Tags are a map of key-value pairs that should be applied to the volume backup as tags.",
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "volume": {
          "description": "Volume is the name of the volume within the Pod to be backed up.",
          "type": "string"
        }
      }
    },
    "status": {
      "description": "PodVolumeBackupStatus is the current status of a PodVolumeBackup.",
      "type": "object",
      "properties": {
        "completionTimestamp": {
          "description": "CompletionTimestamp records the time a backup was completed. Completion time is recorded even on failed backups. Completion time is recorded before uploading the backup object. The server's time is used for CompletionTimestamps",
          "format": "date-time"
        },
        "message": {
          "description": "Message is a message about the pod volume backup's status.",
          "type": [
            "string",
            "null"
          ]
        },
        "path": {
          "description": "Path is the full path within the controller pod being backed up.",
          "type": [
            "string",
            "null"
          ]
        },
        "phase": {
          "description": "Phase is the current state of the PodVolumeBackup.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "New",
            "InProgress",
            "Completed",
            "Failed"
          ]
        },
        "progress": {
          "description": "Progress holds the total number of bytes of the volume and the current number of backed up bytes. This can be used to display progress information about the backup operation.",
          "type": "object",
          "properties": {
            "bytesDone": {
              "type": "integer",
              "format": "int64"
            },
            "totalBytes": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "snapshotID": {
          "description": "SnapshotID is the identifier for the snapshot of the pod volume.",
          "type": [
            "string",
            "null"
          ]
        },
        "startTimestamp": {
          "description": "StartTimestamp records the time a backup was started. Separate from CreationTimestamp, since that value changes on restores. The server's time is used for StartTimestamps",
          "format": "date-time"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "velero.io",
      "kind": "PodVolumeBackup",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}